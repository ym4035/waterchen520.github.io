<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MyBatis04：注解和一对多,多对一处理</title>
      <link href="posts/83bd.html"/>
      <url>posts/83bd.html</url>
      
        <content type="html"><![CDATA[<h1 id="面向接口编程"><a href="#面向接口编程" class="headerlink" title="面向接口编程"></a>面向接口编程</h1><ul><li>大家之前都学过面向对象编程，也学习过接口，但在真正的开发中，很多时候我们会选择面向接口编程</li><li><strong>根本原因 :  解耦 , 可拓展 , 提高复用 , 分层开发中 , 上层不用管具体的实现 , 大家都遵守共同的标准 , 使得开发变得容易 , 规范性更好</strong></li><li>在一个面向对象的系统中，系统的各种功能是由许许多多的不同对象协作完成的。在这种情况下，各个对象内部是如何实现自己的,对系统设计人员来讲就不那么重要了；</li><li>而各个对象之间的协作关系则成为系统设计的关键。小到不同类之间的通信，大到各模块之间的交互，在系统设计之初都是要着重考虑的，这也是系统设计的主要工作内容。面向接口编程就是指按照这种思想来编程。</li></ul><h2 id="关于接口的理解"><a href="#关于接口的理解" class="headerlink" title="关于接口的理解"></a><strong>关于接口的理解</strong></h2><ul><li><p>接口从更深层次的理解，应是定义（规范，约束）与实现（名实分离的原则）的分离。</p></li><li><p>接口的本身反映了系统设计人员对系统的抽象理解。</p></li><li><p>接口应有两类：</p></li><li><ul><li>第一类是对一个个体的抽象，它可对应为一个抽象体(abstract class)；</li><li>第二类是对一个个体某一方面的抽象，即形成一个抽象面（interface）；</li></ul></li><li><p>一个体有可能有多个抽象面。抽象体与抽象面是有区别的。</p></li></ul><h2 id="三个面向区别"><a href="#三个面向区别" class="headerlink" title="三个面向区别"></a><strong>三个面向区别</strong></h2><ul><li><p>面向对象是指，我们考虑问题时，以对象为单位，考虑它的属性及方法 .</p></li><li><p>面向过程是指，我们考虑问题时，以一个具体的流程（事务过程）为单位，考虑它的实现 .</p></li><li><p>接口设计与非接口设计是针对复用技术而言的，与面向对象（过程）不是一个问题.更多的体现就是对系统整体的架构</p></li></ul><h1 id="利用注解开发"><a href="#利用注解开发" class="headerlink" title="利用注解开发"></a>利用注解开发</h1><ul><li><p><strong>mybatis最初配置信息是基于 XML ,映射语句(SQL)也是定义在 XML 中的。而到MyBatis 3提供了新的基于注解的配置。不幸的是，Java 注解的的表达力和灵活性十分有限。最强大的 MyBatis 映射并不能用注解来构建</strong></p></li><li><p>sql 类型主要分成 :</p></li><li><ul><li>@select ()</li><li>@update ()</li><li>@Insert ()</li><li>@delete ()</li></ul></li></ul><p><strong>注意：</strong>利用注解开发就不需要mapper.xml映射文件了 .</p><ol><li>我们在我们的接口中添加注解</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//查询全部用户</span><br><span class="line">@Select(&quot;select id,name,pwd password from user&quot;)</span><br><span class="line">public List<span class="tag">&lt;<span class="name">User</span>&gt;</span> getAllUser();</span><br></pre></td></tr></table></figure><ol start="2"><li>在mybatis的核心配置文件中注入</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用class绑定接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.violet.mapper.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>我们去进行测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetAllUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   <span class="comment">//本质上利用了jvm的动态代理机制</span></span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">   List&lt;User&gt; users = mapper.getAllUser();</span><br><span class="line">   <span class="keyword">for</span> (User user : users)&#123;</span><br><span class="line">       System.out.println(user);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>利用Debug查看本质</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210523101834.png"></p><ol start="5"><li>本质上利用了jvm的动态代理机制</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210523101926.png"></p><ol start="6"><li>Mybatis详细的执行流程</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210523101950.png"></p><h2 id="注解增删改"><a href="#注解增删改" class="headerlink" title="注解增删改"></a>注解增删改</h2><p>改造MybatisUtils工具类的getSession( ) 方法，重载实现。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取SqlSession连接</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getSession(<span class="keyword">true</span>); <span class="comment">//事务自动提交</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSession</span><span class="params">(<span class="keyword">boolean</span> flag)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqlSessionFactory.openSession(flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【注意】确保实体类和数据库字段对应</p><p><strong>查询：</strong></p><ol><li>编写接口方法注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询用户</span></span><br><span class="line"><span class="meta">@Select(&quot;select * from user where id = #&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function">User <span class="title">selectUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">   User user = mapper.selectUserById(<span class="number">1</span>);</span><br><span class="line">   System.out.println(user);</span><br><span class="line"></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a><strong>新增</strong></h3><ol><li>编写接口方法注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加一个用户</span></span><br><span class="line"><span class="meta">@Insert(&quot;insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">   User user = <span class="keyword">new</span> User(<span class="number">6</span>, <span class="string">&quot;秦疆&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">   mapper.addUser(user);</span><br><span class="line"></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a><strong>修改</strong></h3><ol><li>编写接口方法注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改一个用户</span></span><br><span class="line"><span class="meta">@Update(&quot;update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><p>2、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">   User user = <span class="keyword">new</span> User(<span class="number">6</span>, <span class="string">&quot;秦疆&quot;</span>, <span class="string">&quot;zxcvbn&quot;</span>);</span><br><span class="line">   mapper.updateUser(user);</span><br><span class="line"></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a><strong>删除</strong></h3><p>1、编写接口方法注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id删除用</span></span><br><span class="line"><span class="meta">@Delete(&quot;delete from user where id = #&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span><span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><p>2、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">   mapper.deleteUser(<span class="number">6</span>);</span><br><span class="line">   </span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>【注意点：增删改一定记得对事务的处理】</strong></p><h1 id="关于-Param"><a href="#关于-Param" class="headerlink" title="关于@Param"></a>关于@Param</h1><p>@Param注解用于给方法参数起一个名字。以下是总结的使用原则：</p><ul><li>在方法只接受一个参数的情况下，可以不使用@Param。</li><li>在方法接受多个参数的情况下，建议一定要使用@Param注解给参数命名。</li><li>如果参数是 JavaBean ， 则不能使用@Param。</li><li>不使用@Param注解时，参数只能有一个，并且是Javabean。</li></ul><h1 id="与-的区别"><a href="#与-的区别" class="headerlink" title="#与$的区别"></a>#与$的区别</h1><ul><li><p>#{} 的作用主要是替换预编译语句(PrepareStatement)中的占位符? 【推荐使用】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO user (name) VALUES (#&#123;name&#125;);</span><br><span class="line">INSERT INTO user (name) VALUES (?);</span><br></pre></td></tr></table></figure></li><li><p>${} 的作用是直接进行字符串替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO user (name) VALUES (&#39;$&#123;name&#125;&#39;);</span><br><span class="line">INSERT INTO user (name) VALUES (&#39;violet&#39;);</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>使用注解和配置文件协同开发，才是MyBatis的最佳实践！</p></blockquote><p>使用注解开发可以提高我们的开发效率，可以合理使用哦！</p><h1 id="多对一的处理"><a href="#多对一的处理" class="headerlink" title="多对一的处理"></a>多对一的处理</h1><p>多对一的理解：</p><ul><li>多个学生对应一个老师</li><li>如果对于学生这边，就是一个多对一的现象，即从学生这边关联一个老师！</li></ul><h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><p><img src= "/img/loading.gif" data-lazy-src="image/640" alt="图片"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `teacher` (</span><br><span class="line">`id` INT(<span class="number">10</span>) NOT NULL,</span><br><span class="line">`name` VARCHAR(<span class="number">30</span>) DEFAULT NULL,</span><br><span class="line"><span class="function">PRIMARY <span class="title">KEY</span> <span class="params">(`id`)</span></span></span><br><span class="line"><span class="function">) ENGINE</span>=INNODB DEFAULT CHARSET=utf8</span><br><span class="line"></span><br><span class="line"><span class="function">INSERT INTO <span class="title">teacher</span><span class="params">(`id`, `name`)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">1</span>, <span class="string">&#x27;秦老师&#x27;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `student` (</span><br><span class="line">`id` INT(<span class="number">10</span>) NOT NULL,</span><br><span class="line">`name` VARCHAR(<span class="number">30</span>) DEFAULT NULL,</span><br><span class="line">`tid` INT(<span class="number">10</span>) DEFAULT NULL,</span><br><span class="line"><span class="function">PRIMARY <span class="title">KEY</span> <span class="params">(`id`)</span>,</span></span><br><span class="line"><span class="function">KEY `fktid` <span class="params">(`tid`)</span>,</span></span><br><span class="line"><span class="function">CONSTRAINT `fktid` FOREIGN <span class="title">KEY</span> <span class="params">(`tid`)</span> REFERENCES `teacher` <span class="params">(`id`)</span></span></span><br><span class="line"><span class="function">) ENGINE</span>=INNODB DEFAULT CHARSET=utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;小红&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;小张&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;小李&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;小王&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="搭建测试环境"><a href="#搭建测试环境" class="headerlink" title="搭建测试环境"></a>搭建测试环境</h2><ol><li><p>IDEA安装Lombok插件</p></li><li><p>引入Maven依赖</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在代码中增加注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span> <span class="comment">//GET,SET,ToString，有参，无参构造</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="comment">//多个学生可以是同一个老师，即多对一</span></span><br><span class="line">   <span class="keyword">private</span> Teacher teacher;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>编写实体类对应的Mapper接口 【两个】</li></ol><ul><li><strong>无论有没有需求，都应该写上，以备后来之需！</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentMapper</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TeacherMapper</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>编写Mapper接口对应的 mapper.xml配置文件 【两个】</li></ol><ul><li><strong>无论有没有需求，都应该写上，以备后来之需！</strong></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">       <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">       <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.kuang.mapper.StudentMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">       <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">       <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.kuang.mapper.TeacherMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="按查询嵌套处理"><a href="#按查询嵌套处理" class="headerlink" title="按查询嵌套处理"></a>按查询嵌套处理</h2><ol><li>给StudentMapper接口增加方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有学生及对应老师的信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getStudents</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写对应的Mapper文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">       <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">       <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.kuang.mapper.StudentMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   需求：获取所有学生及对应老师的信息</span></span><br><span class="line"><span class="comment">   思路：</span></span><br><span class="line"><span class="comment">       1. 获取所有学生的信息</span></span><br><span class="line"><span class="comment">       2. 根据获取的学生信息的老师ID-&gt;获取该老师的信息</span></span><br><span class="line"><span class="comment">       3. 思考问题，这样学生的结果集中应该包含老师，该如何处理呢，数据库中我们一般使用关联查询？</span></span><br><span class="line"><span class="comment">           1. 做一个结果集映射：StudentTeacher</span></span><br><span class="line"><span class="comment">           2. StudentTeacher结果集的类型为 Student</span></span><br><span class="line"><span class="comment">           3. 学生中老师的属性为teacher，对应数据库中为tid。</span></span><br><span class="line"><span class="comment">              多个 [1,...）学生关联一个老师=&gt; 一对一，一对多</span></span><br><span class="line"><span class="comment">           4. 查看官网找到：association – 一个复杂类型的关联；使用它来处理关联查询</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudents&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentTeacher&quot;</span>&gt;</span></span><br><span class="line">    select * from student</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--association关联属性 property属性名 javaType属性类型 column在多的一方的表中的列名--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span>  <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   这里传递过来的id，只有一个属性的时候，下面可以写任何值</span></span><br><span class="line"><span class="comment">   association中column多参数配置：</span></span><br><span class="line"><span class="comment">       column=&quot;&#123;key=value,key=value&#125;&quot;</span></span><br><span class="line"><span class="comment">       其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">      select * from teacher where id = #&#123;id&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>编写完毕去Mybatis配置文件中，注册Mapper！</p></li><li><p>注意点说明：</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--association关联属性 property属性名 javaType属性类型 column在多的一方的表中的列名--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span>  <span class="attr">column</span>=<span class="string">&quot;&#123;id=tid,name=tid&#125;&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">这里传递过来的id，只有一个属性的时候，下面可以写任何值</span></span><br><span class="line"><span class="comment">association中column多参数配置：</span></span><br><span class="line"><span class="comment">   column=&quot;&#123;key=value,key=value&#125;&quot;</span></span><br><span class="line"><span class="comment">   其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">  select * from teacher where id = #&#123;id&#125; and name = #&#123;name&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetStudents</span><span class="params">()</span></span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   StudentMapper mapper = session.getMapper(StudentMapper.class);</span><br><span class="line"></span><br><span class="line">   List&lt;Student&gt; students = mapper.getStudents();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (Student student : students)&#123;</span><br><span class="line">       System.out.println(</span><br><span class="line">               <span class="string">&quot;学生名:&quot;</span>+ student.getName()</span><br><span class="line">                       +<span class="string">&quot;\t老师:&quot;</span>+student.getTeacher().getName());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="按结果嵌套处理"><a href="#按结果嵌套处理" class="headerlink" title="按结果嵌套处理"></a>按结果嵌套处理</h2><p>除了上面这种方式，还有其他思路吗？</p><p>我们还可以按照结果进行嵌套处理；</p><ol><li>接口方法编写</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getStudents2</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写对应的mapper文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">按查询结果嵌套处理</span></span><br><span class="line"><span class="comment">思路：</span></span><br><span class="line"><span class="comment">   1. 直接查询出结果，进行结果集的映射</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudents2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentTeacher2&quot;</span> &gt;</span></span><br><span class="line">  select s.id sid, s.name sname , t.name tname</span><br><span class="line">  from student s,teacher t</span><br><span class="line">  where s.tid = t.id</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--关联对象property 关联对象在Student实体类中的属性--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>去mybatis-config文件中注入【此处应该处理过了】</p></li><li><p>测试</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetStudents2</span><span class="params">()</span></span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   StudentMapper mapper = session.getMapper(StudentMapper.class);</span><br><span class="line"></span><br><span class="line">   List&lt;Student&gt; students = mapper.getStudents2();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (Student student : students)&#123;</span><br><span class="line">       System.out.println(</span><br><span class="line">               <span class="string">&quot;学生名:&quot;</span>+ student.getName()</span><br><span class="line">                       +<span class="string">&quot;\t老师:&quot;</span>+student.getTeacher().getName());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>按照查询进行嵌套处理就像SQL中的子查询</p><p>按照结果进行嵌套处理就像SQL中的联表查询</p><p>一对多处理</p><h1 id="一对多的处理"><a href="#一对多的处理" class="headerlink" title="一对多的处理"></a>一对多的处理</h1><p>一对多的理解：</p><ul><li>一个老师拥有多个学生</li><li>如果对于老师这边，就是一个一对多的现象，即从一个老师下面拥有一群学生（集合）！</li></ul><h2 id="实体类编写"><a href="#实体类编写" class="headerlink" title="实体类编写"></a>实体类编写</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="comment">//一个老师多个学生</span></span><br><span class="line">   <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>….. 和之前一样，搭建测试的环境！</p><h2 id="按结果嵌套处理-1"><a href="#按结果嵌套处理-1" class="headerlink" title="按结果嵌套处理"></a>按结果嵌套处理</h2><ol><li>TeacherMapper接口编写方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取指定老师，及老师下的所有学生</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Teacher <span class="title">getTeacher</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写接口对应的Mapper配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.kuang.mapper.TeacherMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   思路:</span></span><br><span class="line"><span class="comment">       1. 从学生表和老师表中查出学生id，学生姓名，老师姓名</span></span><br><span class="line"><span class="comment">       2. 对查询出来的操作做结果集映射</span></span><br><span class="line"><span class="comment">           1. 集合的话，使用collection！</span></span><br><span class="line"><span class="comment">               JavaType和ofType都是用来指定对象类型的</span></span><br><span class="line"><span class="comment">               JavaType是用来指定pojo中属性的类型</span></span><br><span class="line"><span class="comment">               ofType指定的是映射到list集合属性中pojo的类型。</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;TeacherStudent&quot;</span>&gt;</span></span><br><span class="line">      select s.id sid, s.name sname , t.name tname, t.id tid</span><br><span class="line">      from student s,teacher t</span><br><span class="line">      where s.tid = t.id and t.id=#&#123;id&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;TeacherStudent&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span>  <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将Mapper文件注册到MyBatis-config文件中</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/TeacherMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetTeacher</span><span class="params">()</span></span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   TeacherMapper mapper = session.getMapper(TeacherMapper.class);</span><br><span class="line">   Teacher teacher = mapper.getTeacher(<span class="number">1</span>);</span><br><span class="line">   System.out.println(teacher.getName());</span><br><span class="line">   System.out.println(teacher.getStudents());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="按查询嵌套处理-1"><a href="#按查询嵌套处理-1" class="headerlink" title="按查询嵌套处理"></a>按查询嵌套处理</h2><ol><li>TeacherMapper接口编写方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Teacher <span class="title">getTeacher2</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写接口对应的Mapper配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;TeacherStudent2&quot;</span>&gt;</span></span><br><span class="line">select * from teacher where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;TeacherStudent2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--column是一对多的外键 , 写的是一的主键的列名--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;ArrayList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">  select * from student where tid = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>将Mapper文件注册到MyBatis-config文件中</p></li><li><p>测试</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetTeacher2</span><span class="params">()</span></span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   TeacherMapper mapper = session.getMapper(TeacherMapper.class);</span><br><span class="line">   Teacher teacher = mapper.getTeacher2(<span class="number">1</span>);</span><br><span class="line">   System.out.println(teacher.getName());</span><br><span class="line">   System.out.println(teacher.getStudents());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><ol><li><p>关联-association</p></li><li><p>集合-collection</p></li><li><p>所以association是用于一对一和多对一，而collection是用于一对多的关系</p></li><li><p>JavaType和ofType都是用来指定对象类型的</p><ul><li>JavaType是用来指定pojo中属性的类型</li><li>ofType指定的是映射到list集合属性中pojo的类型。</li></ul></li></ol><p><strong>注意说明：</strong></p><ol><li><p>保证SQL的可读性，尽量通俗易懂</p></li><li><p>根据实际要求，尽量编写性能更高的SQL语句</p></li><li><p>注意属性名和字段不一致的问题</p></li><li><p>注意一对多和多对一 中：字段和属性对应的问题</p></li><li><p>尽量使用Log4j，通过日志来查看自己的错误</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Element</title>
      <link href="posts/5471.html"/>
      <url>posts/5471.html</url>
      
        <content type="html"><![CDATA[<h1 id="Element-UI-引言"><a href="#Element-UI-引言" class="headerlink" title="Element UI 引言"></a>Element UI 引言</h1><blockquote><p>官网: <a href="https://element.eleme.io/#/zh-CN">https://element.eleme.io/#/zh-CN</a></p></blockquote><h2 id="官方定义"><a href="#官方定义" class="headerlink" title="官方定义"></a>官方定义</h2><blockquote><p><code>网站快速成型工具</code> 和 <code>桌面端组件库</code></p></blockquote><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><blockquote><p>element ui 就是基于vue的一个ui框架,该框架基于vue开发了很多相关组件,方便我们快速开发页面。</p></blockquote><h2 id="由来"><a href="#由来" class="headerlink" title="由来"></a>由来</h2><blockquote><p>饿了么前端团队 基于vue进行开发并且进行了开源 element ui 中提供全部都是封装好组件。</p></blockquote><hr><h1 id="安装Element-UI"><a href="#安装Element-UI" class="headerlink" title="安装Element UI"></a>安装Element UI</h1><h2 id="通过vue脚手架创建项目-这里是脚手架2"><a href="#通过vue脚手架创建项目-这里是脚手架2" class="headerlink" title="通过vue脚手架创建项目(这里是脚手架2)"></a>通过vue脚手架创建项目(这里是脚手架2)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack element(项目名)</span><br></pre></td></tr></table></figure><h2 id="在vue脚手架2-项目中安装elementui"><a href="#在vue脚手架2-项目中安装elementui" class="headerlink" title="在vue脚手架2 项目中安装elementui"></a>在vue脚手架2 项目中安装elementui</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.下载elementui的依赖</span></span><br><span class="line"><span class="code">npm i element-ui -S</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"># 2.在入口文件main.js指定当前项目中使用elementui</span></span><br><span class="line"><span class="code">import ElementUI from &#x27;element-ui&#x27;;</span></span><br><span class="line"><span class="code">import &#x27;element-ui/lib/theme-chalk/index.css&#x27;;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">  //在vue脚手架中使用elementui(在入口文件main.js指定)</span></span><br><span class="line"><span class="code">Vue.use(ElementUI);</span></span><br></pre></td></tr></table></figure><h2 id="通过vue脚手架3创建项目"><a href="#通过vue脚手架3创建项目" class="headerlink" title="通过vue脚手架3创建项目"></a>通过vue脚手架3创建项目</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue vue create element-users(项目名)</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522145220.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522145858.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522150111.png" alt="image-20210522150110349"></p><p>router我个人还是喜欢使用<code>history</code>模式，如果使用<code>hash</code>模式请在router那项<code>选择no</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522150237.png"></p><p>这样就算构建完成了，接下来我们安装ElementUI</p><p>首先进入对应的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd element-users(项目名)</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue add element</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522150858.png" alt="image-20210522150857104"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522151406.png" alt="image-20210522151405586"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522151609.png" alt="image-20210522151607592"></p><p>虽然报了一大堆错误，查了下好像是node版本什么的，还有说淘宝镜像的问题（可我根本没用。。），还有什么npm缓存啊什么的，稀奇古怪的，反正能用就行QWQ</p><p>我们来看看package.json</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522151814.png" alt="image-20210522151812605"></p><p>证明是没有问题的</p><p>然后我们安装一下依赖，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>安装完以后我们直接启动，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522152130.png"></p><p>然后我们在App.vue中添加以下代码，测试一下ElementUi</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">el-button</span>&gt;</span></span>我是按钮<span class="xml"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522152616.png"></p><p>此时按钮正常显示，说明引入成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522152639.png"></p><p>关于默认颜色是这种绿色可以在element-variables.scss文件中修改</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522152809.png" alt="image-20210522152807142"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522152824.png" alt="image-20210522152823439"></p><p>改成 <code>#409eff</code> 就和官网一致了</p><h1 id="按钮组件-示例"><a href="#按钮组件-示例" class="headerlink" title="按钮组件(示例)"></a>按钮组件(示例)</h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522150220.png" alt="image-20210522150219315"></p><h2 id="默认样式按钮"><a href="#默认样式按钮" class="headerlink" title="默认样式按钮"></a>默认样式按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="简洁按钮"><a href="#简洁按钮" class="headerlink" title="简洁按钮"></a>简洁按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span>&gt;</span>朴素按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">plain</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">plain</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">plain</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">plain</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">plain</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="圆角按钮"><a href="#圆角按钮" class="headerlink" title="圆角按钮"></a>圆角按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">round</span>&gt;</span>圆角按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">round</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">round</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">round</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">round</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">round</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="图标按钮"><a href="#图标按钮" class="headerlink" title="图标按钮"></a>图标按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-search&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-edit&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-check&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-message&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-delete&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="按钮组件的详细使用"><a href="#按钮组件的详细使用" class="headerlink" title="按钮组件的详细使用"></a>按钮组件的详细使用</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总结:日后使用element ui的相关组件时需要注意的是 所有组件都是el-组件名称开头</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建按钮"><a href="#创建按钮" class="headerlink" title="创建按钮"></a>创建按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="按钮属性使用"><a href="#按钮属性使用" class="headerlink" title="按钮属性使用"></a>按钮属性使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> 属性名=<span class="string">属性值</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">plain</span>=<span class="string">true</span> <span class="attr">round</span> <span class="attr">circle</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-loading&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>总结:在elementui中所有组件的属性全部写在组件标签上</code></p><h2 id="按钮组使用"><a href="#按钮组使用" class="headerlink" title="按钮组使用"></a>按钮组使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button-group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-back&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-right&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button-group</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注意:</code></p><ul><li>在element ui中所有组件都是 <code>el-组件名称</code> 方式进行命名</li><li>在element ui中组件的属性使用<code>都是直接将属性名=属性值方式写在对应的组件标签上</code></li></ul><hr><h1 id="Link-文字链接组件"><a href="#Link-文字链接组件" class="headerlink" title="Link 文字链接组件"></a>Link 文字链接组件</h1><h2 id="文字链接组件的创建"><a href="#文字链接组件的创建" class="headerlink" title="文字链接组件的创建"></a>文字链接组件的创建</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文字链接组件的属性的使用"><a href="#文字链接组件的属性的使用" class="headerlink" title="文字链接组件的属性的使用"></a>文字链接组件的属性的使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>  <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> &gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span><span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">disabled</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-platform-eleme&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="Layout-栅格-布局组件的使用"><a href="#Layout-栅格-布局组件的使用" class="headerlink" title="Layout (栅格)布局组件的使用"></a>Layout (栅格)布局组件的使用</h1><p><code>通过基础的 24 分栏，迅速简便地创建布局</code></p><p><code>在element ui中布局组件将页面划分为多个行row,每行最多分为24栏(列)</code></p><h2 id="使用Layout组件"><a href="#使用Layout组件" class="headerlink" title="使用Layout组件"></a>使用Layout组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注意:</code></p><ul><li>在一个布局组件中 是由 <code>row</code> 和 <code>col</code> 组合而成</li><li>在使用时要区分 <code>row属性</code> 和 <code>col属性</code></li></ul><h2 id="属性的使用"><a href="#属性的使用" class="headerlink" title="属性的使用"></a>属性的使用</h2><ul><li><p>行属性使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span> <span class="attr">:gutter</span>=<span class="string">&quot;50&quot;</span> <span class="attr">tag</span>=<span class="string">&quot;span&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用4份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用3份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;9&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用9份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>列属性的使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;9&quot;</span> <span class="attr">:psuh</span>=<span class="string">&quot;3&quot;</span> <span class="attr">xs</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用12分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用6分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="Container-布局容器组件"><a href="#Container-布局容器组件" class="headerlink" title="Container 布局容器组件"></a>Container 布局容器组件</h1><h2 id="创建布局容器"><a href="#创建布局容器" class="headerlink" title="创建布局容器"></a>创建布局容器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="容器中包含的子元素"><a href="#容器中包含的子元素" class="headerlink" title="容器中包含的子元素"></a>容器中包含的子元素</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-header</span>&gt;</span>：顶栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-aside</span>&gt;</span>：侧边栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-main</span>&gt;</span>：主要区域容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-footer</span>&gt;</span>：底栏容器。</span><br></pre></td></tr></table></figure><h2 id="容器的嵌套使用"><a href="#容器的嵌套使用" class="headerlink" title="容器的嵌套使用"></a>容器的嵌套使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--容器嵌套使用--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="水平容器"><a href="#水平容器" class="headerlink" title="水平容器"></a>水平容器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注意:当子元素中没有有 el-header 或 el-footer 时容器排列为水平</code></p><h2 id="垂直容器"><a href="#垂直容器" class="headerlink" title="垂直容器"></a>垂直容器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--footer--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="Form相关组件"><a href="#Form相关组件" class="headerlink" title="Form相关组件"></a>Form相关组件</h1><h2 id="Radio单选按钮"><a href="#Radio单选按钮" class="headerlink" title="Radio单选按钮"></a>Radio单选按钮</h2><h3 id="创建Radio按钮"><a href="#创建Radio按钮" class="headerlink" title="创建Radio按钮"></a>创建Radio按钮</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--组件创建--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注意:在使用radio单选按钮是至少加入v-model和label两个属性</code></p><h3 id="Radio按钮属性的使用"><a href="#Radio按钮属性的使用" class="headerlink" title="Radio按钮属性的使用"></a>Radio按钮属性的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">disabled</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>总结:属性使用还是直接卸载对应的组件标签上以 属性名=属性值 方式使用</code></p><h3 id="Radio事件的使用"><a href="#Radio事件的使用" class="headerlink" title="Radio事件的使用"></a>Radio事件的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123; <span class="comment">//定义的事件处理函数</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.label);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>总结:</code></p><ul><li> 事件的使用也是和属性使用是一致都是直接写在对应的组件标签上</li><li> 事件在使用时必须使用Vue中绑定时间方式进行使用如 @事件名=事件处理函数(绑在在vue组件中对应函数)</li></ul><h3 id="radio按钮组"><a href="#radio按钮组" class="headerlink" title="radio按钮组"></a>radio按钮组</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;3&quot;</span>&gt;</span>备选项3<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;6&quot;</span>&gt;</span>备选项6<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;9&quot;</span>&gt;</span>备选项9<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        radio: 6</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="checkbox组件"><a href="#checkbox组件" class="headerlink" title="checkbox组件"></a>checkbox组件</h2><h3 id="创建checkbox组件"><a href="#创建checkbox组件" class="headerlink" title="创建checkbox组件"></a>创建checkbox组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性使用"><a href="#属性使用" class="headerlink" title="属性使用"></a>属性使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">disabled</span> <span class="attr">true-label</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">checked</span> <span class="attr">border</span> <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件使用"><a href="#事件使用" class="headerlink" title="事件使用"></a>事件使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span><span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="复选框组的使用"><a href="#复选框组的使用" class="headerlink" title="复选框组的使用"></a>复选框组的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox-group</span> @<span class="attr">change</span>=<span class="string">&quot;bb&quot;</span> <span class="attr">:min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 A&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 B&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 C&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;选中且禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span>,</span></span><br><span class="line">                checkList:[],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checkList);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Input-输入框组件"><a href="#Input-输入框组件" class="headerlink" title="Input 输入框组件"></a>Input 输入框组件</h2><h3 id="创建Input组件"><a href="#创建Input组件" class="headerlink" title="创建Input组件"></a>创建Input组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;Violet&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span> <span class="attr">disabled</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;price&quot;</span> <span class="attr">:maxlength</span>=<span class="string">&quot;10&quot;</span> <span class="attr">show-word-limit</span> <span class="attr">:minlength</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">prefix-icon</span>=<span class="string">&quot;el-icon-user-solid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">suffix-icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">show-password</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;Violet&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件使用-1"><a href="#事件使用-1" class="headerlink" title="事件使用"></a>事件使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> @<span class="attr">blur</span>=<span class="string">&quot;aaa&quot;</span> @<span class="attr">focus</span>=<span class="string">&quot;bbb&quot;</span> @<span class="attr">clear</span>=<span class="string">&quot;clears&quot;</span> <span class="attr">clearable</span> @<span class="attr">input</span>=<span class="string">&quot;ccc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;Violet&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;失去焦点&#x27;</span>);</span></span><br><span class="line">                ;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bbb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;获取焦点&quot;</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">ccc</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;改变:&quot;</span>+value);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">clears</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;清除&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法的使用"><a href="#方法的使用" class="headerlink" title="方法的使用"></a>方法的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>方法的使用<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;inputs&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;focusInputs&quot;</span>&gt;</span>focus方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;blurInputs&quot;</span>&gt;</span>blur方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//调用focus方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">focusInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.focus();</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">           <span class="comment">//调用失去焦点方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">blurInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.blur();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>总结</code></p><ul><li> 在使用组件的方法时需要在对应的组件中加入 <code>ref=&quot;组件别名&quot;</code></li><li> 在调用方法时直接使用 <code>this.$refs.组件别名.方法名()</code></li></ul><blockquote><p><code>注意:在elementui中所有组件 都存在 属性 事件 和方法</code></p><p><code>属性:</code>直接写在对应的组件标签上 使用方式:<code>属性名=属性值</code>方式</p><p><code>事件</code>: 直接使用vue绑定事件方式写在对应的组件标签上 使用方式:<code>@事件名=vue中事件处理函数</code></p><p><code>方法</code>: 1.在对应组件标签上使用<code>ref=组件别名</code> 2.<code>通过使用this.$refs.组件别名.方法名()</code>进行调用</p></blockquote><h2 id="Select选择器组件的使用"><a href="#Select选择器组件的使用" class="headerlink" title="Select选择器组件的使用"></a>Select选择器组件的使用</h2><h3 id="组件创建"><a href="#组件创建" class="headerlink" title="组件创建"></a>组件创建</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.数据写死在页面上</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;cityName&quot;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">el-option</span> <span class="attr">value</span>=<span class="string">&quot;北京&quot;</span>&gt;</span></span>北京<span class="xml"><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">el-option</span> <span class="attr">value</span>=<span class="string">&quot;天津&quot;</span>&gt;</span></span>天津<span class="xml"><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="code">注意:1.要求下拉列表中必须存在option的value属性值 2.要求select中必须使用v-model进行数据绑定</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"># 2.如何动态获取数据</span></span><br><span class="line"><span class="code"> &lt;el-select&gt;</span></span><br><span class="line"><span class="code"> &lt;el-option v-for=&quot;option in options&quot; :label=&quot;option.name&quot; :value=&quot;option.id&quot; :key=&quot;option.id&quot;&gt;</span></span><br><span class="line"><span class="code"> &lt;/el-option&gt;</span></span><br><span class="line"><span class="code"> &lt;/el-select&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">  &lt;script&gt;</span></span><br><span class="line"><span class="code">      export default &#123;</span></span><br><span class="line"><span class="code">          name: &quot;Select&quot;,</span></span><br><span class="line"><span class="code">          data()&#123;</span></span><br><span class="line"><span class="code">              return&#123;</span></span><br><span class="line"><span class="code">                  options:[</span></span><br><span class="line"><span class="code">                      &#123;id:&#x27;1&#x27;,name:&quot;研发部&quot;&#125;,</span></span><br><span class="line"><span class="code">                      &#123;id:&#x27;2&#x27;,name:&quot;小卖部&quot;&#125;,</span></span><br><span class="line"><span class="code">                      &#123;id:&#x27;3&#x27;,name:&quot;小米部&quot;&#125;,</span></span><br><span class="line"><span class="code">                  ]</span></span><br><span class="line"><span class="code">              &#125;</span></span><br><span class="line"><span class="code">          &#125;,</span></span><br><span class="line"><span class="code">      &#125;</span></span><br><span class="line"><span class="code">  &lt;/script&gt;</span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code"># 3.获取下拉列表选中数据</span></span><br><span class="line"><span class="code"> &lt;el-select v-model=&quot;cityId&quot; multiple clearable&gt;</span></span><br><span class="line"><span class="code">        &lt;el-option v-for=&quot;option in options&quot; :label=&quot;option.name&quot; :value=&quot;option.id&quot; :key=&quot;option.id&quot;&gt;&lt;/el-option&gt;</span></span><br><span class="line"><span class="code">&lt;/el-select&gt;</span></span><br><span class="line"><span class="code">&lt;script&gt;</span></span><br><span class="line"><span class="code">    export default &#123;</span></span><br><span class="line"><span class="code">        name: &quot;Select&quot;,</span></span><br><span class="line"><span class="code">        data()&#123;</span></span><br><span class="line"><span class="code">            return&#123;</span></span><br><span class="line"><span class="code">                options:[</span></span><br><span class="line"><span class="code">                    &#123;id:&#x27;1&#x27;,name:&quot;研发部&quot;&#125;,</span></span><br><span class="line"><span class="code">                    &#123;id:&#x27;2&#x27;,name:&quot;小卖部&quot;&#125;,</span></span><br><span class="line"><span class="code">                    &#123;id:&#x27;3&#x27;,name:&quot;小米部&quot;&#125;,</span></span><br><span class="line"><span class="code">                ],</span></span><br><span class="line"><span class="code">                cityId:&#x27;&#x27;</span></span><br><span class="line"><span class="code">            &#125;</span></span><br><span class="line"><span class="code">        &#125;,</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性使用-1"><a href="#属性使用-1" class="headerlink" title="属性使用"></a>属性使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;cityId&quot;</span> <span class="attr">multiple</span> <span class="attr">clearable</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件的使用"><a href="#事件的使用" class="headerlink" title="事件的使用"></a>事件的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;cityId&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aaa&quot;</span> <span class="attr">multiple</span> <span class="attr">clearable</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">v-for</span>=<span class="string">&quot;option in options&quot;</span> <span class="attr">:label</span>=<span class="string">&quot;option.name&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;option.id&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;option.id&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Select&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line">                options:[</span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">id</span>:<span class="string">&#x27;1&#x27;</span>,<span class="attr">name</span>:<span class="string">&quot;研发部&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">id</span>:<span class="string">&#x27;2&#x27;</span>,<span class="attr">name</span>:<span class="string">&quot;小卖部&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">id</span>:<span class="string">&#x27;3&#x27;</span>,<span class="attr">name</span>:<span class="string">&quot;小米部&quot;</span>&#125;,</span></span><br><span class="line">                ],</span><br><span class="line"><span class="javascript">                cityId:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                cityName:<span class="string">&#x27;&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(value);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法的使用-1"><a href="#方法的使用-1" class="headerlink" title="方法的使用"></a>方法的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.给组件通过ref起别名并绑定到vue实例中</span><br><span class="line"> <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">ref</span>=<span class="string">&quot;selects&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;cityId&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aaa&quot;</span> <span class="attr">multiple</span> <span class="attr">clearable</span>&gt;</span></span><br><span class="line">       ....</span><br><span class="line"> <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">2.调用方法</span><br><span class="line"> this.$refs.selects.focus();//方法调用</span><br></pre></td></tr></table></figure><hr><h2 id="Switch-开关组件"><a href="#Switch-开关组件" class="headerlink" title="Switch 开关组件"></a>Switch 开关组件</h2><h3 id="Switch组件的创建"><a href="#Switch组件的创建" class="headerlink" title="Switch组件的创建"></a>Switch组件的创建</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-switch</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">&quot;Switchs&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">        value:<span class="literal">true</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性使用-2"><a href="#属性使用-2" class="headerlink" title="属性使用"></a>属性使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span> <span class="attr">active-text</span>=<span class="string">&quot;打开&quot;</span> <span class="attr">active-color</span>=<span class="string">&quot;#13ce66&quot;</span> <span class="attr">inactive-color</span>=<span class="string">&quot;#ff4949&quot;</span> <span class="attr">:active-</span></span></span><br><span class="line"><span class="tag">           <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> <span class="attr">:inactive-value</span>=<span class="string">&quot;false&quot;</span> <span class="attr">inactive-text</span>=<span class="string">&quot;关闭&quot;</span> <span class="attr">:width</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-switch</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件使用-2"><a href="#事件使用-2" class="headerlink" title="事件使用"></a>事件使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-switch</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Switchs&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                value:<span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(value);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法使用"><a href="#方法使用" class="headerlink" title="方法使用"></a>方法使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">ref</span>=<span class="string">&quot;sw&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aaa&quot;</span> <span class="attr">active-text</span>=<span class="string">&quot;打开&quot;</span> <span class="attr">active-color</span>=<span class="string">&quot;#13ce66&quot;</span> <span class="attr">inactive-color</span>=<span class="string">&quot;#ff4949&quot;</span> <span class="attr">:active-value</span>=<span class="string">&quot;true&quot;</span> <span class="attr">:inactive-value</span>=<span class="string">&quot;false&quot;</span> <span class="attr">inactive-text</span>=<span class="string">&quot;关闭&quot;</span> <span class="attr">:width</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-switch</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;bbb&quot;</span>&gt;</span>调用方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Switchs&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                value:<span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(value);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bbb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">                alert();</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.sw.focus();<span class="comment">//方法调用</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="DatePicker组件"><a href="#DatePicker组件" class="headerlink" title="DatePicker组件"></a>DatePicker组件</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-date-picker</span> <span class="attr">v-model</span>=<span class="string">&quot;createDate&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性的使用-1"><a href="#属性的使用-1" class="headerlink" title="属性的使用"></a>属性的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-date-picker</span><br><span class="line">        v-model=&quot;createDate&quot;</span><br><span class="line">        :editable=&quot;false&quot;</span><br><span class="line">        :clearable=&quot;false&quot;</span><br><span class="line">        placeholder=&quot;请输入创建时间&quot;</span><br><span class="line">        type=&quot;daterange&quot;</span><br><span class="line">        start-placeholder=&quot;生产时间&quot;</span><br><span class="line">        end-placeholder=&quot;过期时间&quot;</span><br><span class="line">        format=&quot;yyyy/MM/dd&quot;</span><br><span class="line">      &gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Picker-Options-和-Shortcuts使用"><a href="#Picker-Options-和-Shortcuts使用" class="headerlink" title="Picker Options 和 Shortcuts使用"></a>Picker Options 和 Shortcuts使用</h3><ul><li><strong>Shortcuts:</strong> 用来增加日期组件的快捷面板</li><li><strong>Picker Options:</strong> 用来对日期控件做自定义配置</li></ul><h4 id="Shortcuts使用"><a href="#Shortcuts使用" class="headerlink" title="Shortcuts使用"></a>Shortcuts使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>日期配置<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&lt;el-date-picker</span><br><span class="line">                v-model=&quot;createDate&quot;</span><br><span class="line">                type=&quot;date&quot;</span><br><span class="line">                placeholder=&quot;请输入时间&quot;</span><br><span class="line">                :picker-options=&quot;pickerOptions&quot;</span><br><span class="line">                &gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;DatePrickers&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                createDate:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">                pickerOptions: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">disabledDate</span>(<span class="params">time</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> time.getTime() &gt; <span class="built_in">Date</span>.now();</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    shortcuts: [&#123;  <span class="comment">//定义的shortucts</span></span></span><br><span class="line"><span class="javascript">                        text: <span class="string">&#x27;今天&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="function"><span class="title">onClick</span>(<span class="params">picker</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                            picker.$emit(<span class="string">&#x27;pick&#x27;</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, &#123;</span><br><span class="line"><span class="javascript">                        text: <span class="string">&#x27;昨天&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="function"><span class="title">onClick</span>(<span class="params">picker</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">                            date.setTime(date.getTime() - 3600 * 1000 * 24);</span><br><span class="line"><span class="javascript">                            picker.$emit(<span class="string">&#x27;pick&#x27;</span>, date);</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, &#123;</span><br><span class="line"><span class="javascript">                        text: <span class="string">&#x27;一周前&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="function"><span class="title">onClick</span>(<span class="params">picker</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">                            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);</span><br><span class="line"><span class="javascript">                            picker.$emit(<span class="string">&#x27;pick&#x27;</span>, date);</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;]</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="image/20201022215527599.png" alt="在这里插入图片描述"></p><h4 id="Picker-Options"><a href="#Picker-Options" class="headerlink" title="Picker Options"></a>Picker Options</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-date-picker</span><br><span class="line">                v-model=&quot;createDate&quot;</span><br><span class="line">                type=&quot;date&quot;</span><br><span class="line">                placeholder=&quot;请输入时间&quot;</span><br><span class="line">                :picker-options=&quot;pickerOptions&quot;</span><br><span class="line">                &gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;DatePrickers&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                createDate:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">                pickerOptions: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">disabledDate</span>(<span class="params">time</span>)</span> &#123; <span class="comment">//用来对日期进行的控制</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> time.getTime() &lt; <span class="built_in">Date</span>.now();</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="image/20201022215547710.png" alt="在这里插入图片描述"></p><h3 id="事件使用-3"><a href="#事件使用-3" class="headerlink" title="事件使用"></a>事件使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-date-picker</span><br><span class="line">                .....</span><br><span class="line">                :picker-options=&quot;pickerOptions&quot;</span><br><span class="line">                @change=&quot;aaa&quot;</span><br><span class="line">                &gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;DatePrickers&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                createDate:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params">value</span>)</span>&#123;  <span class="comment">//发生change事件的函数</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(value);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Upload组件"><a href="#Upload组件" class="headerlink" title="Upload组件"></a>Upload组件</h2><h3 id="组件创建-1"><a href="#组件创建-1" class="headerlink" title="组件创建"></a>组件创建</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-upload</span> <span class="attr">action</span>=<span class="string">&quot;https://jsonplaceholder.typicode.com/posts/&quot;</span> <span class="attr">:file-list</span>=<span class="string">&quot;fileList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>点击上传<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;tip&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-upload__tip&quot;</span>&gt;</span>只能上传jpg/png文件，且不超过500kb<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>注意:在使用upload组件时必须设置action属性 action属性为必要参数不能省略</code></p><h3 id="属性和事件的使用"><a href="#属性和事件的使用" class="headerlink" title="属性和事件的使用"></a>属性和事件的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-upload</span> <span class="attr">:limit</span>=<span class="string">&quot;3&quot;</span> <span class="attr">:on-exceed</span>=<span class="string">&quot;exceed&quot;</span> <span class="attr">:multiple</span>=<span class="string">&quot;false&quot;</span> <span class="attr">:before-remove</span>=<span class="string">&quot;beforeRemove&quot;</span> <span class="attr">:on-remove</span>=<span class="string">&quot;remove&quot;</span> <span class="attr">:on-preview</span>=<span class="string">&quot;show&quot;</span> <span class="attr">:drag</span>=<span class="string">&quot;true&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;.txt,.png&quot;</span> <span class="attr">:show-file-list</span>=<span class="string">&quot;true&quot;</span> <span class="attr">name</span>=<span class="string">&quot;aaa&quot;</span> <span class="attr">:data</span>=<span class="string">&quot;info&quot;</span> <span class="attr">action</span>=<span class="string">&quot;https://jsonplaceholder.typicode.com/posts/&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">:file-list</span>=<span class="string">&quot;fileList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;el-icon-upload&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;el-upload__text&quot;</span>&gt;</span>将文件拖到此处，或<span class="tag">&lt;<span class="name">em</span>&gt;</span>点击上传<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;el-upload__tip&quot;</span> <span class="attr">slot</span>=<span class="string">&quot;tip&quot;</span>&gt;</span>只能上传jpg/png文件，且不超过500kb<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Uploads&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                fileList: [&#123;</span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;food.jpeg&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    url: <span class="string">&#x27;https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100&#x27;</span></span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;food2.jpeg&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    url: <span class="string">&#x27;https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100&#x27;</span></span></span><br><span class="line">                &#125;],</span><br><span class="line"><span class="javascript">                info: &#123;<span class="attr">id</span>:<span class="string">&quot;21&quot;</span>&#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">show</span>(<span class="params">file</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(file);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">remove</span>(<span class="params">file,fileList</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(file);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(fileList);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//alert(fileList.length)</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">beforeRemove</span>(<span class="params">file,fileList</span>)</span>&#123;</span></span><br><span class="line">                if(fileList.length&lt;3)&#123;</span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;上传文件不能少于3个&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">exceed</span>(<span class="params">file,fileList</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;文件超出上传的个数限制&quot;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>注意:在使用upload组件时没有event事件,所有事件都是属性事件</strong></li></ul><h3 id="方法的使用-2"><a href="#方法的使用-2" class="headerlink" title="方法的使用"></a>方法的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-upload</span> <span class="attr">ref</span>=<span class="string">&quot;uploads&quot;</span> <span class="attr">....</span>&gt;</span>........<span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line"></span><br><span class="line">方法调用:</span><br><span class="line">this.$refs.uploads.clearFiles();</span><br><span class="line">this.$refs.uploads.abort();</span><br><span class="line">this.$refs.uploads.submit();</span><br></pre></td></tr></table></figure><hr><h2 id="Form组件"><a href="#Form组件" class="headerlink" title="Form组件"></a>Form组件</h2><h3 id="组件的创建"><a href="#组件的创建" class="headerlink" title="组件的创建"></a>组件的创建</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;活动名称&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span>立即创建<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Form&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                form: &#123;</span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    region: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    date1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    date2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    delivery: <span class="literal">false</span>,</span></span><br><span class="line">                    type: [],</span><br><span class="line"><span class="javascript">                    resource: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    desc: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">onSubmit</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;submit!&#x27;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内联表单"><a href="#内联表单" class="headerlink" title="内联表单"></a>内联表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:inline</span>=<span class="string">&quot;true&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;formInline&quot;</span> <span class="attr">class</span>=<span class="string">&quot;demo-form-inline&quot;</span>&gt;</span></span><br><span class="line">.......</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>通过设置 inline=true方式将表单作为内联表单处理</code></p><h3 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h3><ul><li><strong>使用说明:</strong></li></ul><blockquote><p>Form 组件提供了表单验证的功能，只需要通过 <code>rules</code> 属性传入约定的验证规则，并将 Form-Item 的 <code>prop</code> 属性设置为需校验的字段名即可。校验规则参见 <a href="https://github.com/yiminghe/async-validator">async-validator</a></p></blockquote><h4 id="失去焦点自动验证"><a href="#失去焦点自动验证" class="headerlink" title="失去焦点自动验证"></a>失去焦点自动验证</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;活动名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  ....</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Form&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                form: &#123;</span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    region: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    date1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    date2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    delivery: <span class="literal">false</span>,</span></span><br><span class="line">                    type: [],</span><br><span class="line"><span class="javascript">                    resource: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    desc: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                rules: &#123;</span><br><span class="line">                    name: [</span><br><span class="line"><span class="javascript">                        &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入活动名称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                        &#123;<span class="attr">min</span>: <span class="number">3</span>, <span class="attr">max</span>: <span class="number">5</span>, <span class="attr">message</span>: <span class="string">&#x27;长度在 3 到 5 个字符&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line">                    ],</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">onSubmit</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;submit!&#x27;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="表单提交调用表单组件的验证方法验证"><a href="#表单提交调用表单组件的验证方法验证" class="headerlink" title="表单提交调用表单组件的验证方法验证"></a>表单提交调用表单组件的验证方法验证</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span><span class="attr">....</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;活动名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onSubmit(&#x27;form&#x27;)&quot;</span>&gt;</span>立即创建<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">methods: &#123;</span><br><span class="line">            onSubmit(formName) &#123;</span><br><span class="line">                this.$refs[formName].validate((valid) =&gt; &#123;</span><br><span class="line">                    if (valid) &#123;</span><br><span class="line">                        alert(&#x27;submit!&#x27;);</span><br><span class="line">                        //发送异步请求 到 springboot项目</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        console.log(&#x27;error submit!!&#x27;);</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="自定义表单的验证规则"><a href="#自定义表单的验证规则" class="headerlink" title="自定义表单的验证规则"></a>自定义表单的验证规则</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;ruleForm&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;ruleForm&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;手机号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;phone&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;ruleForm.phone&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submitForm(&#x27;ruleForm&#x27;)&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;resetForm(&#x27;ruleForm&#x27;)&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Form&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> validatePhone = <span class="function">(<span class="params">rule,value,callback</span>)=&gt;</span>&#123; <span class="comment">//定义自定义的验证规则</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(rule);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(value);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(callback);</span></span><br><span class="line">                if(!value)&#123;</span><br><span class="line"><span class="javascript">                    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;手机号不能为空!&quot;</span>));</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(!<span class="regexp">/^1[3456789]\d&#123;9&#125;$/</span>.test(value))&#123;</span></span><br><span class="line"><span class="javascript">                    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;手机号码不正确!!&quot;</span>))</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                form: &#123;</span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    region: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    date1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    date2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    delivery: <span class="literal">false</span>,</span></span><br><span class="line">                    type: [],</span><br><span class="line"><span class="javascript">                    resource: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    desc: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                rules: &#123; <span class="comment">//验证规则</span></span></span><br><span class="line"><span class="javascript">                    name: [ <span class="comment">//使用默认规则</span></span></span><br><span class="line"><span class="javascript">                        &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入活动名称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                        &#123;<span class="attr">min</span>: <span class="number">3</span>, <span class="attr">max</span>: <span class="number">5</span>, <span class="attr">message</span>: <span class="string">&#x27;长度在 3 到 5 个字符&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line">                    ],</span><br><span class="line"><span class="javascript">                    phone:[  <span class="comment">//使用自定义规则</span></span></span><br><span class="line"><span class="javascript">                        &#123;<span class="attr">validator</span>:validatePhone,<span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                ruleForm:&#123;</span><br><span class="line"><span class="javascript">                    phone:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="消息提示"><a href="#消息提示" class="headerlink" title="消息提示"></a>消息提示</h1><h2 id="警告提示"><a href="#警告提示" class="headerlink" title="警告提示"></a>警告提示</h2><h3 id="创建警告提示"><a href="#创建警告提示" class="headerlink" title="创建警告提示"></a>创建警告提示</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-alert</span> <span class="attr">title</span>=<span class="string">&quot;成功信息提示&quot;</span> <span class="attr">:closable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>&gt;</span>我是辅助信息<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-alert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-alert</span> <span class="attr">title</span>=<span class="string">&quot;成功信息提示&quot;</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-alert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-alert</span> <span class="attr">title</span>=<span class="string">&quot;成功信息提示&quot;</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-alert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-alert</span> <span class="attr">title</span>=<span class="string">&quot;成功信息提示&quot;</span> <span class="attr">type</span>=<span class="string">&quot;error&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-alert</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性的使用-2"><a href="#属性的使用-2" class="headerlink" title="属性的使用"></a>属性的使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-alert</span> <span class="attr">title</span>=<span class="string">&quot;成功信息提示&quot;</span> <span class="attr">effect</span>=<span class="string">&quot;dark&quot;</span> <span class="attr">:show-icon</span>=<span class="string">&quot;true&quot;</span> <span class="attr">center</span> <span class="attr">:closable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>&gt;</span>我是辅助信息<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-alert</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Message消息提示"><a href="#Message消息提示" class="headerlink" title="Message消息提示"></a>Message消息提示</h2><h3 id="创建组件"><a href="#创建组件" class="headerlink" title="创建组件"></a>创建组件</h3><ul><li>   <strong>注意:这个组件的创建无须在页面中书写任何标签,他是一个js插件,在需要展示消息提示的位置直接调用提供的js插件方法即可</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 1.创建最简单的消息</span><br><span class="line"><span class="built_in">this</span>.$message(<span class="string">&#x27;这是一个消息提示!!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"># 2.自定义消息内容</span><br><span class="line"><span class="built_in">this</span>.$message(&#123;</span><br><span class="line">    message: h(<span class="string">&#x27;p&#x27;</span>, <span class="literal">null</span>, [</span><br><span class="line">      h(<span class="string">&#x27;span&#x27;</span>, <span class="literal">null</span>, <span class="string">&#x27;订单创建成功,您的订单编号为: &#x27;</span>),</span><br><span class="line">      h(<span class="string">&#x27;i&#x27;</span>, &#123; <span class="attr">style</span>: <span class="string">&#x27;color: teal&#x27;</span> &#125;, <span class="string">&#x27;87&#x27;</span>)</span><br><span class="line">    ])</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"># 3.不同主题的消息提示</span><br><span class="line"> <span class="built_in">this</span>.$message(&#123;</span><br><span class="line">     message:<span class="string">&#x27;这是信息提示&#x27;</span>,</span><br><span class="line">     type:<span class="string">&quot;success&quot;</span>,</span><br><span class="line">   &#125;)</span><br><span class="line"><span class="comment">//主题样式:  success  info  warning  error</span></span><br><span class="line"></span><br><span class="line"># 4.属性使用</span><br><span class="line"><span class="built_in">this</span>.$message(&#123;</span><br><span class="line">    message:<span class="string">&#x27;这是信息提示&#x27;</span>,</span><br><span class="line">    type:<span class="string">&quot;success&quot;</span>,</span><br><span class="line">    showClose:<span class="literal">true</span>,</span><br><span class="line">    center:<span class="literal">true</span>,</span><br><span class="line">    iconClass:<span class="string">&#x27;el-icon-user-solid&#x27;</span>,</span><br><span class="line">    duration:<span class="number">0</span></span><br><span class="line">  &#125;)</span><br><span class="line"># 5.方法的使用</span><br><span class="line"><span class="built_in">this</span>.$message.closeAll();</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="table表格组件"><a href="#table表格组件" class="headerlink" title="table表格组件"></a>table表格组件</h1><h2 id="组件的创建-1"><a href="#组件的创建-1" class="headerlink" title="组件的创建"></a>组件的创建</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span> <span class="attr">label</span>=<span class="string">&quot;编号&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;age&quot;</span> <span class="attr">label</span>=<span class="string">&quot;年龄&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;email&quot;</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Tables&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                tableData:[</span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">id</span>:<span class="number">21</span>,<span class="attr">name</span>:<span class="string">&quot;Violet&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">email</span>:<span class="string">&quot;2268025923@qq.com&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">id</span>:<span class="number">22</span>,<span class="attr">name</span>:<span class="string">&quot;QiQi&quot;</span>,<span class="attr">age</span>:<span class="number">17</span>,<span class="attr">email</span>:<span class="string">&quot;violet.chen@qq.com&quot;</span>&#125;,</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格中列属性"><a href="#表格中列属性" class="headerlink" title="表格中列属性"></a>表格中列属性</h2><ul><li>   <strong>el-table-column属性</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span> <span class="attr">:resizable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">header-align</span>=<span class="string">&quot;left&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">fixed</span>=<span class="string">&quot;left&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px;&quot;</span> <span class="attr">label</span>=<span class="string">&quot;编号&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;age&quot;</span> <span class="attr">:sort-method</span>=<span class="string">&quot;sorts&quot;</span> <span class="attr">sortable</span> <span class="attr">label</span>=<span class="string">&quot;年龄&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;email&quot;</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;dept.name&quot;</span> <span class="attr">:formatter</span>=<span class="string">&quot;showDept&quot;</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Tables&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                tableData: [</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        id: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;Violet&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">email</span>: <span class="string">&quot;2268025923@qq.com&quot;</span>,</span></span><br><span class="line"><span class="javascript">                        dept: &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;研发部&quot;</span>&#125;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        id: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;QiQi&quot;</span>, <span class="attr">age</span>: <span class="number">17</span>, <span class="attr">email</span>: <span class="string">&quot;2268025923@qq.com&quot;</span>,</span></span><br><span class="line"><span class="javascript">                        dept: &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;小卖部&quot;</span>&#125;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        id: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&quot;WaterChen&quot;</span>, <span class="attr">age</span>: <span class="number">16</span>, <span class="attr">email</span>: <span class="string">&quot;2268025923@qq.com&quot;</span>,</span></span><br><span class="line">                        dept:&#123;&#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">sorts</span>(<span class="params">a, b</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> a.age - b.age;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showDept</span>(<span class="params">row, column, cellValue, index</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(row);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(column);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(cellValue);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(index);</span></span><br><span class="line">                if(cellValue)&#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> cellValue</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="string">&quot;暂无部门&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">empty-text</span>=<span class="string">&quot;暂无数据&quot;</span> <span class="attr">:row-class-name</span>=<span class="string">&quot;showCss&quot;</span> <span class="attr">highlight-current-row</span> <span class="attr">:show-header</span>=<span class="string">&quot;true&quot;</span> <span class="attr">:fit</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">:height</span>=<span class="string">&quot;600&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  .....</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showCss</span>(<span class="params">&#123;row, rowIndex&#125;</span>)</span> &#123;</span></span><br><span class="line">                if (rowIndex % 2 == 0) &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="string">&quot;warning-row&quot;</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="string">&quot;success-row&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件事件使用"><a href="#组件事件使用" class="headerlink" title="组件事件使用"></a>组件事件使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> @事件名=<span class="string">&quot;事件处理函数名&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">el-table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Tables&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//....</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//...事件处理函数</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">selectRow</span>(<span class="params">selection, row</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(selection);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(row);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件方法的使用"><a href="#组件方法的使用" class="headerlink" title="组件方法的使用"></a>组件方法的使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span>  <span class="attr">ref</span>=<span class="string">&quot;mytable&quot;</span>&gt;</span>........<span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">//调用方法</span><br><span class="line">this.$refs.mytable.方法名  </span><br></pre></td></tr></table></figure><h2 id="表格中定义操作列"><a href="#表格中定义操作列" class="headerlink" title="表格中定义操作列"></a>表格中定义操作列</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span>&gt;</span></span><br><span class="line">  ....</span><br><span class="line"> <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">        &lt;el-button</span><br><span class="line">          size=&quot;mini&quot;</span><br><span class="line">          @click=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        &lt;el-button</span><br><span class="line">          size=&quot;mini&quot;</span><br><span class="line">          type=&quot;danger&quot;</span><br><span class="line">          @click=&quot;handleDelete(scope.$index, scope.row)&quot;&gt;删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Tables&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line">            .....</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript"><span class="comment">//用来处理编辑和删除的事件函数</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleEdit</span>(<span class="params">index,row</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(row);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleDelete</span>(<span class="params">index,row</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(row);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522154949.png"></p><hr><h2 id="自定义表头"><a href="#自定义表头" class="headerlink" title="自定义表头"></a>自定义表头</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData.filter(data =&gt; !search || data.name.toLowerCase().includes(search.toLowerCase()))&quot;</span> &gt;</span></span><br><span class="line">   .....</span><br><span class="line">   <span class="comment">&lt;!--展示搜索和操作--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&quot;header&quot;</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          &lt;el-input</span><br><span class="line">            v-model=&quot;search&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            placeholder=&quot;输入关键字搜索&quot;/&gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          &lt;el-button</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          &lt;el-button</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            type=&quot;danger&quot;</span><br><span class="line">            @click=&quot;handleDelete(scope.$index, scope.row)&quot;&gt;删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Tables&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                tableData: [</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        id: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;Violet&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">email</span>: <span class="string">&quot;2268025923@qq.com&quot;</span>,</span></span><br><span class="line"><span class="javascript">                        dept: &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;研发部&quot;</span>&#125;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        id: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;QiQi&quot;</span>, <span class="attr">age</span>: <span class="number">17</span>, <span class="attr">email</span>: <span class="string">&quot;2268025923@qq.com&quot;</span>,</span></span><br><span class="line"><span class="javascript">                        dept: &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;小卖部&quot;</span>&#125;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        id: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&quot;WaterChen&quot;</span>, <span class="attr">age</span>: <span class="number">16</span>, <span class="attr">email</span>: <span class="string">&quot;2268025923@qq.com&quot;</span>,</span></span><br><span class="line">                        dept:&#123;&#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        id: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">&quot;WaterChen520&quot;</span>, <span class="attr">age</span>: <span class="number">15</span>, <span class="attr">email</span>: <span class="string">&quot;2268025923@qq.com&quot;</span>,</span></span><br><span class="line">                        dept: &#123;&#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line"><span class="javascript">                search: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">sorts</span>(<span class="params">a, b</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> a.age - b.age;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showDept</span>(<span class="params">row, column, cellValue, index</span>)</span> &#123;</span></span><br><span class="line">                if (cellValue) &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> cellValue</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="string">&quot;暂无部门&quot;</span>;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showCss</span>(<span class="params">&#123;row, rowIndex&#125;</span>)</span> &#123;</span></span><br><span class="line">                if (rowIndex % 2 == 0) &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="string">&quot;warning-row&quot;</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="string">&quot;success-row&quot;</span>;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">selectRow</span>(<span class="params">selection, row</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(selection);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(row);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">clearSelect</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.mytable.clearSelection();</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleEdit</span>(<span class="params">index,row</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(row);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleDelete</span>(<span class="params">index,row</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(row);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210522155047.png" alt="table"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Element </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis03：ResultMap及分页</title>
      <link href="posts/ace5.html"/>
      <url>posts/ace5.html</url>
      
        <content type="html"><![CDATA[<h1 id="查询为null问题"><a href="#查询为null问题" class="headerlink" title="查询为null问题"></a>查询为null问题</h1><p><strong>要解决的问题：属性名和字段名不一致</strong></p><p>环境：新建一个项目，将之前的项目拷贝过来</p><p>1、查看之前的数据库的字段名</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210518164453.png"></p><p>2、Java中的实体类设计</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> id;  <span class="comment">//id</span></span><br><span class="line">   <span class="keyword">private</span> String name;   <span class="comment">//姓名</span></span><br><span class="line">   <span class="keyword">private</span> String password;   <span class="comment">//密码和数据库不一样！</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">//构造</span></span><br><span class="line">   <span class="comment">//set/get</span></span><br><span class="line">   <span class="comment">//toString()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询用户</span></span><br><span class="line"><span class="function">User <span class="title">selectUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><p>4、mapper映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">  select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();  <span class="comment">//获取SqlSession连接</span></span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">   User user = mapper.selectUserById(<span class="number">1</span>);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果:</strong></p><ul><li>User{id=1, name=’狂神’, password=’null’}</li><li>查询出来发现 password 为空 . 说明出现了问题！</li></ul><p><strong>分析：</strong></p><ul><li><p>select * from user where id = #{id} 可以看做</p><p>select  id,name,pwd  from user where id = #{id}</p></li><li><p>mybatis会根据这些查询的列名(会将列名转化为小写,数据库不区分大小写) , 去对应的实体类中查找相应列名的set方法设值 , 由于找不到setPwd() , 所以password返回null ; 【自动映射】</p></li></ul><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>方案一：为列名指定别名 , 别名和java实体类的属性名一致 .</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">  select id , name , pwd as password from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>方案二：使用结果集映射-&gt;ResultMap</strong> 【推荐】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- id为主键 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- column是数据库表的列名 , property是对应实体类的属性名 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">  select id , name , pwd from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="ResultMap"><a href="#ResultMap" class="headerlink" title="ResultMap"></a>ResultMap</h1><p><strong>自动映射</strong></p><ul><li><code>resultMap</code> 元素是 MyBatis 中最重要最强大的元素。它可以让你从 90% 的 JDBC <code>ResultSets</code> 数据提取代码中解放出来。</li><li>实际上，在为一些比如连接的复杂语句编写映射代码的时候，一份 <code>resultMap</code> 能够代替实现同等功能的长达数千行的代码。</li><li>ResultMap 的设计思想是，对于简单的语句根本不需要配置显式的结果映射，而对于复杂一点的语句只需要描述它们的关系就行了。</li></ul><p>你已经见过简单映射语句的示例了，但并没有显式指定 <code>resultMap</code>。比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">select id , name , pwd</span><br><span class="line">  from user</span><br><span class="line"> where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述语句只是简单地将所有的列映射到 <code>HashMap</code> 的键上，这由 <code>resultType</code> 属性指定。虽然在大部分情况下都够用，但是 HashMap 不是一个很好的模型。你的程序更可能会使用 JavaBean 或 POJO（Plain Old Java Objects，普通老式 Java 对象）作为模型。</p><p><code>ResultMap</code> 最优秀的地方在于，虽然你已经对它相当了解了，但是根本就不需要显式地用到他们。</p><p><strong>手动映射</strong></p><p>1、返回值类型为resultMap</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">  select id , name , pwd from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、编写resultMap，实现手动映射！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- id为主键 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- column是数据库表的列名 , property是对应实体类的属性名 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果世界总是这么简单就好了。但是肯定不是的，数据库中，存在一对多，多对一的情况，我们之后会使用到一些高级的结果集映射，association，collection这些，我们将在之后讲解，今天你们需要把这些知识都消化掉才是最重要的！理解结果集映射的这个概念！</p><h1 id="分页的几种方式"><a href="#分页的几种方式" class="headerlink" title="分页的几种方式"></a>分页的几种方式</h1><h2 id="日志工厂"><a href="#日志工厂" class="headerlink" title="日志工厂"></a>日志工厂</h2><p>思考：我们在测试SQL的时候，要是能够在控制台输出 SQL 的话，是不是就能够有更快的排错效率？</p><p>如果一个 数据库相关的操作出现了问题，我们可以根据输出的SQL语句快速排查问题。</p><p>对于以往的开发过程，我们会经常使用到debug模式来调节，跟踪我们的代码执行过程。但是现在使用Mybatis是基于接口，配置文件的源代码执行过程。因此，我们必须选择日志工具来作为我们开发，调节程序的工具。</p><p>Mybatis内置的日志工厂提供日志功能，具体的日志实现有以下几种工具：</p><ul><li>SLF4J</li><li>Apache Commons Logging</li><li>Log4j 2</li><li>Log4j</li><li>JDK logging</li></ul><p>具体选择哪个日志实现工具由MyBatis的内置日志工厂确定。它会使用最先找到的（按上文列举的顺序查找）。如果一个都未找到，日志功能就会被禁用。</p><p><strong>标准日志实现</strong></p><p>指定 MyBatis 应该使用哪个日志记录实现。如果此设置不存在，则会自动发现日志记录实现。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试，可以看到控制台有大量的输出！我们可以通过这些输出来判断程序到底哪里出了Bug</p><h2 id="Log4j"><a href="#Log4j" class="headerlink" title="Log4j"></a>Log4j</h2><p><strong>简介：</strong></p><ul><li>Log4j是Apache的一个开源项目</li><li>通过使用Log4j，我们可以控制日志信息输送的目的地：控制台，文本，GUI组件….</li><li>我们也可以控制每一条日志的输出格式；</li><li>通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</li></ul><p><strong>使用步骤：</strong></p><p>1、导入log4j的包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置文件编写</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">./log/kuang.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="meta">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="meta">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><p>3、setting设置日志实现</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、在程序中使用Log4j进行输出！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意导包：org.apache.log4j.Logger</span></span><br><span class="line"><span class="keyword">static</span> Logger logger = Logger.getLogger(MyTest.class);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   logger.info(<span class="string">&quot;info：进入selectUser方法&quot;</span>);</span><br><span class="line">   logger.debug(<span class="string">&quot;debug：进入selectUser方法&quot;</span>);</span><br><span class="line">   logger.error(<span class="string">&quot;error: 进入selectUser方法&quot;</span>);</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">   List&lt;User&gt; users = mapper.selectUser();</span><br><span class="line">   <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">       System.out.println(user);</span><br><span class="line">  &#125;</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、测试，看控制台输出！</p><ul><li>使用Log4j 输出日志</li><li>可以看到还生成了一个日志的文件 【需要修改file的日志级别】</li></ul><h1 id="limit实现分页"><a href="#limit实现分页" class="headerlink" title="limit实现分页"></a>limit实现分页</h1><p><strong>思考：为什么需要分页？</strong></p><p>在学习mybatis等持久层框架的时候，会经常对数据进行增删改查操作，使用最多的是对数据库进行查询操作，如果查询大量数据的时候，我们往往使用分页进行查询，也就是每次处理小部分数据，这样对数据库压力就在可控范围内。</p><p><strong>使用Limit实现分页</strong></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#语法</span></span><br><span class="line">SELECT <span class="emphasis">* FROM table LIMIT stratIndex，pageSize</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">SELECT *</span> FROM table LIMIT 5,10; // 检索记录行 6-15  </span><br><span class="line"></span><br><span class="line"><span class="section">#为了检索从某一个偏移量到记录集的结束所有的记录行，可以指定第二个参数为 -1：   </span></span><br><span class="line">SELECT <span class="emphasis">* FROM table LIMIT 95,-1; // 检索记录行 96-last.  </span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">#如果只给定一个参数，它表示返回最大的记录行数目：   </span></span><br><span class="line"><span class="emphasis">SELECT *</span> FROM table LIMIT 5; //检索前 5 个记录行  </span><br><span class="line"></span><br><span class="line"><span class="section">#换句话说，LIMIT n 等价于 LIMIT 0,n。 </span></span><br></pre></td></tr></table></figure><p><strong>步骤：</strong></p><p>1、修改Mapper文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">  select * from user limit #&#123;startIndex&#125;,#&#123;pageSize&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、Mapper接口，参数为map</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择全部用户实现分页</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">selectUser</span><span class="params">(Map&lt;String,Integer&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><p>3、在测试类中传入参数测试</p><ul><li>推断：起始位置 =  （当前页面 - 1 ） * 页面大小</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询 , 两个参数startIndex , pageSize</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">int</span> currentPage = <span class="number">1</span>;  <span class="comment">//第几页</span></span><br><span class="line">   <span class="keyword">int</span> pageSize = <span class="number">2</span>;  <span class="comment">//每页显示几个</span></span><br><span class="line">   Map&lt;String,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String,Integer&gt;();</span><br><span class="line">   map.put(<span class="string">&quot;startIndex&quot;</span>,(currentPage-<span class="number">1</span>)*pageSize);</span><br><span class="line">   map.put(<span class="string">&quot;pageSize&quot;</span>,pageSize);</span><br><span class="line"></span><br><span class="line">   List&lt;User&gt; users = mapper.selectUser(map);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">       System.out.println(user);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="RowBounds分页"><a href="#RowBounds分页" class="headerlink" title="RowBounds分页"></a>RowBounds分页</h1><p>我们除了使用Limit在SQL层面实现分页，也可以使用RowBounds在Java代码层面实现分页，当然此种方式作为了解即可。我们来看下如何实现的！</p><p><strong>步骤：</strong></p><p>1、mapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择全部用户RowBounds实现分页</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserByRowBounds</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>2、mapper文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByRowBounds&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">select * from user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试类</p><p>在这里，我们需要使用RowBounds类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserByRowBounds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">int</span> currentPage = <span class="number">2</span>;  <span class="comment">//第几页</span></span><br><span class="line">   <span class="keyword">int</span> pageSize = <span class="number">2</span>;  <span class="comment">//每页显示几个</span></span><br><span class="line">   RowBounds rowBounds = <span class="keyword">new</span> RowBounds((currentPage-<span class="number">1</span>)*pageSize,pageSize);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//通过session.**方法进行传递rowBounds，[此种方式现在已经不推荐使用了]</span></span><br><span class="line">   List&lt;User&gt; users = session.selectList(<span class="string">&quot;com.kuang.mapper.UserMapper.getUserByRowBounds&quot;</span>, <span class="keyword">null</span>, rowBounds);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">       System.out.println(user);</span><br><span class="line">  &#125;</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="PageHelper"><a href="#PageHelper" class="headerlink" title="PageHelper"></a>PageHelper</h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210518165056.png"></p><p>了解即可，可以自己尝试使用</p><p>官方文档：<a href="https://pagehelper.github.io/">https://pagehelper.github.io/</a></p><blockquote><p>在MyBatisPlus中，我们也讲解到了分页实现，所以实现方式很多，看自己的理解和熟练程度进行掌握即可！</p></blockquote><p>会了简单的结果集映射，后面我们就可以实现一对多和多对一操作了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis02：CRUD操作及配置解析</title>
      <link href="posts/b19a.html"/>
      <url>posts/b19a.html</url>
      
        <content type="html"><![CDATA[<h1 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h1><ol><li>将上面案例中的UserMapper接口改名为 UserDao；</li><li>将UserMapper.xml中的namespace改为为UserDao的路径 .</li><li>再次测试</li></ol><p><strong>结论：</strong></p><p>配置文件中namespace中的名称为对应Mapper接口或者Dao接口的完整包名,必须一致！</p><h1 id="select"><a href="#select" class="headerlink" title="select"></a>select</h1><ul><li><p>select标签是mybatis中最常用的标签之一</p></li><li><p>select语句有很多属性可以详细配置每一条SQL语句</p></li><li><ul><li>SQL语句返回值类型。【完整的类名或者别名】</li><li>传入SQL语句的参数类型 。【万能的Map，可以多尝试使用】</li><li>命名空间中唯一的标识符</li><li>接口中的方法名与映射文件中的SQL语句ID 一一对应</li><li>id</li><li>parameterType</li><li>resultType</li></ul></li></ul><p><strong>需求：根据id查询用户</strong></p><p>1、在UserMapper中添加对应方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public interface UserMapper &#123;</span><br><span class="line">   &#x2F;&#x2F;查询全部用户</span><br><span class="line">   List&lt;User&gt; selectUser();</span><br><span class="line">   &#x2F;&#x2F;根据id查询用户</span><br><span class="line">   User selectUserById(int id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、在UserMapper.xml中添加Select语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id&#x3D;&quot;selectUserById&quot; resultType&#x3D;&quot;com.kuang.pojo.User&quot;&gt;</span><br><span class="line">select * from user where id &#x3D; #&#123;id&#125;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure><p>3、测试类中测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void tsetSelectUserById() &#123;</span><br><span class="line">   SqlSession session &#x3D; MybatisUtils.getSession();  &#x2F;&#x2F;获取SqlSession连接</span><br><span class="line">   UserMapper mapper &#x3D; session.getMapper(UserMapper.class);</span><br><span class="line">   User user &#x3D; mapper.selectUserById(1);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>课堂练习</strong>：根据 密码 和 名字 查询用户</p><p>思路一：直接在方法中传递参数</p><p>1、在接口方法的参数前加 @Param属性</p><p>2、Sql语句编写的时候，直接取@Param中设置的值即可，不需要单独设置参数类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;通过密码和名字查询用户</span><br><span class="line">User selectUserByNP(@Param(&quot;username&quot;) String username,@Param(&quot;pwd&quot;) String pwd);</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">   &lt;select id&#x3D;&quot;selectUserByNP&quot; resultType&#x3D;&quot;com.kuang.pojo.User&quot;&gt;</span><br><span class="line">     select * from user where name &#x3D; #&#123;username&#125; and pwd &#x3D; #&#123;pwd&#125;</span><br><span class="line">   &lt;&#x2F;select&gt;</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><p>思路二：使用万能的Map</p><p>1、在接口方法中，参数直接传递Map；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User selectUserByNP2(Map&lt;String,Object&gt; map);</span><br></pre></td></tr></table></figure><p>2、编写sql语句的时候，需要传递参数类型，参数类型为map</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserByNP2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.kuang.pojo.User&quot;</span>&gt;</span></span><br><span class="line">select * from user where name = #&#123;username&#125; and pwd = #&#123;pwd&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、在使用方法的时候，Map的 key 为 sql中取的值即可，没有顺序要求！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;小明&quot;</span>);</span><br><span class="line">map.put(<span class="string">&quot;pwd&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">User user = mapper.selectUserByNP2(map);</span><br></pre></td></tr></table></figure><p>总结：如果参数过多，我们可以考虑直接使用Map实现，如果参数比较少，直接传递参数即可</p><h1 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h1><p>我们一般使用insert标签进行插入操作，它的配置和select标签差不多！</p><p><strong>需求：给数据库增加一个用户</strong></p><p>1、在UserMapper接口中添加对应的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加一个用户</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><p>2、在UserMapper.xml中添加insert语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.kuang.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">   User user = <span class="keyword">new</span> User(<span class="number">5</span>,<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;zxcvbn&quot;</span>);</span><br><span class="line">   <span class="keyword">int</span> i = mapper.addUser(user);</span><br><span class="line">   System.out.println(i);</span><br><span class="line">   session.commit(); <span class="comment">//提交事务,重点!不写的话不会提交到数据库</span></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意点：增、删、改操作需要提交事务！</strong></p><h1 id="update"><a href="#update" class="headerlink" title="update"></a>update</h1><p>我们一般使用update标签进行更新操作，它的配置和select标签差不多！</p><p><strong>需求：修改用户的信息</strong></p><p>1、同理，编写接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改一个用户</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><p>2、编写对应的配置文件SQL</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.kuang.pojo.User&quot;</span>&gt;</span></span><br><span class="line">  update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">   User user = mapper.selectUserById(<span class="number">1</span>);</span><br><span class="line">   user.setPwd(<span class="string">&quot;asdfgh&quot;</span>);</span><br><span class="line">   <span class="keyword">int</span> i = mapper.updateUser(user);</span><br><span class="line">   System.out.println(i);</span><br><span class="line">   session.commit(); <span class="comment">//提交事务,重点!不写的话不会提交到数据库</span></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h1><p>我们一般使用delete标签进行删除操作，它的配置和select标签差不多！</p><p><strong>需求：根据id删除一个用户</strong></p><p>1、同理，编写接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id删除用户</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><p>2、编写对应的配置文件SQL</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">  delete from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   SqlSession session = MybatisUtils.getSession();</span><br><span class="line">   UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">   <span class="keyword">int</span> i = mapper.deleteUser(<span class="number">5</span>);</span><br><span class="line">   System.out.println(i);</span><br><span class="line">   session.commit(); <span class="comment">//提交事务,重点!不写的话不会提交到数据库</span></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>小结：</strong></p><ul><li>所有的增删改操作都需要提交事务！</li><li>接口所有的普通参数，尽量都写上@Param参数，尤其是多个参数时，必须写上！</li><li>有时候根据业务的需求，可以考虑使用map传递参数！</li><li>为了规范操作，在SQL的配置文件中，我们尽量将Parameter参数和resultType都写上！</li></ul><h1 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h1><p><strong>模糊查询like语句该怎么写?</strong></p><p>第1种：在Java代码中添加sql通配符。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string wildcardname = “%smi%”;</span><br><span class="line">list<span class="tag">&lt;<span class="name">name</span>&gt;</span> names = mapper.selectlike(wildcardname);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">”selectlike”</span>&gt;</span></span><br><span class="line">select * from foo where bar like #&#123;value&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第2种：在sql语句中拼接通配符，会引起sql注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string wildcardname = “smi”;</span><br><span class="line">list<span class="tag">&lt;<span class="name">name</span>&gt;</span> names = mapper.selectlike(wildcardname);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">”selectlike”</span>&gt;</span></span><br><span class="line">    select * from foo where bar like &quot;%&quot;#&#123;value&#125;&quot;%&quot;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置解析</p><h1 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h1><ul><li>mybatis-config.xml 系统核心配置文件</li><li>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。</li><li>能配置的内容如下：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">configuration（配置）</span><br><span class="line">properties（属性）</span><br><span class="line">settings（设置）</span><br><span class="line">typeAliases（类型别名）</span><br><span class="line">typeHandlers（类型处理器）</span><br><span class="line">objectFactory（对象工厂）</span><br><span class="line">plugins（插件）</span><br><span class="line">environments（环境配置）</span><br><span class="line">environment（环境变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">databaseIdProvider（数据库厂商标识）</span><br><span class="line">mappers（映射器）</span><br><span class="line"><span class="comment">&lt;!-- 注意元素节点的顺序！顺序不对会报错 --&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以阅读 mybatis-config.xml 上面的dtd的头文件！</p><h1 id="environments元素"><a href="#environments元素" class="headerlink" title="environments元素"></a>environments元素</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;...&quot;</span> <span class="attr">value</span>=<span class="string">&quot;...&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>配置MyBatis的多套运行环境，将SQL映射到多个不同的数据库上，必须指定其中一个为默认运行环境（通过default指定）</p></li><li><p>子元素节点：<strong>environment</strong></p></li><li><ul><li><p>dataSource 元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象的资源。</p></li><li><p>数据源是必须配置的。</p></li><li><p>有三种内建的数据源类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type&#x3D;&quot;[UNPOOLED|POOLED|JNDI]&quot;）</span><br></pre></td></tr></table></figure></li><li><p>unpooled：这个数据源的实现只是每次被请求时打开和关闭连接。</p></li><li><p><strong>pooled</strong>：这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来 , 这是一种使得并发 Web 应用快速响应请求的流行处理方式。</p></li><li><p>jndi：这个数据源的实现是为了能在如 Spring 或应用服务器这类容器中使用，容器可以集中或在外部配置数据源，然后放置一个 JNDI 上下文的引用。</p></li><li><p>数据源也有很多第三方的实现，比如dbcp，c3p0，druid等等….</p></li><li><p>详情：点击查看官方文档</p></li><li><p>这两种事务管理器类型都不需要设置任何属性。</p></li><li><p>具体的一套环境，通过设置id进行区别，id保证唯一！</p></li><li><p>子元素节点：transactionManager - [ 事务管理器 ]</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 语法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;[ JDBC | MANAGED ]&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>子元素节点：<strong>数据源（dataSource）</strong></p></li></ul></li></ul><h1 id="mappers元素"><a href="#mappers元素" class="headerlink" title="mappers元素"></a>mappers元素</h1><p><strong>mappers</strong></p><ul><li>映射器 : 定义映射SQL语句文件</li><li>既然 MyBatis 的行为其他元素已经配置完了，我们现在就要定义 SQL 映射语句了。但是首先我们需要告诉 MyBatis 到哪里去找到这些语句。Java 在自动查找这方面没有提供一个很好的方法，所以最佳的方式是告诉 MyBatis 到哪里去找映射文件。你可以使用相对于类路径的资源引用， 或完全限定资源定位符（包括 <code>file:///</code> 的 URL），或类名和包名等。映射器是MyBatis中最核心的组件之一，在MyBatis 3之前，只支持xml映射器，即：所有的SQL语句都必须在xml文件中配置。而从MyBatis 3开始，还支持接口映射器，这种映射器方式允许以Java代码的方式注解定义SQL语句，非常简洁。</li></ul><p><strong>引入资源方式</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用相对于类路径的资源引用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;org/mybatis/builder/PostMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用完全限定资源定位符（URL） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;file:///var/mappers/AuthorMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">使用映射器接口实现类的完全限定类名</span></span><br><span class="line"><span class="comment">需要配置文件名称和接口名称一致，并且位于同一目录下</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.builder.AuthorMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">将包内的映射器接口实现全部注册为映射器</span></span><br><span class="line"><span class="comment">但是需要配置文件名称和接口名称一致，并且位于同一目录下</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;org.mybatis.builder&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Mapper文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">       <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">       <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.kuang.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>namespace中文意思：命名空间，作用如下：</p></li><li><ul><li>namespace的命名必须跟某个接口同名</li><li>接口中的方法与映射文件中sql语句id应该一一对应</li></ul></li><li><ol><li>namespace和子元素的id联合保证唯一  , 区别不同的mapper</li><li>绑定DAO接口</li><li>namespace命名规则 : 包名+类名</li></ol></li></ul><p>MyBatis 的真正强大在于它的映射语句，这是它的魔力所在。由于它的异常强大，映射器的 XML 文件就显得相对简单。如果拿它跟具有相同功能的 JDBC 代码进行对比，你会立即发现省掉了将近 95% 的代码。MyBatis 为聚焦于 SQL 而构建，以尽可能地为你减少麻烦。</p><h1 id="Properties优化"><a href="#Properties优化" class="headerlink" title="Properties优化"></a>Properties优化</h1><p>数据库这些属性都是可外部配置且可动态替换的，既可以在典型的 Java 属性文件中配置，亦可通过 properties 元素的子元素来传递。具体的官方文档</p><p>我们来优化我们的配置文件</p><p>第一步 ; 在资源目录下新建一个db.properties</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">driver=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/mybatis?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">username=root</span><br><span class="line">password=<span class="number">123456</span></span><br></pre></td></tr></table></figure><p>第二步 : 将文件导入properties 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">   &lt;!--导入properties文件--&gt;</span><br><span class="line">   &lt;properties resource&#x3D;&quot;db.properties&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">   &lt;environments default&#x3D;&quot;development&quot;&gt;</span><br><span class="line">       &lt;environment id&#x3D;&quot;development&quot;&gt;</span><br><span class="line">           &lt;transactionManager type&#x3D;&quot;JDBC&quot;&#x2F;&gt;</span><br><span class="line">           &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;</span><br><span class="line">               &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;$&#123;driver&#125;&quot;&#x2F;&gt;</span><br><span class="line">               &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;$&#123;url&#125;&quot;&#x2F;&gt;</span><br><span class="line">               &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;$&#123;username&#125;&quot;&#x2F;&gt;</span><br><span class="line">               &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;$&#123;password&#125;&quot;&#x2F;&gt;</span><br><span class="line">           &lt;&#x2F;dataSource&gt;</span><br><span class="line">       &lt;&#x2F;environment&gt;</span><br><span class="line">   &lt;&#x2F;environments&gt;</span><br><span class="line">   &lt;mappers&gt;</span><br><span class="line">       &lt;mapper resource&#x3D;&quot;mapper&#x2F;UserMapper.xml&quot;&#x2F;&gt;</span><br><span class="line">   &lt;&#x2F;mappers&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure><p>更多操作，可以查看官方文档！【演示带领学习】</p><ul><li>配置文件优先级问题</li><li>新特性：使用占位符</li></ul><h1 id="typeAliases优化"><a href="#typeAliases优化" class="headerlink" title="typeAliases优化"></a>typeAliases优化</h1><p>类型别名是为 Java 类型设置一个短的名字。它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--配置别名,注意顺序--&gt;</span><br><span class="line">&lt;typeAliases&gt;</span><br><span class="line">   &lt;typeAlias type&#x3D;&quot;com.kuang.pojo.User&quot; alias&#x3D;&quot;User&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;typeAliases&gt;</span><br></pre></td></tr></table></figure><p>当这样配置时，<code>User</code>可以用在任何使用<code>com.kuang.pojo.User</code>的地方。</p><p>也可以指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean，比如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;typeAliases&gt;</span><br><span class="line">   &lt;package name&#x3D;&quot;com.kuang.pojo&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;typeAliases&gt;</span><br></pre></td></tr></table></figure><p>每一个在包 <code>com.kuang.pojo</code> 中的 Java Bean，在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名。</p><p>若有注解，则别名为其注解值。见下面的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Alias(&quot;user&quot;)</span><br><span class="line">public class User &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>去官网查看一下Mybatis默认的一些类型别名！</p><h1 id="其他配置浏览"><a href="#其他配置浏览" class="headerlink" title="其他配置浏览"></a>其他配置浏览</h1><p><strong>设置</strong></p><ul><li><p>设置（settings）相关 =&gt; 查看帮助文档</p></li><li><ul><li>懒加载</li><li>日志实现</li><li>缓存开启关闭</li></ul></li><li><p>一个配置完整的 settings 元素的示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;cacheEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;lazyLoadingEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;multipleResultSetsEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;useColumnLabel&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;useGeneratedKeys&quot; value&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;autoMappingBehavior&quot; value&#x3D;&quot;PARTIAL&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;autoMappingUnknownColumnBehavior&quot; value&#x3D;&quot;WARNING&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;defaultExecutorType&quot; value&#x3D;&quot;SIMPLE&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;defaultStatementTimeout&quot; value&#x3D;&quot;25&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;defaultFetchSize&quot; value&#x3D;&quot;100&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;safeRowBoundsEnabled&quot; value&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;mapUnderscoreToCamelCase&quot; value&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;localCacheScope&quot; value&#x3D;&quot;SESSION&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;jdbcTypeForNull&quot; value&#x3D;&quot;OTHER&quot;&#x2F;&gt;</span><br><span class="line"> &lt;setting name&#x3D;&quot;lazyLoadTriggerMethods&quot; value&#x3D;&quot;equals,clone,hashCode,toString&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;settings&gt;</span><br></pre></td></tr></table></figure></li></ul><p><strong>类型处理器</strong></p><ul><li>无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。</li><li>你可以重写类型处理器或创建你自己的类型处理器来处理不支持的或非标准的类型。【了解即可】</li></ul><p><strong>对象工厂</strong></p><ul><li>MyBatis 每次创建结果对象的新实例时，它都会使用一个对象工厂（ObjectFactory）实例来完成。</li><li>默认的对象工厂需要做的仅仅是实例化目标类，要么通过默认构造方法，要么在参数映射存在的时候通过有参构造方法来实例化。</li><li>如果想覆盖对象工厂的默认行为，则可以通过创建自己的对象工厂来实现。【了解即可】</li></ul><h1 id="生命周期和作用域"><a href="#生命周期和作用域" class="headerlink" title="生命周期和作用域"></a>生命周期和作用域</h1><p><strong>作用域（Scope）和生命周期</strong></p><p>理解我们目前已经讨论过的不同作用域和生命周期类是至关重要的，因为错误的使用会导致非常严重的并发问题。</p><p>我们可以先画一个流程图，分析一下Mybatis的执行过程！</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210517115040.png"></p><p><strong>作用域理解</strong></p><ul><li>SqlSessionFactoryBuilder 的作用在于创建 SqlSessionFactory，创建成功后，SqlSessionFactoryBuilder 就失去了作用，所以它只能存在于创建 SqlSessionFactory 的方法中，而不要让其长期存在。因此 <strong>SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域</strong>（也就是局部方法变量）。</li><li>SqlSessionFactory 可以被认为是一个数据库连接池，它的作用是创建 SqlSession 接口对象。因为 MyBatis 的本质就是 Java 对数据库的操作，所以 SqlSessionFactory 的生命周期存在于整个 MyBatis 的应用之中，所以一旦创建了 SqlSessionFactory，就要长期保存它，直至不再使用 MyBatis 应用，所以可以认为 SqlSessionFactory 的生命周期就等同于 MyBatis 的应用周期。</li><li>由于 SqlSessionFactory 是一个对数据库的连接池，所以它占据着数据库的连接资源。如果创建多个 SqlSessionFactory，那么就存在多个数据库连接池，这样不利于对数据库资源的控制，也会导致数据库连接资源被消耗光，出现系统宕机等情况，所以尽量避免发生这样的情况。</li><li>因此在一般的应用中我们往往希望 SqlSessionFactory 作为一个单例，让它在应用中被共享。所以说 <strong>SqlSessionFactory 的最佳作用域是应用作用域。</strong></li><li>如果说 SqlSessionFactory 相当于数据库连接池，那么 SqlSession 就相当于一个数据库连接（Connection 对象），你可以在一个事务里面执行多条 SQL，然后通过它的 commit、rollback 等方法，提交或者回滚事务。所以它应该存活在一个业务请求中，处理完整个请求后，应该关闭这条连接，让它归还给 SqlSessionFactory，否则数据库资源就很快被耗费精光，系统就会瘫痪，所以用 try…catch…finally… 语句来保证其正确关闭。</li><li><strong>所以 SqlSession 的最佳的作用域是请求或方法作用域。</strong></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210517115155.png"></p><p>学会了Crud，和基本的配置及原理，后面就可以学习些业务开发</p>]]></content>
      
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis01：第一个程序</title>
      <link href="posts/728a.html"/>
      <url>posts/728a.html</url>
      
        <content type="html"><![CDATA[<h1 id="MyBatis01：第一个程序"><a href="#MyBatis01：第一个程序" class="headerlink" title="MyBatis01：第一个程序"></a>MyBatis01：第一个程序</h1><h2 id="MyBatis简介"><a href="#MyBatis简介" class="headerlink" title="MyBatis简介"></a>MyBatis简介</h2><p><img src= "/img/loading.gif" data-lazy-src="image/20210517113719.png" alt="image-20210517113710529"></p><blockquote><p>环境说明：</p></blockquote><ul><li>jdk 8 +</li><li>MySQL 5.7.19</li><li>maven-3.6.1</li><li>IDEA</li></ul><p>学习前需要掌握：</p><ul><li>JDBC</li><li>MySQL</li><li>Java 基础</li><li>Maven</li><li>Junit</li></ul><blockquote><p>什么是MyBatis</p></blockquote><ul><li>MyBatis 是一款优秀的<strong>持久层框架</strong></li><li>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集的过程</li><li>MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 实体类 【Plain Old Java Objects,普通的 Java对象】映射成数据库中的记录。</li><li>MyBatis 本是apache的一个开源项目ibatis, 2010年这个项目由apache 迁移到了google code，并且改名为MyBatis 。</li><li>2013年11月迁移到<strong>Github</strong> .</li><li>Mybatis官方文档 : <a href="http://www.mybatis.org/mybatis-3/zh/index.html">http://www.mybatis.org/mybatis-3/zh/index.html</a></li><li>GitHub : <a href="https://github.com/mybatis/mybatis-3">https://github.com/mybatis/mybatis-3</a></li></ul><blockquote><p>持久化</p></blockquote><p><strong>持久化是将程序数据在持久状态和瞬时状态间转换的机制。</strong></p><ul><li>即把数据（如内存中的对象）保存到可永久保存的存储设备中（如磁盘）。持久化的主要应用是将内存中的对象存储在数据库中，或者存储在磁盘文件中、XML数据文件中等等。</li><li>JDBC就是一种持久化机制。文件IO也是一种持久化机制。</li><li>在生活中 : 将鲜肉冷藏，吃的时候再解冻的方法也是。将水果做成罐头的方法也是。</li></ul><p><strong>为什么需要持久化服务呢？那是由于内存本身的缺陷引起的</strong></p><ul><li>内存断电后数据会丢失，但有一些对象是无论如何都不能丢失的，比如银行账号等，遗憾的是，人们还无法保证内存永不掉电。</li><li>内存过于昂贵，与硬盘、光盘等外存相比，内存的价格要高2~3个数量级，而且维持成本也高，至少需要一直供电吧。所以即使对象不需要永久保存，也会因为内存的容量限制不能一直呆在内存中，需要持久化来缓存到外存。</li></ul><blockquote><p>持久层</p></blockquote><p><strong>什么是持久层？</strong></p><ul><li>完成持久化工作的代码块 .  —-&gt;  dao层 【DAO (Data Access Object)  数据访问对象】</li><li>大多数情况下特别是企业级应用，数据持久化往往也就意味着将内存中的数据保存到磁盘上加以固化，而持久化的实现过程则大多通过各种<strong>关系数据库</strong>来完成。</li><li>不过这里有一个字需要特别强调，也就是所谓的“层”。对于应用系统而言，数据持久功能大多是必不可少的组成部分。也就是说，我们的系统中，已经天然的具备了“持久层”概念？也许是，但也许实际情况并非如此。之所以要独立出一个“持久层”的概念,而不是“持久模块”，“持久单元”，也就意味着，我们的系统架构中，应该有一个相对独立的逻辑层面，专注于数据持久化逻辑的实现.</li><li>与系统其他部分相对而言，这个层面应该具有一个较为清晰和严格的逻辑边界。【说白了就是用来操作数据库存在的！】</li></ul><blockquote><p>为什么需要Mybatis</p></blockquote><ul><li><p>Mybatis就是帮助程序猿将数据存入数据库中 , 和从数据库中取数据 .</p></li><li><p>传统的jdbc操作 , 有很多重复代码块 .比如 : 数据取出时的封装 , 数据库的建立连接等等… , 通过框架可以减少重复代码,提高开发效率 .</p></li><li><p>MyBatis 是一个半自动化的<strong>ORM框架 (Object Relationship Mapping) –&gt;对象关系映射</strong></p></li><li><p>所有的事情，不用Mybatis依旧可以做到，只是用了它，所有实现会更加简单！<strong>技术没有高低之分，只有使用这个技术的人有高低之别</strong></p></li><li><p>MyBatis的优点</p></li><li><ul><li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件就可以了，易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li><li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li><li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li><li>提供xml标签，支持编写动态sql。</li><li>…….</li></ul></li><li><p>最重要的一点，使用的人多！公司需要！</p></li></ul><p>MyBatis第一个程序</p><p><strong>思路流程：搭建环境–&gt;导入Mybatis—&gt;编写代码—&gt;测试</strong></p><blockquote><p>代码演示</p></blockquote><p>1、搭建实验数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE &#96;mybatis&#96;;</span><br><span class="line"></span><br><span class="line">USE &#96;mybatis&#96;;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS &#96;user&#96;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;user&#96; (</span><br><span class="line">&#96;id&#96; int(20) NOT NULL,</span><br><span class="line">&#96;name&#96; varchar(30) DEFAULT NULL,</span><br><span class="line">&#96;pwd&#96; varchar(30) DEFAULT NULL,</span><br><span class="line">PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">insert  into &#96;user&#96;(&#96;id&#96;,&#96;name&#96;,&#96;pwd&#96;) values (1,&#39;狂神&#39;,&#39;123456&#39;),(2,&#39;张三&#39;,&#39;abcdef&#39;),(3,&#39;李四&#39;,&#39;987654&#39;);</span><br></pre></td></tr></table></figure><p>2、导入MyBatis相关 jar 包</p><ul><li>GitHub上找</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;3.5.2&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;5.1.47&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>3、编写MyBatis核心配置文件</p><ul><li>查看帮助文档</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">       PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">       &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">   &lt;environments default&#x3D;&quot;development&quot;&gt;</span><br><span class="line">       &lt;environment id&#x3D;&quot;development&quot;&gt;</span><br><span class="line">           &lt;transactionManager type&#x3D;&quot;JDBC&quot;&#x2F;&gt;</span><br><span class="line">           &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;</span><br><span class="line">               &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;com.mysql.jdbc.Driver&quot;&#x2F;&gt;</span><br><span class="line">               &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis?useSSL&#x3D;true&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf8&quot;&#x2F;&gt;</span><br><span class="line">               &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;</span><br><span class="line">               &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;123456&quot;&#x2F;&gt;</span><br><span class="line">           &lt;&#x2F;dataSource&gt;</span><br><span class="line">       &lt;&#x2F;environment&gt;</span><br><span class="line">   &lt;&#x2F;environments&gt;</span><br><span class="line">   &lt;mappers&gt;</span><br><span class="line">       &lt;mapper resource&#x3D;&quot;com&#x2F;kuang&#x2F;dao&#x2F;userMapper.xml&quot;&#x2F;&gt;</span><br><span class="line">   &lt;&#x2F;mappers&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure><p>4、编写MyBatis工具类</p><ul><li>查看帮助文档</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.ibatis.io.Resources;</span><br><span class="line">import org.apache.ibatis.session.SqlSession;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line">public class MybatisUtils &#123;</span><br><span class="line"></span><br><span class="line">   private static SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">   static &#123;</span><br><span class="line">       try &#123;</span><br><span class="line">           String resource &#x3D; &quot;mybatis-config.xml&quot;;</span><br><span class="line">           InputStream inputStream &#x3D; Resources.getResourceAsStream(resource);</span><br><span class="line">           sqlSessionFactory &#x3D; new SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">      &#125; catch (IOException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;获取SqlSession连接</span><br><span class="line">   public static SqlSession getSession()&#123;</span><br><span class="line">       return sqlSessionFactory.openSession();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、创建实体类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public class User &#123;</span><br><span class="line">   </span><br><span class="line">   private int id;  &#x2F;&#x2F;id</span><br><span class="line">   private String name;   &#x2F;&#x2F;姓名</span><br><span class="line">   private String pwd;   &#x2F;&#x2F;密码</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;构造,有参,无参</span><br><span class="line">   &#x2F;&#x2F;set&#x2F;get</span><br><span class="line">   &#x2F;&#x2F;toString()</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6、编写Mapper接口类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import com.kuang.pojo.User;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public interface UserMapper &#123;</span><br><span class="line">   List&lt;User&gt; selectUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7、编写Mapper.xml配置文件</p><ul><li>namespace 十分重要，不能写错！</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">       PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">       &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace&#x3D;&quot;com.kuang.dao.UserMapper&quot;&gt;</span><br><span class="line"> &lt;select id&#x3D;&quot;selectUser&quot; resultType&#x3D;&quot;com.kuang.pojo.User&quot;&gt;</span><br><span class="line">  select * from user</span><br><span class="line"> &lt;&#x2F;select&gt;</span><br><span class="line">&lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure><p>8、编写测试类</p><ul><li>Junit 包测试</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public class MyTest &#123;</span><br><span class="line">   @Test</span><br><span class="line">   public void selectUser() &#123;</span><br><span class="line">       SqlSession session &#x3D; MybatisUtils.getSession();</span><br><span class="line">       &#x2F;&#x2F;方法一:</span><br><span class="line">       &#x2F;&#x2F;List&lt;User&gt; users &#x3D; session.selectList(&quot;com.kuang.mapper.UserMapper.selectUser&quot;);</span><br><span class="line">       &#x2F;&#x2F;方法二:</span><br><span class="line">       UserMapper mapper &#x3D; session.getMapper(UserMapper.class);</span><br><span class="line">       List&lt;User&gt; users &#x3D; mapper.selectUser();</span><br><span class="line"></span><br><span class="line">       for (User user: users)&#123;</span><br><span class="line">           System.out.println(user);</span><br><span class="line">      &#125;</span><br><span class="line">       session.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>9、运行测试，成功的查询出来的我们的数据，ok！</p><blockquote><p>问题说明</p></blockquote><p><strong>可能出现问题说明：Maven静态资源过滤问题</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line">   &lt;resource&gt;</span><br><span class="line">       &lt;directory&gt;src&#x2F;main&#x2F;java&lt;&#x2F;directory&gt;</span><br><span class="line">       &lt;includes&gt;</span><br><span class="line">           &lt;include&gt;**&#x2F;*.properties&lt;&#x2F;include&gt;</span><br><span class="line">           &lt;include&gt;**&#x2F;*.xml&lt;&#x2F;include&gt;</span><br><span class="line">       &lt;&#x2F;includes&gt;</span><br><span class="line">       &lt;filtering&gt;false&lt;&#x2F;filtering&gt;</span><br><span class="line">   &lt;&#x2F;resource&gt;</span><br><span class="line">   &lt;resource&gt;</span><br><span class="line">       &lt;directory&gt;src&#x2F;main&#x2F;resources&lt;&#x2F;directory&gt;</span><br><span class="line">       &lt;includes&gt;</span><br><span class="line">           &lt;include&gt;**&#x2F;*.properties&lt;&#x2F;include&gt;</span><br><span class="line">           &lt;include&gt;**&#x2F;*.xml&lt;&#x2F;include&gt;</span><br><span class="line">       &lt;&#x2F;includes&gt;</span><br><span class="line">       &lt;filtering&gt;false&lt;&#x2F;filtering&gt;</span><br><span class="line">   &lt;&#x2F;resource&gt;</span><br><span class="line">&lt;&#x2F;resources&gt;</span><br></pre></td></tr></table></figure><p>有了MyBatis以后再也不用写原生的JDBC代码了，舒服！</p><p>跟着狂神学ssm就是舒服，这段时间正好把狂神的笔记整理整理😏</p>]]></content>
      
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css中的字体</title>
      <link href="posts/fe37.html"/>
      <url>posts/fe37.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTMl中的字体"><a href="#HTMl中的字体" class="headerlink" title="HTMl中的字体"></a>HTMl中的字体</h1><blockquote><p><em>生活明朗，万物可爱</em></p></blockquote><h3 id="字体相关的样式"><a href="#字体相关的样式" class="headerlink" title="字体相关的样式"></a>字体相关的样式</h3><p> <strong>color</strong> 用来设置字体颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:red;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>font-size</strong> 字体的大小</p><ul><li><p><code>font-size</code>相关的单位.</p><p><em>em</em> 相当于<code>当前元素</code>的一个font-size</p><p><em>rem</em> 相对于<code>根元素</code>的一个font-size</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>font-family</strong> 字体族（字体的格式）</p><ul><li><p>可选值：</p><p><em>serif</em>  衬线字体</p><p><em>sans-serif</em> 非衬线字体</p><p><em>monospace</em> 等宽字体</p><p>指定字体的类别，浏览器会自动使用该类别下的字体</p></li><li><p>font-family 可以同时指定多个字体，多个字体间使用 <code>,</code> 隔开字体生效时优先使用第一个，第一个无法使用则使用第二个 以此类推</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font-family</span>: Microsoft YaHei,Heiti SC,tahoma,arial,Hiragino Sans GB,<span class="string">&quot;\5B8B\4F53&quot;</span>,sans-serif</span><br></pre></td></tr></table></figure><p><strong>font-face</strong> 自定义字体</p><p> font-face可以将服务器中的字体直接提供给用户去使用 </p><ul><li><p>问题：</p><p>1.加载速度</p><p>2.版权</p><p>3.字体格式（需提供多种格式满足不同浏览器）</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="comment">/* 指定字体的名字 */</span></span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">&#x27;myfont&#x27;</span> ;</span><br><span class="line">    <span class="comment">/* 服务器中字体的路径 */</span></span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;./font/ZCOOLKuaiLe-Regular.ttf&#x27;</span>) <span class="built_in">format</span>(<span class="string">&quot;truetype&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">font-family</span>: myfont;</span><br></pre></td></tr></table></figure><p><strong>iconfont</strong> 图标字体</p><ul><li>在网页中经常需要使用一些图标，可以通过图片来引入图标但是图片大小本身比较大，并且非常的不灵活</li><li>所以在使用图标时，我们还可以将图标直接设置为字体，<pre><code>然后通过font-face的形式来对字体进行引入</code></pre></li><li>这样我们就可以通过使用字体的形式来使用图标</li></ul><p><em>通过伪元素来设置图标字体</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">        1.找到要设置图标的元素通过before或after选中</span></span><br><span class="line"><span class="comment">        2.在content中设置字体的编码</span></span><br><span class="line"><span class="comment">        3.设置字体的样式</span></span><br><span class="line"><span class="comment">                fas</span></span><br><span class="line"><span class="comment">                font-family: &#x27;Font Awesome 5 Free&#x27;;</span></span><br><span class="line"><span class="comment">                font-weight: 900; </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;\f1b0&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Font Awesome 5 Free&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">900</span>; </span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fontawesome 使用步骤</span><br><span class="line">    <span class="number">1</span>.下载 https://fontawesome.com/</span><br><span class="line">    <span class="number">2</span>.解压</span><br><span class="line">    <span class="number">3</span>.将css和webfonts移动到项目中</span><br><span class="line">    <span class="number">4</span>.将all.css引入到网页中</span><br><span class="line">    <span class="number">5</span>.使用图标字体</span><br><span class="line">        - 直接通过类名来使用图标字体</span><br><span class="line">            class=<span class="string">&quot;fas fa-bell&quot;</span></span><br><span class="line">            class=<span class="string">&quot;fab fa-accessible-icon&quot;</span></span><br></pre></td></tr></table></figure><p><em>通过实体来使用图标字体：</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;#x图标的编码;</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fas&quot;</span>&gt;</span><span class="symbol">&amp;#xf0f3;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>通过类名指定</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-cat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>阿里图标库</em></p><ul><li>平时自己练习可以使用，相对来说图标更多，质量更好</li><li>公司做项目一定要和原作者取得联系确认版权问题</li></ul><p><em>如何使用？</em></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511110718.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511110730.png" alt="加入到购物车"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511110739.png" alt="将购物车中的图标加入项目"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511111249.webp"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511110748.png" alt="将文件下载至本地"></p><p><code>解压后得到</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511111349.webp" alt="640 (1)"></p><p><code>将剩下的文件拷贝到项目中</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511111412.png" alt="641"></p><p><code>将css文件引入</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;./iconfont/iconfont.css&quot;&gt;</span><br></pre></td></tr></table></figure><p><code>复制需要使用的图标字体的Unicode编码，注意&amp;#x是实体图标的使用方法</code><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511111442.png" alt="642"></p><p><code>伪元素使用</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">            //注意需要转义，且没有&amp;<span class="selector-id">#x</span></span><br><span class="line">            <span class="attribute">content</span>: <span class="string">&#x27;\e625&#x27;</span>;</span><br><span class="line">            <span class="attribute">font-family</span>: <span class="string">&#x27;iconfont&#x27;</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><code>通过实体图标调用</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class=&quot;iconfont&quot;&gt;&amp;#xe61c;&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;iconfont&quot;&gt;&amp;#xe622;&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;iconfont&quot;&gt;&amp;#xe623;&lt;/i&gt;</span><br></pre></td></tr></table></figure><p><code>通过类名调用</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class=&quot;iconfont icon-qitalaji&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><p><code>在css中使用时，需复制demo测试文件中的代码</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/Drawingbed/img/20210511111449.png" alt="demo中的代码"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;iconfont&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;iconfont.eot&#x27;</span>);</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;iconfont.eot?#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>),</span><br><span class="line">      <span class="built_in">url</span>(<span class="string">&#x27;iconfont.woff2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff2&#x27;</span>),</span><br><span class="line">      <span class="built_in">url</span>(<span class="string">&#x27;iconfont.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>),</span><br><span class="line">      <span class="built_in">url</span>(<span class="string">&#x27;iconfont.ttf&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>),</span><br><span class="line">      <span class="built_in">url</span>(<span class="string">&#x27;iconfont.svg#iconfont&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shopcar</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;\e61c&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;iconfont&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>一定要特别注意路径问题！！！</em><br>在css中声明了该字体后再调用</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>less学习</title>
      <link href="posts/9ffb.html"/>
      <url>posts/9ffb.html</url>
      
        <content type="html"><![CDATA[<h1 id="less-学习"><a href="#less-学习" class="headerlink" title="less 学习"></a>less 学习</h1><blockquote><p>看到 less 老是想起 less is more 这句话，这门语言的确是把原来很繁琐的 css 给包装成一门类似于编程语言的语言，感觉看视频只能学习到一点，关键还是看官方文档</p></blockquote><ul><li>less 是一个 css 扩展，让 css 变成支持变量，嵌套等操作的 css 语言</li><li>可以去 <a href="https://less.bootcss.com/">Less官方文档</a> 去学习</li><li>less是一门css的预处理语言</li><li>less是一个css的增强版，通过less可以编写更少的代码实现更强大的样式</li><li>在less中添加了许多的新特性：像对变量的支持、对mixin的支持… …</li><li>less的语法大体上和css语法一致，但是less中增添了许多对css的扩展，所以浏览器无法直接执行less代码，要执行必须向将less转换为css，然后再由浏览器执行</li></ul><h2 id="less-基础"><a href="#less-基础" class="headerlink" title="less 基础"></a>less 基础</h2><ul><li><p>   less 可以在浏览器端使用也可以在服务端使用</p></li><li><p>在浏览器端使用CDN：</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdnjs.cloudflare.com/ajax/libs/less.js/3.11.1/less.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p> 引入</p><ul><li><p>并且需要告诉浏览器我们写的是 less 代码：</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;less&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>   但是上面的方法是运行时编译 (也就是运行这个网页时才把 less 文件转化为 css)，影响网页加载时间</p></li><li><p>   我们想让我们写好 less 文件之后直接转换成 css 文件，这里 vscode 安装 <code>EasyLESS</code> 插件，写好之后会自动生成语义相同的 css 文件</p></li></ul><h2 id="关于EasyLESS扩展的配置"><a href="#关于EasyLESS扩展的配置" class="headerlink" title="关于EasyLESS扩展的配置"></a>关于EasyLESS扩展的配置</h2><p>在settings.json文件中添加以下代码（注意json文件中尽量不要添加中文注释，会报错）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;    </span><br><span class="line">    <span class="attr">&quot;less.compile&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;compress&quot;</span>:  <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;sourceMap&quot;</span>: <span class="literal">true</span>,  </span><br><span class="line">        <span class="attr">&quot;out&quot;</span>:       <span class="literal">true</span>, </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>compress</code> 代表压缩css。</p></li><li><p><code>sourceMap</code> 代表生成地图（在浏览器控制台可以追踪到less文件位置）</p></li><li><p><code>out</code>代表输出对应的css文件</p><p>所以一般全部都为true</p><p>当然你也可以这样</p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;less.compile&quot;: &#123;</span><br><span class="line">    &quot;out&quot;: &quot;$&#123;workspaceRoot&#125;\\src\\assets\\css\\&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>‘${workspaceRoot}’ 代表的是根目录；</p></li><li><p>这样就可以更改生成.css文件的路径了，但是上面代码配置是我的.css文件的目录地址，这个自行配置就行；</p></li></ul><p>在 less 中导入文件用 <code>@import</code></p><p><strong>import用来将其他的less引入到当前的less</strong></p><p>可以通过import来将其他的less引入到当前的less中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;../test.less&quot;;</span><br></pre></td></tr></table></figure><h3 id="less-注释"><a href="#less-注释" class="headerlink" title="less 注释"></a>less 注释</h3><ul><li>   less 里面的注释分为在编译之后仍然显示和在编译以后不显示两种</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/* 我在编译之后仍然显示 */  css中的注释，内容会被解析到css文件中</span><br><span class="line">// 我在编译之后不显示 less中的单行注释，注释中的内容不会被解析到css中</span><br></pre></td></tr></table></figure><h3 id="less-变量"><a href="#less-变量" class="headerlink" title="less 变量"></a>less 变量</h3><ul><li>   less 中使用 <code>\@</code> 来定义变量</li><li>   less 中的变量是<code>块级作用域</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@color:pink;</span><br></pre></td></tr></table></figure><ul><li>   选择器和属性名同样可以作为变量 (但是这种形式用的很少)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@m:margin;</span><br><span class="line">@selector:#wrap;</span><br><span class="line">* &#123;</span><br><span class="line">    // 使用的时候要加大括号</span><br><span class="line">    @&#123;m&#125;:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">@&#123;selector&#125; &#123;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line">// 网址在使用的时候也要加大括号</span><br><span class="line">@image: &quot;../image&quot;;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;@&#123;image&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>   变量的延迟加载 (变量提升)：less 会等到块级作用域加载完成才会替换里面的变量</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    //可以先使用后定义</span><br><span class="line">    z-index: @var;</span><br><span class="line">    @var: 3;</span><br><span class="line">&#125;</span><br><span class="line">// z-index 属性值为 3</span><br></pre></td></tr></table></figure><ul><li>变量发生重名时，会优先使用比较近的变量</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@d:200px;</span><br><span class="line">@d:300px;</span><br><span class="line">@h:200px;</span><br><span class="line">@h:300px;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    // 变量发生重名时，会优先使用比较近的变量</span><br><span class="line">    @d:115px;</span><br><span class="line">    <span class="attribute">width</span>: @d;  //此处使用<span class="number">115px</span></span><br><span class="line">    <span class="attribute">height</span>: @h; //此处使用<span class="number">115px</span></span><br><span class="line">    //可以在变量声明前就使用变量</span><br><span class="line">    @h:115px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>其实 css3 中也支持变量，以两个横线开头定义一个变量<code>--</code></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="comment">/* css原生也支持变量的设置 */</span></span><br><span class="line">    --<span class="attribute">color</span>:<span class="number">#ff0</span>;</span><br><span class="line">    --length:<span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>新版本语法</strong><code>$</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    // 新版的语法</span><br><span class="line">    <span class="attribute">height</span>: $width;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="http://www.ruanyifeng.com/blog/2017/05/css-variables.html">css3的变量详解</a></li></ul><h3 id="less-嵌套规则"><a href="#less-嵌套规则" class="headerlink" title="less 嵌套规则"></a>less 嵌套规则</h3><ul><li>   父标签的样式可以嵌套子标签的样式 (像在 html 里面的结构一样)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:pink;</span><br><span class="line">    <span class="selector-class">.inner</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: purple;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>假如要让 子元素 .inner 添加一个 hover 属性</p><p>   <em>&amp; 表示父类的名称</em></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:pink;</span><br><span class="line">    <span class="selector-class">.inner</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: purple;</span><br><span class="line">        // 不能直接在里面写 <span class="selector-pseudo">:hover</span>,这样写他会直接变成inner的子元素</span><br><span class="line">        // 要这样写</span><br><span class="line">        &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">            <span class="attribute">background</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-混合"><a href="#less-混合" class="headerlink" title="less 混合"></a>less 混合</h3><ul><li>   混合是为了避免大量重复的样式代码，可以将一部分样式打包成代码块 (长得很像函数)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 可以传参，即使没有参数也要加括号，加了括号后在 css 文件中不会显示</span><br><span class="line"><span class="selector-class">.template</span>(<span class="keyword">@w</span>,<span class="keyword">@h</span>) &#123;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">    <span class="attribute">width</span>: @w;</span><br><span class="line">    <span class="attribute">height</span>: @h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    // 上面的样式就添加到里面了</span><br><span class="line">    <span class="selector-class">.template</span>(<span class="number">100px</span>,<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>   less 混合支持默认参数，例如：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.template(@w:100px,@h:200px) &#123;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">    <span class="attribute">width</span>: @w;</span><br><span class="line">    <span class="attribute">height</span>: @h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    // 这时里面可以不用传参数</span><br><span class="line">    <span class="selector-class">.template</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>   less 也支持命名参数，解决了参数不匹配的问题</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.template(@w:100px,@h:200px,@c:pink) &#123;</span><br><span class="line">    <span class="attribute">color</span>: @c;</span><br><span class="line">    <span class="attribute">width</span>: @w;</span><br><span class="line">    <span class="attribute">height</span>: @h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    // <span class="selector-class">.template</span>(black);</span><br><span class="line">    // 显示错误，w 参数把 black 接收了过去，导致显示错误</span><br><span class="line">    .template(@c:black);</span><br><span class="line">    // 正确写法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>小知识：haslayout：是 ie6 版本之前的兼容性问题，可以开启 haslayout 来解决兼容性问题 开启的方法：<code>overflow: hidden</code></p></blockquote><ul><li>   less 匹配模式：例如想要弄四个方向的三角型，可以在函数的第一个参数上弄一个标识符，然后就可以定义四个混合，这时就可以根据传入的参数来判断想要用的是哪个方向的三角型</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 向左的三角型</span><br><span class="line">.template(L,@w:100px,@h:200px,@c:pink) &#123;</span><br><span class="line">    // 假如里面是画三角型的方法</span><br><span class="line">    <span class="attribute">color</span>: @c;</span><br><span class="line">    <span class="attribute">width</span>: @w;</span><br><span class="line">    <span class="attribute">height</span>: @h;</span><br><span class="line">&#125;</span><br><span class="line">// 向右的三角型</span><br><span class="line">.template(R,@w:100px,@h:200px,@c:pink) &#123;</span><br><span class="line">    // 假如里面是画三角型的方法</span><br><span class="line">    <span class="attribute">color</span>: @c;</span><br><span class="line">    <span class="attribute">width</span>: @w;</span><br><span class="line">    <span class="attribute">height</span>: @h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    // 想要一个向左的三角型</span><br><span class="line">    <span class="selector-class">.template</span>(L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>当混合里面的第一个参数是 <code>@_</code> 时并且也拥有其他形参时，调用同名混合也会把拥有这个参数的混合调用上</p><ul><li>arguments 变量：和 js 中的 <code>arguments</code> 是一样的，是包含实参的<em>伪数组</em></li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>() &#123;</span><br><span class="line">    <span class="attribute">border</span>: @arguments;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="selector-class">.border</span>(<span class="number">1px</span>,solid,black);</span><br><span class="line">&#125;</span><br><span class="line">// 可以把合并语法传入进去</span><br></pre></td></tr></table></figure><h3 id="less-计算"><a href="#less-计算" class="headerlink" title="less 计算"></a>less 计算</h3><ul><li>在 less 中，计算的双方只需要一方带单位就可以了</li><li>例如：<code>100 + 100px == 200px</code></li><li>为了和 css 保持兼容，less 不会把 <code>calc()</code> 属性计算出来，会留到 css 中计算<br>在less中所有的数值都可以直接进行运算</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">    // 在less中所有的数值都可以直接进行运算</span><br><span class="line">    // + - * /</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span> + <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>/<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="selector-class">.box1</span>&#123;</span><br><span class="line">      <span class="comment">/* calc()计算函数 */</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">200px</span>*<span class="number">2</span>);</span><br><span class="line">      <span class="attribute">height</span>: <span class="built_in">var</span>(--length);</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="built_in">var</span>(--color);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-继承"><a href="#less-继承" class="headerlink" title="less 继承"></a>less 继承</h3><ul><li>   继承同样是为了压缩代码，混合有时候两个类似的功能，他们的 css 代码相差不多，但是里面有很多的重复，这时我们可以使用继承来写这部分代码</li><li>   在继承中不支持参数</li><li>   语法格式：<code>div:extend(.jicheng)</code> (实质就是在两个选择器中加了一个逗号)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//:<span class="built_in">extend</span>() 对当前选择器扩展指定选择器的样式（选择器分组）</span><br><span class="line">.p2:<span class="built_in">extend</span>(.p1)&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p3</span>&#123;</span><br><span class="line">    //直接对指定的样式进行引用，这里就相当于将p1的样式在这里进行了复制</span><br><span class="line">    //mixin 混合</span><br><span class="line">    <span class="selector-class">.p1</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 使用类选择器时可以在选择器后边添加一个括号，这时我们实际上就创建了一个mixins</span><br><span class="line"><span class="selector-class">.p4</span>()&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p5</span>&#123;</span><br><span class="line">    <span class="selector-class">.p4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>或者我们这样来看更直观</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// less 文件</span><br><span class="line"><span class="selector-class">.jicheng</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span>:<span class="built_in">extend</span>(.jicheng) &#123;</span><br><span class="line">    /* header 里的代码 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>   less 编译后</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css 文件 */</span></span><br><span class="line"><span class="selector-class">.jicheng</span>,</span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="comment">/* header 里的代码 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>   想要继承类的所有状态需要在 extend 后面加上 all <code>div:extend(.jicheng all)</code></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jicheng</span> &#123;</span><br><span class="line">    // 继承的东西...</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.jicheng</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    // <span class="selector-pseudo">:hover</span> 继承的东西...</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span>:<span class="built_in">extend</span>(.jicheng all) &#123;</span><br><span class="line">    // header 自己的样式</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>   这样就可以继承本身的和 :hover 的了</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jicheng</span>,</span><br><span class="line"><span class="selector-class">.header</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.jicheng</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.header</span><span class="selector-pseudo">:hover</span> &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习（八）</title>
      <link href="posts/esde.html"/>
      <url>posts/esde.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言😊"><a href="#前言😊" class="headerlink" title="前言😊"></a>前言😊</h1><blockquote><p>网络模块的封装</p><p>最后一点点了，加油鸭😙</p><p>还要多做项目提高自己😐 </p><ul><li>常见的网络请求模块，以及优缺点对比。</li><li>JSONP的原理和封装</li><li>JSONP原理回顾</li><li>JSONP请求封装</li><li>axios的内容详解</li><li>认识axios网络模块</li><li>发送基本请求</li><li>axios创建实例</li><li>axios拦截器的使用</li></ul></blockquote><h1 id="网络模块的选择❓"><a href="#网络模块的选择❓" class="headerlink" title="网络模块的选择❓"></a>网络模块的选择❓</h1><p><strong>Vue中发送网络请求有非常多的方式, 那么, 在开发中, 如何选择呢?</strong></p><ol><li><strong>选择一: 传统的<code>Ajax</code>是基于<code>XMLHttpRequest(XHR)</code></strong><br>为什么不用它呢?<br>非常好解释, 配置和调用方式等非常混乱.<br>编码起来看起来就非常蛋疼.<br>所以真实开发中很少直接使用, 而是使用<code>jQuery-Ajax</code></li><li><strong>选择二: 在前面的学习中, 我们经常会使用<code>jQuery-Ajax</code></strong><br>相对于传统的Ajax非常好用.<br>为什么不选择它呢?<br>首先, 我们先明确一点: 在Vue的整个开发中都是不需要使用jQuery了.<br>那么, 就意味着为了方便我们进行一个网络请求, 特意引用一个jQuery, 你觉得合理吗?<br>jQuery的代码1w+行.<br>Vue的代码才1w+行.<br>完全没有必要为了用网络请求就引用这个<code>重量级的框架</code>.</li><li><strong>选择三: 官方在Vue1.x的时候, 推出了<code>Vue-resource</code>.</strong><br>Vue-resource的体积相对于jQuery小很多.<br>另外Vue-resource是官方推出的.<br>为什么不选择它呢?<br>在Vue2.0退出后, Vue作者就在GitHub的Issues中说明了去掉vue-resource, 并且以后也不会再更新.<br>那么意味着以后vue-reource不再支持新的版本时, 也不会再继续更新和维护.<br>对以后的项目开发和维护都存在很大的隐患.</li><li><strong>选择四: 在说明不再继续更新和维护vue-resource的同时, 作者还推荐了一个框架: axios</strong><br>axios有非常多的优点, 并且用起来也非常方便.<br>稍后, 我们对他详细学习.</li></ol><h1 id="jsonp"><a href="#jsonp" class="headerlink" title="jsonp"></a>jsonp</h1><p>在前端开发中, 我们一种常见的网络请求方式就是<strong>JSONP</strong></p><ul><li>使用JSONP最主要的原因往往是为了解决跨域访问的问题.</li></ul><p><strong>JSONP的原理是什么呢?</strong></p><ul><li>JSONP的核心在于通过&lt;script&gt;标签的src来帮助我们请求数据.</li><li>原因是我们的项目部署在domain1.com服务器上时, 是不能直接访问domain2.com服务器上的资料的.</li><li>这个时候, 我们利用&lt;script&gt;标签的src帮助我们去服务器<code>请求到数据</code>, 将数据当做一个javascript的函数来执行, 并且执行的过程中传入我们需要的json.</li><li>所以, 封装jsonp的核心就在于我们监听window上的jsonp进行<code>回调时的名称</code>.</li></ul><p><strong>JSONP如何封装呢?</strong></p><p>我们一起自己来封装一个处理JSONP的代码吧.</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510193510.png" alt="image-20210510193501397"></p><h2 id="JSONP封装"><a href="#JSONP封装" class="headerlink" title="JSONP封装"></a>JSONP封装</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510193608.png" alt="image-20210510193607183"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510193616.png" alt="image-20210510193615392"></p><h1 id="认识axios"><a href="#认识axios" class="headerlink" title="认识axios"></a>认识axios</h1><h2 id="为什么选择axios"><a href="#为什么选择axios" class="headerlink" title="为什么选择axios?"></a>为什么选择axios?</h2><p><strong>功能特点:</strong></p><ul><li>在浏览器中发送 XMLHttpRequests 请求</li><li>在 node.js 中发送 http请求</li><li>支持 Promise API</li><li>拦截请求和响应</li><li>转换请求和响应数据</li><li>等等</li></ul><h2 id="axiox请求方式"><a href="#axiox请求方式" class="headerlink" title="axiox请求方式"></a>axiox请求方式</h2><p><strong>支持多种请求方式:</strong></p><ul><li>axios(config)</li><li>axios.request(config)</li><li>axios.get(url[, config])</li><li>axios.delete(url[, config])</li><li>axios.head(url[, config])</li><li>axios.post(url[, data[, config]])</li><li>axios.put(url[, data[, config]])</li><li>axios.patch(url[, data[, config]])</li></ul><p><strong>如何发送请求呢?</strong></p><p>我们继续往下看</p><h1 id="发送基本请求"><a href="#发送基本请求" class="headerlink" title="发送基本请求"></a>发送基本请求</h1><h2 id="发送get请求演示"><a href="#发送get请求演示" class="headerlink" title="发送get请求演示"></a>发送get请求演示</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510193826.png" alt="image-20210510193824511"></p><h2 id="发送并发请求"><a href="#发送并发请求" class="headerlink" title="发送并发请求"></a>发送并发请求</h2><p>有时候, 我们可能需求同时发送<code>两个请求</code></p><ul><li>使用axios.all, 可以放入多个请求的数组.</li><li>axios.all([]) 返回的结果是一个数组，使用 axios.spread 可将数组 [res1,res2] 展开为 res1, res2</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510193937.png" alt="image-20210510193936291"></p><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p>在上面的示例中, 我们的<code>BaseURL是固定的</code></p><p>事实上, 在开发中可能很多参数都是固定的.</p><p>这个时候我们可以进行一些抽取, 也可以利用<code>axiox的全局配置</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.baseURL = <span class="string">&#x27;123.207.32.32:8000&#x27;</span></span><br><span class="line">axios.defaults.headers.post[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194050.png" alt="image-20210510194048412"></p><h2 id="常见的配置选项"><a href="#常见的配置选项" class="headerlink" title="常见的配置选项"></a>常见的配置选项</h2><p><strong>请求地址</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: &#39;&#x2F;user&#39;,</span><br></pre></td></tr></table></figure><p><strong>请求类型</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">method: &#39;get&#39;,</span><br></pre></td></tr></table></figure><p><strong>请根路径</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baseURL: &#39;http:&#x2F;&#x2F;www.mt.com&#x2F;api&#39;,</span><br></pre></td></tr></table></figure><p><strong>请求前的数据处理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">transformRequest:[function(data)&#123;&#125;],</span><br></pre></td></tr></table></figure><p><strong>请求后的数据处理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">transformResponse: [function(data)&#123;&#125;],</span><br></pre></td></tr></table></figure><p><strong>自定义的请求头</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">headers:&#123;&#39;x-Requested-With&#39;:&#39;XMLHttpRequest&#39;&#125;,</span><br></pre></td></tr></table></figure><p><strong>URL查询对象</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">params:&#123; id: 12 &#125;,</span><br></pre></td></tr></table></figure><p><strong>查询对象序列化函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paramsSerializer: function(params)&#123; &#125;</span><br></pre></td></tr></table></figure><p><strong>request body</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data: &#123; key: &#39;aa&#39;&#125;,</span><br></pre></td></tr></table></figure><p><strong>超时设置s</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timeout: 1000,</span><br></pre></td></tr></table></figure><p><strong>跨域是否带Token</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">withCredentials: false,</span><br></pre></td></tr></table></figure><p><strong>自定义请求处理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adapter: function(resolve, reject, config)&#123;&#125;,</span><br></pre></td></tr></table></figure><p><strong>身份验证信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth: &#123; uname: &#39;&#39;, pwd: &#39;12&#39;&#125;,</span><br></pre></td></tr></table></figure><p><strong>响应的数据格式 json / blob /document /arraybuffer / text / stream</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">responseType: &#39;json&#39;,</span><br></pre></td></tr></table></figure><h1 id="axios的实例"><a href="#axios的实例" class="headerlink" title="axios的实例"></a>axios的实例</h1><p>为什么要创建axios的实例呢?</p><ul><li>当我们从axios模块中导入对象时, 使用的实例是默认的实例.</li><li>当给该实例设置一些默认配置时, 这些配置就被固定下来了.</li><li>但是后续开发中, 某些配置可能会不太一样.</li><li>比如某些请求需要使用特定的baseURL或者timeout或者content-Type等.</li><li>这个时候, 我们就可以创建新的实例, 并且传入属于该实例的配置信息.</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194540.png" alt="image-20210510194539509"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194546.png" alt="image-20210510194546101"></p><h2 id="axios封装"><a href="#axios封装" class="headerlink" title="axios封装"></a>axios封装</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194602.png" alt="image-20210510194601880"></p><h1 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h1><h2 id="如何使用拦截器？"><a href="#如何使用拦截器？" class="headerlink" title="如何使用拦截器？"></a>如何使用拦截器？</h2><p><strong>axios提供了拦截器，用于我们在发送每次请求或者得到相应后，进行对应的处理。</strong></p><p>如何使用拦截器呢？</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194630.png" alt="image-20210510194629478"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194643.png" alt="image-20210510194642203"></p><h2 id="拦截器中都做什么呢？"><a href="#拦截器中都做什么呢？" class="headerlink" title="拦截器中都做什么呢？"></a>拦截器中都做什么呢？</h2><p>请求拦截可以做到的事情：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194716.png" alt="image-20210510194715858"></p><p>请求拦截中错误拦截较少，通常都是配置相关的拦截</p><p>可能的错误比如请求超时，可以将页面跳转到一个错误页面中。</p><h2 id="拦截器中都做什么呢？-1"><a href="#拦截器中都做什么呢？-1" class="headerlink" title="拦截器中都做什么呢？"></a>拦截器中都做什么呢？</h2><p><strong>响应拦截中完成的事情：</strong></p><p>响应的成功拦截中，主要是对数据进行过滤。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194814.png" alt="image-20210510194813757"></p><p>响应的失败拦截中，可以根据<code>status</code>判断报错的错误码，跳转到不同的错误提示页面。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210510194827.png" alt="image-20210510194827158"></p><p>加油鸭，各位💭</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我要我们在一起</title>
      <link href="posts/9520.html"/>
      <url>posts/9520.html</url>
      
        <content type="html"><![CDATA[<p>偶然之间看到一篇帖子, 想到了现在我和某人，不知道后来的我们, 我们的十年会不会也变成这样🌎</p><blockquote><p>整理后的帖子相对完整，原文缺失部分</p><p>这是整理后的帖子 原文： <a href="https://www.douban.com/note/260167887/">https://www.douban.com/note/260167887/</a></p><p>原作者： <a href="https://www.douban.com/people/zmnnzgbd/">你这个贱人</a></p><p>原文地址：豆瓣：<a href="https://www.douban.com/group/topic/36139334/">http://www.douban.com/group/topic/36139334/</a> 【贱贱贱人直播】与我十年长跑的女朋友就要嫁人了。📺</p><p> 故事背景地：<a href="http://www.tudou.com/programs/view/36RvNyr4TUI/">http://www.tudou.com/programs/view/36RvNyr4TUI/</a></p></blockquote><p>昨天下午凌一尧给我发来一张照片，是一件婚纱，她问好不好看，我说还行。 </p><p>她说“初五举办婚礼，和我们以前想象得一样，有鲜花拱门，有红地毯，有白婚纱黑礼服，就是没有你。” </p><p>我说“要不要我去凑个份子？” </p><p>她半天之后才回复说:“不用了。 </p><p>————————————————————分割线—————————————————————<br>2001年的夏天，我十六岁，正在读高中。即便是夜晚，气温仍然高得令人辗转反侧，黑漆漆的夜晚满是室友们翻身和叹息的声音，而我咬着小电筒，蒙着一条薄被单，写下人生中唯一的一封情书。<br>我的读者叫凌一尧，马尾辫，大前额，身材娇小，细腰长腿小翘臀。要命的是，她偏偏是一位学霸，常年霸占月考名次红榜第一排，这样脑瓜子聪明又美得翻泡的妞儿绝对是众人心目中的雅典娜，只可跪舔不能直视。<br>几乎每天，我都会想入非非，幻想着各种与她搭讪的场面。其中包括她从楼梯上滚下来毁容了，我抱她朝着医院狂奔，并且发誓这辈子我都不会抛弃她，最后她在我的怀里留下了幸福的泪水。<br>送出情书的第二天，我的创作地点就转移到政教处办公室，对面坐着姚主任，我们私下管他叫“姚千岁”。他说：“吕钦扬同学啊，昨天你一夜写了三页纸，今天怎么就咬笔杆了？是不是这个环境不利于激发创作灵感，要不要拿回宿舍慢慢写？”<br>我理智地拒绝道：“不用了，这里有空调。”<br>凌一尧把我的情书送给政教处，这事做得太坑，我内心的伤痛尚未愈合，班主任跑来告诉我一个好消息：“你要上电视了！”<br>“什么电视？”我有些激动。<br>“闭路电视。经过校领导研究决定，这次纪律整顿大会的主题是杜绝早恋，你要在学校直播室做一次公开检讨。”<br>“为什么是我？不就一封情书吗？”<br>班主任思索片刻，说：“可能是别人脸皮太薄了，怕留下心理阴影。”<br>他妈的！<br>纪律整顿电视会议之前的那几天，我的心情却糟糕到极点。<br>每次远远地看见凌一尧，我都会走向旁边的岔路，不愿意与她打照面。说实话，我对她有些记恨，无法理解她为什么那样做，难道被我喜欢是一件很痛苦的事情？如果是这样，以后不喜欢你就是了呗。<br>据说历次电视会议的录像都会被妥善保存，作为我校发展历程的丰碑，为了给学妹们留下一个好印象，我特意理了一个清爽的发型，熨了一下白衬衫，还借了一双白色的耐克跑步鞋。第一次上电视，好激动。<br>那天中午政史二班的体育委员来访，对我进行亲切慰问，鼓励我好好表现。他带来一个消息，说那封情书不是被上交的，而是被他们班主任曹老太缴获的，凌一尧还被拉到办公室做了一通思想审查。<br>学校演播室中间摆着一台黑色的摄像机，镜头前面摆着一个主席台，依次坐着诸位领导以及各年级组长，而门口站着的是六名犯罪嫌疑人，其中一个就是我。那五个家伙我差不多都认识，他们的罪名比较另类，什么拿街机子儿冒充硬币买茶叶蛋，什么大半夜拿鱼竿在校园的池塘里钓鱼的，还有那位住在二楼的同学，他用大搪瓷杯装尿往院墙外面泼，墙外方圆几米的庄稼死得透透的，连野草都长不出一棵。<br>相比之下，我绝对是最纯洁的。但不知道为什么，当我说我因为写情书给女孩却被对方送给老师了，他们一个个都面露鄙夷之色，仿佛我犯下比他们更龌龊的罪行。当时我就清醒地认识到，错的不是我，而是这个世界。<br>由于早恋是今天重点批判的主题，姚千岁将我安排在最后出场。班主任对我有点不放心，还特意跑来对我进行战前动员和辅导，他说：“等会儿千万不要紧张，控制住情绪。”<br>“你怕我被吓哭？”我有种受辱的感觉。<br>班主任说：“不是，我担心你在这么严肃的地方笑场。”<br>终于轮到我了，我站到话筒前面朗读上次写的检讨，尽量不看镜头，像在给姚千岁致哀悼词。正要谢幕之时，副校长却在发表一则有关早恋危害的讲话，此时我非常困窘，傻逼似的杵在那里，被全校数千双眼睛在看不见的地方盯着，这种滋味真心痛苦。<br>不知道副校长说了什么，姚千岁突然对我发问，所有人都看着我，包括镜头。我一头雾水地“啊”了一下，此处是第二声。<br>姚千岁将问题重复一遍：“吕钦扬同学，你对自己的所作所为有没有感到后悔？”当时我就震惊了！这他妈算是什么垃圾问题？你又不是没看过我那封情书，写得感人肺腑，催人泪下，引人沉思，都发誓这辈子非凌一尧不娶了，你现在他妈的问我后不后悔？我他妈只是以大局为重，配合你演一场杀鸡儆猴的戏而已，你还真把我当冤大头了？我就算真的后悔了，不可能当众说出来啊，否则以后还怎么混？面对那黑洞洞的镜头，不，那不只一个镜头，那是数千双眼睛，我作出一个重大而深远的决定———我盯着镜头，说：“我不后悔。”<br>那天傍晚的天气非常好，走出学校演播室，西边铺天盖地的一大片火烧云，我的白衬衫都被映得红彤彤的。各个班级刚好下课，学生们像出栏的猪一样涌出教室直奔餐厅，许多认识或者不认识我的人冲着我打招呼，连年轻的男女老师都意味深长地对我哼笑。<br>经过凌一尧所在的班级，几个女生拿着饭盒走出来，其中一个便是凌一尧，她抬头看见我，立即像见了鬼似的退了回去。其他女生起哄起来，悠长的“噢哟”在走廊里回荡着。我这样一个阿Q，经历此生最为辉煌的时刻，迈出的每一步都像踩在软绵绵的云端，仿佛自己是一个凯旋的盖世英雄。<br>我为一时的倔强付出巨大的代价———惩罚等级由警告升级为记过，礼拜一全校晨会，别人都在聆听领导训话，而我在冲洗操场角落那个简陋又瘟臭的厕所。冲完厕所以后，我淡定地走过队列前面的那条煤渣路，手里的铁皮桶吱呀吱呀地响着，相当拉轰。<br>这些举动相当幼稚，用现在的话概括这是在“作死”，但它们在当时足以让我成为全校的三大奇葩之一。更悲剧的是，入榜的是我的两个死党，“大乔”和“子石”。我之所以鼓起勇气给凌一尧写情书，其中一个原因便是和这两个傻逼打赌了，他们说如果我追到凌一尧，他们就在校园里裸奔一圈。<br>当时周杰伦才出道，大乔就果断成为铁粉，一曲《爱在西元前》日夜哼唱，最终进入全校文艺汇演的名单。然而，正式演出那天他当着数千师生的面公然忘词。他悲愤下台后并未气馁，而是继续苦练这首歌，两天以后的傍晚，他偷偷翻窗进入学校总控室，对着麦克风重新清唱一遍《爱在西元前》，那销魂的歌声传遍校园的每一个角落。子石名叫蒋慧东。他去泡隔壁职高的一个妹子，几个地痞们带着自家车床磨出的砍刀来战，他舞着泔水老汉的扁担，光着膀子把对方揍得满地找牙，连学校保安都没敢过问。但就是这样一个群架王，晚自习时突发奇想，挖了一坨清凉油抹在JJ上，试图达到“头悬梁锥刺股”的功效，最后他的嚎叫响彻整个教学区，从此再也没人记得他的神勇。我不知道大家如何评价的，因为我的氪金狗耳早已阵亡。之所以重点这两位仁兄，是因为他们俩正在看这个直播故事，他们希望我多褒少贬，不要破坏他们的伟岸形象，但我选择站在真相这一边。随后很长时间里，我都不太好意思和凌一尧走得太近，因为总有傻逼在旁边“矮油”“噢哟”。子石和大乔不遗余力地耍宝，烘托我的形象，而我感觉这样太小丑了，但一抬头我看见凌一尧嘴角的笑，一下子发现自己非常愿意当这个小丑。在那个年龄，无论无意的出糗还是有意的献丑，只要能博取那个人的一笑，便会欣喜若狂。而多年以后，这样的快乐已然灭绝。<br>因为有我这个炮灰的经验教训摆在这里，喜欢凌一尧的男生很多，敢于追求的却几乎没有。我们亲眼看见一个高三哥把她在圣诞节把她约到桥边，送她一盒巧克力，凌一尧怎么不肯要，三哥一怒之下把那盒巧克力丢进河里。第二天，子石和大乔把巧克力盒子捞上来，打开包装一看，嘿，没有进水。我们把巧克力分了，晚上遇到凌一尧时我拿了三块几乎被我焐软的巧克力给她，她居然没有拒绝，收下了！我本来是想恶作剧一下而已，她这样一来，我都没敢说那是昨天被丢下河的那盒巧克力。巧克力事件之后，莫名其妙地，我和她的关系出现好转，虽然彼此遇见时从来不打招呼，但她嘴角总是有一丝浅得几乎看不出来的微笑。<br>“你眼瞎啊，她一直板着脸，哪里有过微笑？”大乔非常直白地反对。子石也很困惑:“难道这就是肉笑皮不笑？”我只能慨叹这两个蠢货的无知，告诉他们有一些东西“只有相爱的人才能体会”。后来凌一尧说，那大半年里我们是在用意念恋爱，没有一句对白。<br>为了迎接素质教育检查团的视察，学校举办一次声势浩大的秋季运动会，还从体校借了一帮外援来捧场。那三天里，全校处于停课状态，对我而言这就是另一个形式的放假而已。而我发现自己有半套黄冈密卷的作业没写，科代表说运动会一结束就要交作业，我不得不加班加点地抄答案。教室里只有寥寥几人，凌一尧突然来我们班找一位学霸妹子，也是她的初中同学。我躲在高耸入云的书堆后面，看着她们低声说笑，虽然不知道她们在聊些什么，可是她一笑，我也忍不住跟着龇牙咧嘴。不料，她一扭头看见我时愣了一下，双眼瞪得大大的，就跟喵星人准备开天眼了似的。<br>我赶紧低头写试卷，再一抬头时她已经站在我旁边，我一紧张，赶紧把那份标准答案往桌肚子里塞，比被老师发现还紧张。她伸手把那份答案掏出来，说：“我还以为你在认真学习呢，原来是在抄答案。”<br>我说“偶尔为之……”<br>她又问：“你怎么从来都不和我说话的？”<br>我说：“我怕写检讨。”<br>她的小脸涨得通红，辩解道：“那个真不是我弄的！我把那信夹在英语课本里，被曹老师翻到的！”<br>我说：“你知道姚千岁说了什么不？他说我是‘害群之马’，自己不学好还去骚扰人家品学兼优的女生，是‘癞蛤蟆想吃天鹅肉’。他都这样说了，我怎么敢再和你说话？”<br>她皱起眉头，将信将疑地说：“姚主任是想用激将法吧？”<br>我哼笑一声，说：“如果我以后有出息，这就是激将法，如果我没有出息，这就是他的神机妙算，老狐狸从来不会吃亏的。不过他也没有说错，我的确是癞蛤蟆想吃天鹅肉，可能再过多少年，我还是他手里的反面教材。”<br>“你后悔了？”她低声问道。<br>我说：“不知道……”<br>运动会之后没多久，凌一尧偷偷塞给我一张字条，她说：“如果你能够考到本科，高考结束以后咱们就假装在一起，气死姚千岁！”<br>子石和大乔很快发现我的不正常，因为我很少搭理他们俩，整天埋在教室里学习，有点“不合群”了。他们俩试图拯救我于水火之中，但研究许久都未果，直到看见我与凌一尧在教学楼走廊里相视一笑，他们才若有所悟。<br>于是，我被驱逐出三大奇葩的队列。其实没有了我，他们俩照样可以玩得很嗨，譬如用煤渣块狙击操场上接吻的小情侣。整个高三，我们都保守着这个秘密，两人即便在校园里迎面走过，也从来不打一声招呼。但我看见她浅浅的笑意，我努力压抑着内心的激动，双拳握得指甲嵌入掌心。偶尔旁边没人的时候，我会自言自语地把她的姓名说出来，然后像一只疯猴子似的狂奔乱跳，那真是一件快乐到极点的事情。凌一尧，我喜欢你呀！喜欢得恨不得在教学楼里裸奔，恨不得在操场上打滚，恨不得冲进校长办公室尖叫！那一年的高考，全省数学平均分68分，我只考了38分，总分离本科线还差9分！填报志愿那天，我和凌一尧在美术考生画室旁边的天台上聊天，我非常沮丧地告诉她，我没能达到本科线，她不用兑现当初的约定了，但凌一尧抿着嘴巴摇头，笑盈盈的样子。她说：“只要你努力过就行了呀。”我愣了一下，不太明白她的意思。她再对我眨巴眼睛，我这时候才猛然顿悟，开心得手舞足蹈起来，而她甩着小手直打我，叫我“不要发癫”。这是她的一个口头禅，每当我或者她的朋友开心得失态，她就会很温和地笑着，在后面提醒“哎呀，不要发癫啦！”对我而言，这个分数只适合报大专，而具体哪个学校哪个专业都是无所谓，当前要务是离凌一尧近一些，于是我和她一起去了六朝古都。我们的学校不在同一个区，但坐车也就半个小时路程，平时见面还不是难事。大一的课程比较少，凌一尧突然提出来要去勤工俭学，我问她准备干点什么，她提出来的想法毫无创意，什么饭店接待，发传单，卖电话卡。<br>我问她“你知道我爷爷干嘛的么？”她摇头说不知道。我说国庆节回家，我把他的传家宝带来，到时候你就看着吧，我小学就做他的学徒了。国庆节之后，我们在大学城摆起爆米花的小摊位，摇啊摇，摇啊摇，砰！那天爆米花很好卖，特别是凌一尧心惊胆战地摇着那个摇把，就有许多人过来围观，毕竟女孩子做这个太新鲜了。不过第二天傍晚就有人把我们赶走了，因为附近停了车子，一声炸响之后就有警报器鬼叫，涉嫌扰民。<br>尽管如此，我们还是很开心，晚上去看半价电影，柜台问我们要不要爆米花，我和凌一尧傻呵呵地笑。<br>她曾经说:“如果哪天我们想要分开了，就想一想曾经一起在街头卖爆米花的日子。”<br>现在我正在想，你呢？<br>大学那几年，我们与大多数校园情侣一样，试着一起打工却总是没有头绪，吃喝玩乐又没有太多钱，经常出去玩半天都花不了五十块钱，照样穷开心。到了期末，作为一个学霸，她完全闭门不出，专心复习，而我一个学渣只要做完小抄就可以安安心心地玩游戏了。<br>就这样一直混着，我到了大三时，我们面临分道扬镳的危险。她还要一年才本科毕业，以后还要考研，而我已经面临实习。她说:“要不你考专升本吧！”我考虑好几天，最后还是决定离开校门，我说“你乖乖上学，以后还要读研，我先出去闯，等你毕业了我刚好娶你过门！”我至今不知道自己当初的决定是否正确，有时坚定地认为那是男人的担当，但一旦喝多了就会把因果联系扯得非常远，最后归根结底到我没有好好念书才会导致两相忘的结局。我第一份工作，是在一家监理公司当资料员，每月只有一千四百元的工资。当时我最喜欢听别人说“工作难找”，因为只有听到这样的话，我才觉得自己不是loser。<br>在监理公司工作，本应是很轻松的，但不是指我们这种苦逼资料员，每天白天忙得要命，对着电脑处理各种文件，晚上凌一尧打电话过来和我聊天，我已经累得只想闷头大睡。当时我的心情的确非常焦躁，经常怀念学校里的惬意生活，所以当凌一尧喋喋不休地说着学校里发生的好玩的事情，我却没有耐心听下去，打断道:“明天再聊吧，你也早点休息。”她愣了一下，说:“你是关心我呢，还是嫌弃我呢？”我说:“我就是很累。”她呵呵冷笑一声，把电话挂了，周围一片寂静时我却睡不着了，一下子被自己吓醒了:三年了，这是我第一次这样大逆不道！凌一尧是一个性格很犟的女孩，她不轻易翻脸，但只要翻了脸，那就真是很难弥合了。她掀起的冷战持续足足一个礼拜，电话照接，但就是很冷淡，冷淡得让人觉得她一夜之间移情别恋了。我急得团团转，但她认为的惩罚时间一到，就立即打电话过来问“知道错了吗？”我说“罪该万死。”“以后还会再犯么？”我赶紧发誓，这辈子都不敢再敷衍她这个小姑奶奶，她这才给我一条生路。但是，冷战结束不等于我们之间的矛盾消失，她只需要学业和恋爱，而我刚刚开始承受来自各方面的压力，尤其是对未来的担忧。我当时是一个胸无大志的可怜虫，我最羡慕的职业只是总监，啥事不干就有人送烟酒塞红包，我这辈子就这点理想了。<br>资料员干了大半年，自我感觉非常良好，跟在监理后面混吃混喝，烟酒不断，施工单位把我们当爷爷供着。<br>有一天，凌一尧的手机被偷了，我发现自己的存款竟然不够给她买一只新手机。那种挫败感极其折磨人心，但凌一尧不介意，她买ic卡和我打电话，说反正平时只和我联系，叫我以后赚了大钱再给她买。有妞如此，夫复何求？可是这个“大钱”在哪里？我当时尚未感觉到紧迫感，还在盘算着自己哪天有了监理资格，该有多轻松惬意。<br>情人节那天，我和凌一尧在外面约会，经过一家婚纱店，她就把小脸贴在玻璃橱窗上看，她说“以后咱们结婚的话，就租这件婚纱走红地毯，怎样？”我得瑟地说“租什么租，直接买下来收藏就是了！”凌一尧蹲下来看角落里的标价牌，低声说“你至要不吃不喝一年半才能买下来。”我当时就脸红了，不是因为自己高估婚纱的价格，而是因为高估自己的能力。我居然要不吃不喝一年半才能给我的妻子买下婚礼上那件婚纱？说到刚毕业的那段屌丝岁月，心情有些郁闷，还是说点有趣的事情吧。那天我给凌一尧的情人节礼物是一只熊娃娃，四十五块钱。她很开心地放在家里，可是她叔叔家小孩看中那个娃娃，蛮横地抱了回去。凌一尧不好意思说不给，但她第二天坐了俩小时的车回到那个卖娃娃的小店，买了一个一模一样的，直奔她叔叔家，硬是把我送的那只换了回来。我说“两个都一样，干嘛还要换？”她说“我都给那一个取了名字，两个怎么可能一样？”<br>终于有一天，我决心辞职，离开这种安逸却庸庸碌碌的生活，原因之一是和我一起共事的监理大叔挨揍了。<br>当时监理有些严格，把施工单位惹毛了，平时称兄道弟的人按住老监理揍，最后甩下一句话:“你们这种垃圾，给脸不要脸，我们看在你们是业主的走狗的份上才丢点骨头给你们，你们还蹬鼻子上脸了？”他们没有为难我，但我被伤到了:我这辈子不可以做一个捡别人残羹冷炙的走狗。原因之二便是凌一尧考研了，我想多赚钱，争取在她研究生毕业时给她一个安稳的家。她读的是本校的研究生，于是我去南京找了工作，三年的同居生活开始了。<br>房子是凌一尧找的，四十平，月租六百。我们一起购置许多东西，比如简易折叠衣橱，厨具，餐具，以及被褥。凌一尧把两副餐具摆好，脸上满是小妻子般的认真，我躺在床上看着她忙这个忙那个，突然觉得不可思议:我十六七岁时得有多幸运才会得到这样一个小家伙的青睐！<br>凌一尧有时很像一个孩子，某个周末我去上班，她一个人在家睡到黄昏。我下班回来时她还抱着枕头睡着，我换拖鞋时她睁开眼睛，说:“吕钦扬，我最喜欢看你回家。”我说“噢”“那你什么时候最喜欢我？”我没回答上来，她有些不高兴，到了第二天早上我才告诉她“我们并肩站在镜子前一起刷牙的时候我最爱你”<br>我们那段时间的生活条件很简单，早餐是熬一小锅米粥，一小碟肉松，还有两个煮鸡蛋。我们约定谁先醒谁先去做，但每次都是她先醒，我百思不得其解，她不是那么容易自然醒的人，可是我又从来听不到闹铃声。后来我才知道，她把闹铃调成震动，把手机垫在枕头边缘，这样她就可以早起做饭又不把我吵醒。“白痴，手机会有辐射的啊！”我埋怨道。她说:“我就是喜欢喊你起床吃早饭呀！”她那得瑟的模样，就像幼儿园里得了小红花等待表扬的小朋友。<br>当时她的手机是大学室友淘汰下来送给她的，摩托罗拉的，开合时都会吱呀吱呀地响，外面的漆都掉了。我工作三个月，她的生日那天，我买了一只小的儿童蛋糕，两个人一起做了几道菜，这个生日就这样勉勉强强过掉了。 晚上，她裹着被子躺在我怀里看电视，我从枕头底下摸出一只盒子递给她，她小心翼翼地打开，里面是我攒钱买的一部夏普翻盖手机。 她盯着那手机看了半天，一句话也不说，我有些纳闷，把她掰过来时才看见她的眼泪啪嗒啪嗒地往下掉。我问道：“不喜欢？” 她还是什么话都没讲，直接搂住我的脖子，眼泪直接往我肩膀上擦，后来我才知道，前两天她同学嘲笑她的手机老土，“五十块钱卖给我都不要”，她怕我听了难过，就一直没敢告诉我。<br>哪怕已经相恋那么多年，凌一尧在我眼里依然是一个雅典娜，集性感，可爱，聪慧，与善良于一身。她穿着睡裙抬起胳膊晾晒衣裳；把我的脸假想成镜子左照右瞧的时候最可爱；她坐在台灯下一边写作业，一边与我讨论自由主义与无政府主义；她明知道行乞的人是骗子，但路过那些人面前时还是忍不住丢一枚硬币，以求自己良心的安宁。 天气转凉的时候，她开始向同学学习针织，买了毛线照着图册开始鼓捣起来，并且不允许我偷窥她的杰作。然而当作品终于完成，试穿时她才悲催地发现毛衣小了一圈，即使穿上也像猪八戒中了三个菩萨的套索似的。 我被勒得喘不过气，非常无助地看着她，她却气呼呼地拍我的肚子，说：“都怪你！养这么胖！浪费我的心血！” 为了穿上她这件开山之作，我决定努力减肥，当我觉得自己可以穿上那件毛衣，却又错过穿毛衣的季节。再后来，那件毛衣也找不着了，如今，那个为傻逼织毛衣的女孩也不见了。<br>大乔在镇江工作，而子石在宁波，有一次他们俩一起来南京玩，我们四人一起去吃傣妹。聊天时大乔说漏嘴了，说到当年他们俩和我打赌的事情，凌一尧的脸色顿时一沉，问我：“你追我就只是因为一个赌？” 我吓得脸都白了，因为我记得一些影视剧里这样的事情会导致女生彻底翻脸，大乔和子石也愣住了。 但凌一尧马上又笑起来，对大乔和子石说：“那你们俩说话算数，什么时候裸奔？”<br>子石赶紧辩解说：“等你们俩结婚了，我们就在婚礼上裸奔，好吧？” “行。”凌一尧愉快地答应。 我觉得非常欣慰，我们家尧尧是一个开得起玩笑的好孩子，但晚上回到家里，她终于收起笑脸，要我好好解释一下那个赌到底什么意思———原来她只是不想在别人面前丢我的面子，但该清算的账一个都跑不掉。 我很遗憾当时没有趁机要大乔和子石兑现诺言，现在他们再也不需要裸奔了。<br>有时我觉得凌一尧挺难揣摩的，还是一次情人节的早上，我们在南京地铁站外面看到一个男人捧着一束花向一个女孩单膝下跪，当众表达爱意。凌一尧一脸艳羡地旁观着，一口气一直提着，直到围观结束才舒畅地吐出来，啧啧地回味无穷。她看得太认真，以至于不知不觉地将嘴里的豆浆吸管咬扁了，有点郁闷，我只得去便利店买了一瓶爽歪歪，因为可以拿吸管。 我以为她喜欢这种浪漫的玩意儿，于是下午下班后也买了一束花，准备找个地方让她开心一下，不料见面后我刚把花拿出来，她吓得赶紧往旁边走，低声说：“快收起来，丢人死了！” 我有些受挫，垂头丧气地跟她一起回家，不料关门以后她一边埋怨我乱花钱，一边得瑟地把花夺过去闻了又闻，喜悦之情溢于言表。我问她为什么看别人送花表白时那么开心，她说：“喜欢看戏又不等于喜欢演戏，被人围观的时候好难为情啊，像个白痴似的。” “那我们结婚的时候怎么办？那么多人围观。。。”我问。 凌一尧想了想，居然露出紧张的神色：“是啊，还真是一道坎儿，我现在就得开始做心理准备了。”<br>凌一尧读研三的时候，她家里开始给她介绍对象，反复几次之后她终于交代说自己已经有男朋友，而且交往很久了。她家问我的具体状况，凌一尧怕被反对，于是给我虚报一些内容，尤其在收入方面，她说我的职务是部门经理，月薪八千，但事实上，但是我当时只有三千五。 “你家很在乎这个吗？”我非常脑残地问。 凌一尧白了我一眼：“在乎了又怎么样？难道现在还不是时候？” 我当时有种尊严遭到践踏，尤其是她虚报我的收入状况，觉得她瞧不起我当时的经济状况，于是自个儿生了闷气。但凌一尧也被她家里催得紧，加上做课题和找工作的压力，她的心情也非常糟糕，于是和我第一次吵开了。 我们彼此说了很伤对方的话，她说我没出息不长进，我叫她去找个小老板，不用跟着我受穷罪。最后，她气得躲在阳台上哭。我坐在房间里，看着她用了一年多的旧包，空空如也的梳妆台，还有那只我送给她的，使用两年仍然干干净净的手机，突然心酸得疼。 我走到阳台，把她拥在怀里，说了一声对不起。她没有顺从，也没有抗拒，只是望着眼前这个城市的一隅，目光里满是迷茫。我渐渐意识到，这已经不是无忧无虑的高中，也不是温饱与快乐即可安生的大学，我若是化不开她的忧虑，兴许可能永远地失去她。<br>凌一尧即将毕业时，我离开南京，因为朋友喊我一起出去闯，去海边干一个很大的围海工程。他描述了一幅美妙的蓝图，一起合伙搞土方，我在测量和预算方面有些经验，他信得过。 我当时觉得这是一个千载难逢的机会，尚未与凌一尧商量便一口答应下来，我要向她证明我不是一个安于现状的窝囊废，我终究要闯出一片天地。她知道以后非常生气，但我意已决，她也不好作出过多阻拦。她给我打包行李，又一直把我送上长途车，她没有哭，但车子开动时她站在卷起的尘土里，额发在风中飘动，抬手轻轻一挥，我整颗心都猛地沉了下去。我得有多铁石心肠，才会踏上一条离你越来越远的路呀？每当我醉了酒，天旋地晕的时候，我都会想起无数个凌一尧。 那个穿着校服扎着马尾辫，清秀又稚气的凌一尧；那个在昏暗路灯下偷偷塞字条给我的凌一尧；那个一接吻就会忍不住闭上双眼的凌一尧；那个睡到半夜突然抱住我的胳膊说“我爱你”的凌一尧。但唯有那个站在黄昏余晖中无奈地目送我远去的凌一尧，最让我寝食难安，甚至哪天让我死不瞑目。<br>海边的气候非常恶劣，紫外线强度高，而且海风像刀子一样，脚下的土地踩十秒就能踩出一个吃人的陷阱。除此以外，我们住在活动板房里，而工人们直接搭了简易窝棚，而且每一滴淡水都是稀缺资源，尽管我们面对着整片大海。 我们先请承建单位吃饭，穿得体面的都是X总，稍微邋遢的都是X工。这帮人都不是善类，他们在酒桌上的目标不是吃饭，也不是谈事，而是要把对方往死里灌，这也是朋友带我过来的原因———扛酒是我的技能之一。 这一喝，便是一顿接一顿，有时上顿的酒还没醒，下一顿的酒又开始了。 那天为了报价的事情，我们又请客吃饭，觥筹交错的时候凌一尧突然打电话来，说：“我肚子疼得厉害。”<br>“怎么了，来那个了？”我问。<br>“不是，就是疼。”<br>“是不是着凉了？要不要去医院看一下？”除了这些废话，我还能说些什么呢。<br>“你在干什么？”<br>“我在喝酒呢。”<br>凌一尧无奈地苦笑，说：“喝酒？那你继续喝吧。”然后她挂了电话，我再回拨过去，已经没人接听。此时，里面的人在喊我主持那圈酒的喝法，我只得回到包厢，然后又是喝醉。坐车回海边，一路停了四次下来呕吐，吐得魂都要丢了，却还要逞强大骂这种酱香型的酒太他妈不适应了。第二天酒醒以后，我才依稀想起凌一尧说肚子疼的事情，赶紧打电话过去慰问。她说她夜里吃了止疼片，迷迷糊糊一会儿醒一会儿睡，直到天亮才眯了一会儿。这就是恋人分离的痛苦，你不知道她有多需要你，而她不知道你有多心疼她，两个人都在各自的世界以为自己是被遗忘的那个人。大多数的矛盾都是在这种分离中诞生，若是近在咫尺，天大的矛盾，一个拥抱即可化解。“我离开这段时间你还适应吗？”我问。 她沉默片刻，说：“还好，快习惯了。就是一看见你的拖鞋，枕头，牙刷和杯子，都有些失落。以前打扫房间时在床垫底下找到你的臭袜子都会骂你，现在找不到了，却更加难过。”<br>那个围海工程相当艰苦，与大海斗智斗勇，一边铺路一边通车，潮水一来就得逃命，潮水一退就得抢工期，有时昼潮夜汐冲得猛烈，几天的血汗都白费了。那间房子的租期快到了，房东要一次交满一个季度，而我和凌一尧的八万块共同定期存款还有一个多月。她舍不得放弃利息，问我有没有现金，可我身无分文。刚好有一个堤坝等待合拢，若是潮水来了，豁口会被冲开，而抢堵的时间很有限。业主方为了避免大的损失，许诺谁去把这事操作了，可以现场支付劳务费以及机械台班费，双倍。其实这事的危险并不大，只不过潮水将至，上机操作的人会被困在堤坝上，直到潮水退去。我和另一个小伙子约好一起上了，两个人，两台大型挖掘机。一个多小时左右，豁口堵住了，我想回到岸上，但指挥部不允许，要我们呆在挖掘机上。果然，二十分钟后，潮水铺天盖地漫上来了，把黑色的编织袋堤坝淹没了，刚好把挖掘机的履带淹没一半。我四周都是茫茫的海水，海风卷着浪水往驾驶舱打，像下雨一样。没有方向感，恶心，眩晕。期间，凌一尧发短信问我在干什么，我没敢告诉她我在海水中央，我说外面在下雨，我在打牌。她说:“你不是一向不喜欢打牌吗？”<br>我说:“玩玩嘛，闲着。”她有点不高兴:“你不要沾惹那些坏习惯。”整整三个小时，潮水才渐渐退下去，我回到指挥部已经反胃得不想吃饭。拿到业主给的两千元现金，我直接开着一辆破摩托车赶往十五公里外的小镇，把钱打了过去。“我把钱打给你了。”我打电话说。“你前天不说没钱么？借的？”我说“是啊”她切地一声，说“你才不会向别人借钱呢，你不会是打牌赢来的吧？”我楞了一下，然后笑:“哈哈，被你发现了。”<br>凌一尧是一个十足的守财奴，即便她不缺钱，也不舍得在享受消费上花费过多。相处那么多年，她惦记过的名牌东西少之又少，我几乎可以数得过来。她曾经眼巴巴地惦记IPONE4，我打算给她买一部，但她嫌贵不肯要，最后买了一个IPOD。她一手举着IPOD，一手举着那只被时代甩得老远的夏普翻盖，说：“这两个加起来，就是IPONE啦，分工还很明确呢！”<br>　　我问她：“你干嘛那么节省？”<br>　　她说：“怕把你花穷了，以后娶不起我。”<br>　　我又逗她：“如果以后咱们俩不在一起，你不是亏大了吗？”<br>　　她一边鼓捣着IPOD，一边随口答道：“那更不能乱花了，万一别的女孩大手大脚的，你更娶不起了。我得给你攒着，不能让你打光棍。”<br>　　她当时只顾着玩游戏，没有多想，可是晚上睡觉睡到半夜，她突然一下子坐起来，把我吓了一跳。我问她：“你怎么了？”<br>　　她说：“刚才做梦，梦见你白天和我说的话，你为什么说以后咱们俩不在一起？”<br>　　我无奈地解释：“我就随口说说而已。”<br>　　她把被子往旁边一扯，睡到床的边缘，背对着我，嘀咕道：“以后不许说了，提都不能提。”<br>凌一尧从未到过海边，她印象中的海滨是蓝天白云软沙滩，海水哗哗地舔脚丫，但我这里是黄海，海水像咖啡一样浑浊，海风达到六七级是起步价。她毕业时曾经想来这里看我，但我没有让她来，只是说我一闲下来就争取回去找她。 我怕破坏她对大海的憧憬，怕她嫌弃我十天半个月不洗澡的邋遢，怕她心疼我的嘴巴因水土不服而长出一圈血痂。这里连一个女性专用的卫生间都没有。她到处找工作，尽管姿态摆得很低，却还是屡屡碰壁。有的单位觉得她的学历过高，生怕她呆得不长久，于是不录用；有的则完全将她视为一个普通的劳力，开出的待遇很低；甚至有人觊觎她的年轻漂亮，作出一些暗示。 而那段时间，我们正在和当地的一拨人开仗，他们带来几辆渣土车堵路，要包揽这里的活儿，叫我们让出便道工程。若是在城市里碰到这种飞扬跋扈的人，我兴许会躲得远远的，宁可吃一点亏也不去招惹，但这次不一样。我要生活，我赚钱，我要像野狗一样咬死所有抢我饭碗的同类。 那场架的参与者大概有四十多人，我们这边是一帮来自天南地北的年轻人，而对面都是当地的流氓。我们这边的人大都是老实的工人和斯文的技术员，要么不会打架，要么下不去手，非常吃亏。我遭到围殴，后脑被狠狠捶了几拳，整个人都懵了，拎起一块木方就挥舞，完全处于混乱状态。 那个和我一起守堤坝的小伙子被打急了，他满脸鲜血，一边吼着，一边爬上一台轮式挖掘机。油门一加，斗子的钢齿直接拍扁一辆渣土车的驾驶室，这样一个疯狂的举动，终于镇住那帮地痞，也保住我们的便道工程。 事后我才发现，我左手疼得厉害，端不起饭碗。我朋友送我去医院拍片子，虎口骨折并且肌腱撕裂。原本这事我们可以报警，让对方赔偿，甚至以故意伤害罪起诉，但是一旦如此，那个开挖机的小伙子也可能逃不脱干系。<br>老板说：“这事就算了吧，医药费我们自己付。” 而左手虎口的伤，虽然差不多治愈了，最终还是留下终生的缺陷，大拇指的反应非常迟钝，握拳执物时总是非常别扭。老板叫我不要去鉴定伤残，直接承诺补贴我五万元，有时，我们对于这个社会而言只是一个小小的工蚁，随时可以是一个牺牲品。凌一尧知道以后在电话里哭，叫我赶快回南京，但我没有听她的，固执地留了下来。我叫她再等我一段时间，只要工程结束，我拿了工资分红和伤残补贴金，就完全有能力娶她回家了。<br>凌一尧向来是一个非常隐忍的女孩，如果不是沉重得让她无法承受的坏情绪，她都不会轻易向我宣泄，顶多闹一闹小脾气就过去了。她终于找到一份算得上满意的工作，每天一个人上班下班，一个人吃饭睡觉。我从镇上搞来一个无线上网卡，夜晚闲下来时会开车开到一个搜得到信号的堤坝上，和她视频一会儿。她每次都会像约会似的认真对待，梳洗化妆，连小房间都收拾得干干净净。由于摄像头和屏幕是两回事，我们轮流看着着镜头，好让对方可以感受被“深情凝望”的滋味。有时我会说：“尧尧，我想要你了。”她说：“来吧。” 然后我们互相抖窗口，这就是相隔数百公里的性爱。有一天，她加班到十点多，往回走时遭到一个变态男人的尾随，无论走得多快，对方都紧随不舍。情急之下，柔弱的她向路边一辆车子求助，司机帮她用远光灯照那个变态，并且大声叱问，那个变态才落荒而逃。 尽管安全脱险，但凌一尧受到很大的惊吓，一整夜都没敢睡觉，她打电话与我吵架，问我到底回不回去。我给出的答案与以往一样，做完这个工程至少能带十七八万回去，只要干完就立即回去。但她不依不饶，两人开始争吵起来。 最后她说了一句狠话：“我今天要是被人强奸了，你带一百万回来又能怎么样？你口口声声说赚钱是为了娶我，我看你是为了你自己，这样的恋爱谈了还有什么用，有你没你都一样，不如分掉算了。” 那天我陷进淤泥潭里差点丢了小命，被人救援上来腰部以下几乎麻木，从小到大从未受过那样的罪，本来就满腹的委屈，被她这样一说，我也忍不住光火了：“分就分！嫌我没出息的是你，现在埋怨我不在身边的又是你，你以为我想背井离乡在这个鬼地方卖命？既然这样，你去找一个富二代好了，不愁没钱花还天天陪着你，只要拔一根毛就能把你娶走！” 她听我这样一吼，顿时被呛住了，电话那头沉默许久以后她才低声地说：“吕钦扬，你以前不是说过么？我是你辛辛苦苦追来的，几千双眼睛见证的。。。” 她说到这里就说不下去了，带着哭腔挂了电话。 而我一下子醒悟过来———高中毕业的那个暑假，我曾经说过，“你是我辛辛苦苦追来的，几千双眼睛见证的，以后只有你甩我，没有我甩你。即使你哪天说了分手，我也不会答应。” 原来她一直都记在心里。<br>当我年底离开海边，那场异地恋已经持续长达九个多月。这九个月里，我们一个在风急浪高的海边，一个在节奏匆忙的城市，过着完全迥异的生活。我提着行李包从车站里走出来，城市的喧嚣让我觉得无所适从，就像一个流放雪山多年的野人。 一看见我，凌一尧的眼圈就红了，她扑上来一把抱住我的时候，周围的人都在好奇地看着，仿佛我们是偶像剧的男女主角。当我走过一面镜子，无意中往里瞥了一眼，这才明白到底怎么回事———我穿着一件我自以为还算干净的军大衣，面部被海风和紫外线弄得又黑又粗糙，头发不自然地翘着，仅仅在路上耽误两天就长出青色的胡渣，完全是一个年轻农民工的形象。而我身边的凌一尧，衣着细致，身材窈窕，化着几乎看不出来的裸妆，完全是一个漂亮得让人忍不住多看几眼的都市女孩。不知道怎么的，她挽我胳膊时，我不自觉地往旁边避让，总是不习惯这样的亲昵。她很快感受到我的疏远，也不再勉强，打车时我们坐在后排，每人坐一边，互相不说话。她带我去买衣服，然后一起去宾馆开房，我洗澡时她帮我搓背，两人赤裸相对时我才告诉她，刚才我突然涌起一阵自卑感。凌一尧努力地搓我身上的尘垢，摸到我后背那条不慎被钢钎剌出来的狰狞伤疤，她用手指轻轻触碰着，许久都没有说话。“早知道是这样，死也不会让你去那里。”她说。我却非常希望她看到我的成就，我洋洋得意地告诉她，我已经和那个公司的领导处得很好，年后可能要被派去乌鲁木齐负责一个项目，年薪十五万。然后我自顾自地描述一个美好的未来，要考一级建造师，要赚更多的钱，要积累更多的经验和人脉，以后还要自己拉工程队单干。但凌一尧对此并不感兴趣，而她是我唯一在乎的听众。那天我们做爱了，我不记得久别重逢时的具体细节，只记得她突然狠狠地咬住我的肩膀，像被夺食的猫一样死死地咬住。我疼得连头皮都麻了，却没有反抗，我知道她心里堵着许多情绪不知如何表达。那两排细细的齿痕至今未消，一直烙在我的左肩，有时我怀疑它是一个诅咒，如影随行，一直延续到我彻底忘记她的那天。<br>不知道为什么，以往二十五六年，我一向是文艺小青年，但在海边呆了大半年以后，我突然怎么也变不回来了。即便我穿着体面的衣裳，做了好的发型，但几天以后衣裳皱巴巴了，发型也乱糟糟了。我觉得自己像一张被烫皱的透明糖纸，再也熨不平了。最让我无法接受的是，回到正常的人类文明社会，我才发现自己的肤色与周围的同龄人明显区分开来。为了恢复原先的肤色，我买了各种牌子的美白护肤品，每天早晨中午和晚上都要用一遍，甚至在堂妹的指导下学习使用面膜。可是，海边滩涂的紫外线辐射比城市高出数倍，咸海风侵袭下的肌肤就像风腊肉一样，那些措施几乎不起一点作用。我之所以那么焦躁，是因为她的父母又在给她介绍对象，我年底必须去拜会一趟，让他们认可我这个女婿。当我把内心的忧虑告诉凌一尧，她毫不在乎地安慰道：“没事的呀，我就说你是为了养我才去闯的，他们不会为难你的。”她这样一说，我才稍微安心下来，但事实证明，我此生做的最失败的事情，就是将那么重要的拜会搞砸。<br>大年二十七夜，我拎着几瓶天之蓝登门拜访，虽然她父母很热情，但我总觉得那更多是一种客套。吃饭时她爸爸问到我的学历，职业，以及家庭，我敢肯定这些问题他已经在凌一尧面前问一遍，只是想要我亲口重新给一次答案。这种技巧性的拷问让我非常不自在，但还是毕恭毕敬地回答：我大专毕业，现在做工程，家离市区还有十几公里，父母都是种植花木的农民。她爸爸说做工程赚钱，现在农村人日子过得挺好，她妈妈一直没有表态，只是叫我喝酒吃菜。酒一喝多，我就觉得自己的口风有点把不严了，于是忍住少开口，而她妈妈这个时候提及我这有碍观瞻的肤色。我的心里堵得慌，满是委屈，又不敢反驳，生怕酒劲之下言多必失。凌一尧跑回房间，拿来我以前的照片，解释说我以前不是这个样子，她爸爸则打圆场说年轻人不怕吃苦很难得，又不是天生黝黑。那原本只是一次不太完美的拜会，但下楼的时候，遇到的一件事情让这次拜会变得非常糟糕。我离开时他们送我到楼下，刚好小区里有邻居远远地打招呼，她父母都一起过去握手闲聊，凌一尧和我在原地聊天。但她妈妈很快也把凌一尧招呼过去，向对方介绍这是自家闺女，研究生毕业，在哪里哪里工作。这个时候我才发现，邻居那边有一个年轻的小伙子，皮肤白皙，一身的书生气。凌一尧在父母的指引下叫伯伯，叫婶婶，接受夸奖时礼貌地笑，不时地回头望我一眼。我看着一辆电动车后视镜里的自己，皮肤黝黑，加上酒后的模样，完全不是我自己能接受的模样。我在那里傻傻地站着，不知道该怎么办才好，最后我还是带着一身酒气，沿着墙角自个儿晃了出去。<br>凌一尧打电话来的时候，我已经坐在出租车里往回走，她问我为什么不辞而别，我呵呵地冷笑。我不敢对她父母表达内心的不满，只能把气撒在她的身上，我故意用冷漠的态度让她内疚，让她知道我不是没有尊严。可我偏偏忘了，那个愿意一边抹眼泪一边默默被我肆意伤害的凌一尧，正是那个唯一在乎我情绪的人。别人都只在意我飞得有多高，飞得有多远，只有她在意我飞得累不累，也只有她希望我停下来歇一歇。可惜，我这样一个贱人，最擅长的就是伤害身边最亲近的人。</p><p>尽管豆瓣有许多人相信星座之说，但我还是坦言，我对此丝毫不信，无法理解为什么可以用出生月份来判断复杂的人与事。但与星座学说相比，我更讨厌别人拿生肖说事，因为网络上的星座学通常是不伤人的马后炮，而生肖说则经常成为棒打鸳鸯的帮凶。同样是出生于虎年与龙年，成人之美者会说这叫龙盘虎踞，而掘坟毁婚者则说这叫龙虎相斗，有人向凌一尧灌输第二种说法。凌一尧当然不会相信这样的无稽之谈，但她妈妈非常固执地将它视为我与凌一尧不合适的理论依据之一。那个时间，刚好我与凌一尧相处得颇为不融洽，彼此明明没有一点恶意，但不知道中了什么邪，说着说着就因为一点措辞之类的小事吵得不可开交。她总是责怪我脾气太犟，而我总是埋怨她当初没有提前公开我的存在，最后不欢而散，一次又一次地验证“龙虎相斗”的说法，尽管之前的八九年都相处得那么愉快。2012年大年初四，我去市区时打电话给她，她说在寺庙里上敬年香，要傍晚才能回去。可我真的很想她，打算当面向她道歉，化解目前我们两人之间的矛盾呢，于是守在她家楼下的凉亭里等候着。等了三个多小时，我终于看见她回来了，但坐的是别人的车，开车的就是上次那个书生气十足的男人.车子是本田歌诗图，即便我耗尽当时的积蓄也未必能够拥有.他们两个人一起下车，凌一尧似乎情绪很好，而那个男的也笑着，手里咣咣地掂着车钥匙。他们一起上楼，凌一尧家所在的那栋楼。我本来打算将她喊住，但直到他们的脚步从楼道里消失，我都没有开得了口。<br>那种失魂落魄的感觉，简直每分每秒都试图置人于死地，每一次心跳都像锤子在胸口猛敲，我难过得恨不得直接往马路躺下来，谁把我撞死谁就是我大爷。我与凌一尧恋爱的初期，我们都小心翼翼地经营着，有时也会因为一点小事儿生闷气，无端吃醋，生怕人生第一场恋爱夭折。但时间一久，慢慢磨合着，彼此之间竟然如同家人般相互依偎，从不敢想过旧人换新欢，从未想过分离的一天。 </p><p>但这一天终于还是来了。<br>尽管凌一尧说那是长辈们的安排，她个人从未认同，一口咬定我是在无理取闹，但我问她那天为什么和别人一起去敬年香，为什么不直接去拜堂算了，她一下子愣住了，然后说：“你不相信我？” 我想说我当然相信她，但我只是无法忍受她与别人像情侣一样在人前出入，更不能忍受当整个世界都对我发动围剿暗算，而我认为绝不相负的那个人却站在战场的另一边。我的所有姿态，尊严和自信，都一下子垮了，就像《悟空传》里那只猴子一样，被刀劈斧砍雷劈火烧之后只剩一副躯壳屹立不死，但紫霞仙子的一句话，便让那双眼睛再也失去神色。 元宵节之前，她父亲忽然打电话给我，约我单独见一次面。</p><p>她的父亲约我在一家茶座见面，我并不知道他要聊什么，但还是努力做了准备，争取让他明白我对凌一尧的感情。<br>但我坐到他面前，才发现我根本没有为自己辩护和自荐的机会，她父亲几句话就将我堵得死死的。他说:“这段时间我虽然没有过问你们的事情，但我也看得出来，你和尧尧处得不好，她经常躲在房间里哭，不吃饭，两个人连相处都不好，还怎么一起生活？”他又说:“我选这个位置，就是想让你看看这个路口，今天还算天气不错，但雨雪天呢？严寒酷暑天呢？别的女孩坐在车子里打着空调，我们家尧尧坐在你摩托车上淋雨顶风晒太阳吃尾气？我们不是势利也不是物质，只是希望她过得好。”我终于抢话说:“我不会让她受穷，我会去赚钱，我已经有二十多万了，以后我也可以让她过上好日子！”她爸爸呵呵笑了一声，说:“以后？你没有权力要求别人等你一个空头支票啊。”<br>而后，她爸爸还说了其他一些东西，譬如我和她站在一起就没有夫妻相，她母亲也不希望凌一尧嫁给一个包工头。<br>但我已经无力听下去了，脑子里只是想着大二那年我们一起去周庄玩，吃饭时旁边一个话唠老太和我们搭话，啧啧地赞叹我们是金童玉女，以后生出来的小宝宝一定也很漂亮。当时凌一尧红着脸一直笑，而我闲得无聊与老太太扯，老太最后一拍大腿去择菜去了。当时我心口压抑得难受，担心自己一个黝黑的爷们儿当众哭出来，站起来不服气地对他拱了拱手，转身去前台结账走人。我当时心口堵得慌，胸口压着一块巨石，像一条狼狈的狗一样微微张着嘴巴，呼吸困难且短促。</p><p>那段时间，凌一尧的日子也不好过。她明确拒绝他人的安排与介绍，每天不洗漱打扮，更不出门，用这样的方式向我证明自己的立场。为此，她与母亲发生激烈的争吵，闹得左邻右舍都议论纷纷，她母亲患有支气管炎，春节还没结束就住院了。但我又能怎么办？虽然她父亲还没说完，我就起身离开了，但我明白他此行的目的绝不是对我羞辱或是嘲讽，而是要我与凌一尧停止交往。我过得黑白颠倒，不知道自己为谁而活，活着到底有什么意义，脾气变得极其暴躁。早在2008年，我妈妈就已经见过凌一尧，她知道我遭遇怎样的事情，几次自责自己没本事，没有为我积累财富。我没有安慰她，也没有责怪她，只是一个人独自发呆。我把所有罪责都归结到自己是一个穷小子的原因上，也是从那段日子开始，我对金钱产生无比执着的痛恨，以及无比狂热的向往。刚好朋友打电话过来，约我一起去乌鲁木齐参与一个太阳能发电站的工程，但需要提前垫资。我几乎没有犹豫，一口答应下来，决定把我和我父母所有的积蓄一起带上，孤注一掷。事到如今，我已经没有什么好畏缩的，我连凌一尧都输了，还有什么输不起的？大不了哪天形影相吊，身无分文，找一个安静的地方了结这条可笑可悲可怜可耻的贱命。临行之前，凌一尧打电话过来，她说：“吕钦扬，我们分手吧。”只是简单一句话，不由我分说，她便直接挂了电话。不知道为什么，我心里竟然一点痛楚的感觉都没有，麻木得就像一块死肉，直到许久之后手机再次震动，我才醒悟过来。凌一尧在短信说：“刚才免提说给我妈听的，你不要当真。你今天去订票，我们一起回南京。”我一下子精神起来，回复说：“要什么时候的票？”“明天中午，好吗？”她像在哀求我。我当即开摩托车赶去车站，一路狂飙七八十码，订了第二天中午11点20分去南京的长途车票。当时我的内心掺杂着各种情绪，疑虑，自责，兴奋，欣慰，以及被全世界围剿时与她一同突围的悲壮。</p><p>第二天上午十点我就在车站外面等候着，手里捏着两张车票，既期待又忐忑，就像守在高墙外即将与主公家千金私奔的狗奴才。</p><p>凌一尧一开始还低声和我打了电话，说等会儿就出来，但两个短信之后，便再也没有动静。我有些焦急，但又怕在不恰当的时刻打不恰当的电话，于是耐心地继续等。11点20分过去了，车子发动了，她还是没有出现，我捏着两张过期车票傻傻地站在那个空空的检票口。大约十一点半，她终于发来短信，说:“你直接来南京，我已经在路上了。”我不知道发生什么事情，猜想今天的她一定处境混乱，于是顾不上多问，赶紧重新买了最近一班的票。<br>我颠簸一个下午，到达凌一尧那里已经快到下午七点。我们避开那些不愉快的话题，就像以前一样一起拥抱，亲吻，然后去外面吃饭。那是我第一次请她吃西餐，也是我第一次吃西餐。当厨师把牛排端上来，说他要揭盖子了，而我木然地看着他，不知道他揭盖子与我有什么关系。凌一尧解围说:“先帮我揭吧。”她把红色的餐巾挡在面前，厨师揭开盖子，油星点四溅，被餐巾挡住。我当时才想起来，这步骤我以前是知道的，只不过在外面呆久了，早已忘记。那厨师望了我一眼，又看了凌一尧一眼，虽然面无表情，一句话都没讲，但不知道怎么了，我就是莫名其妙地多想了。晚上我住在她那里，那个我们曾经一同经营的小家。与以前一样，我们一起打扫整个寒假都没人住的房间，一起铺床套被子，然后轮流洗澡，最后在床上拥吻做爱。那天我有些蛮横地占有她的身体，她似乎感受到我的情绪，一直咬着嘴唇默默承受着，但我准备退出去戴套时她却搂住我的脖子，说:“就在里面！”我问:“安全期吗？”她低声地说:“不是。”我看着她的眼睛，她目光坚定，她的手指紧紧地抓着我的肩膀，指甲嵌入肌肤，仿佛已经决定破釜沉舟，再也不回头。</p><p>那天晚上十一点多，我们都没有睡着，在被窝里牵着手，讨论以后的安排。我说我想去乌鲁木齐一趟，大约五个月的工期，只要赚到这笔钱，我就可以大大方方站在她的父母面前，用事实证明我可以让凌一尧过得好。凌一尧听说我将全家所有积蓄都搬出来拼，建议我不要去冒险，希望我在南京找一份工作。我问道：“如果我不去赌一把，守着一份少得可怜的工资，你父母永远不会瞧得起我。” 她说：“万一输了怎么办？” 我一下子被问住了，因为我当时对金钱财富充满狂热，就像一只饿极的猴子，敢于去抓万丈悬崖边的一只野果。我没有回答她，只是把她拥在怀里，把脸埋在她柔顺的长发里呼吸，一阵恐惧涌入心底。 我赌输了怎么办？ 兴许我会一死了之，把这具臭皮囊丢在新疆的戈壁滩上喂野狗吧。 正是在这个时候，她母亲打电话过来，凌一尧打开台灯，忐忑不安地接听，那头的声音也被我听得分明。她母亲询问她有没有安顿好，晚饭在哪里吃的，什么时候上班，最后才兴冲冲地说：“罗XX这孩子真不错，今天特意把你送到南京，回来时还给我带了南京的盐水鸭，真是很勤快。” 凌一尧很尴尬地看我一眼，敷衍道：“哦。” 然后她妈妈又说：“你和那个吕钦扬分了就分了，不要再有来往，纠缠不清的惹闲话。这个罗XX条件不错，又是知根知底的，你们俩再处处，平时多打打电话，或者上网聊聊，总会处出感情的。” 凌一尧只是嗯嗯地应着，不敢抬头看我了。电话挂断之后，凌一尧翻身过来抱住我，在我胸口蹭来蹭去，叫我不要介意，她只是敷衍一下而已。我的心情就是非常沮丧，甚至觉得躺在这张床上是一件很不道德的事情，我说：“你现在怎么有那么多事瞒着我？” 凌一尧说：“你以为我愿意藏那么多事？我妈问我有没车票，我说没有，她就叫罗XX送我了，我不告诉你是怕你多想，不肯来南京找我。” 可我那可悲的自尊心又开始作祟，脑子里老是想着她和那个人坐在那辆歌诗图里，而我像一个傻逼似的坐在长途客车上。我没有责怪她的意思，我只是恨自己为什么总是处于下风，为什么那些人非要这样巧取豪夺。 凌一尧又是安慰，又是发誓，甚至不停地挑逗我。以往她惹我生气了，只要这样一挑逗，挠我的痒痒，我便翻身将她扑倒，一场小矛盾便化为乌有。可惜，这次不奏效。她思索片刻，翻身趴到我的胸口，说：“吕钦扬，如果下个月有个人不来找我，我希望你能尽快赶回来，好吗？” 我一下子风声鹤唳地紧张起来，问道：“谁？罗XX？”她平静地说：“我大姨妈。”我一时没反应过来，她又补充道：“或者我找你去。” 我这时候才反应过来，一把将她拥入怀中，恨不得把她勒得窒息。凌一尧呀凌一尧，我喜欢你喜欢得恨不得为你去死，我想把我赚来的每一分钱都交给你花，我想让你这辈子都不受半点委屈。我不想远走他乡，我不想颠沛流离，我不想每天早晨一睁开眼睛就很失落，不知道你在哪里，心情如何。 我想你啊 爱疯飞饿啊将发往放PJGFKCFOIAF 哦额坟挖金风科技啊绝非挖掘 啊我佛架飞机哦额外JPAWFJO AWIJGFAWJI AFGE A FEO KPFWO XIANG NI A A OA AF FAW FA F OF 哈哈复合肥哈额发发火佛QFA Q飞饿肌肤iaf哈哈哈 爱好哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈哈哈啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊(这里一段乱码 就是原文 估计LZ写到这里戳到痛处咯）。</p><p>那天凌一尧送我去车站，但她连候车大厅都没有进得去，两个人在安检口就仓促地分开了。我本来想再回头与她告别，但门口拥堵着太多旅客和工作人员，我们只能隔着长长的通道望着，最后打着手势，两人在玻璃幕墙内外杵着。我们互相听不见对方的声音，只能面对面地打电话，就像囚犯与探监者一般。她说：“我昨天把重要的东西都收拾在包里了，打算今天一直送你到站台，兴许到时候一咬牙就直接跟你一起上车，一起去乌鲁木齐。”听着她这有些孩子气的话，我不禁苦笑一声，问道：“你这是想私奔么？” 她却将脸凑近玻璃，认真地说：“我没有开玩笑，我真想过了，我也做得出来。”我伸出手指在玻璃上刮了一下，就像以往刮她鼻尖一样，检票口通知检票时，我在玻璃上哈气，写了两个反体字：“等我。”我不喜欢南京车站，我讨厌一切为了管理方便而设定的有悖人情的垃圾规定。从南京到乌鲁木齐，一共41小时，我睡了又醒，醒了又睡，做着各种各样的梦。其中一个梦最为蹊跷，当时一个列车员推着小车来售卖零食饮料，我刚好迷迷糊糊地睡着，做了一个非常奇怪的梦，梦见自己又回到高三，我和凌一尧迎面走来，她的嘴角洋溢着微微的笑容，我走过去大声地说：“凌一尧，我们以后会在一起，十年，我们以后还要结婚！” 然后凌一尧骂我是流氓，周围的同学都笑，连大乔和子石都笑，我非常生气地告诉他们俩这是真的。不一会儿，姚千岁大老远地跑过来，手里拎着一个棍子，我就没命地跑。按理来说，梦里的人不会跑得快，可我跑得非常快，甚至能感受到头发被风扯得嘶嘶作响。我就那样一直跑着，感觉这辈子都要用来奔跑，我很快乐，我要大声地笑。旁边人的声音陡然提高，我一下子从梦里惊醒，发现那列车员竟然仍然推着车子往这里走，前进距离不超过五米。当时我突然想起一个悲观的故事：黄粱美梦。 我真希望自己这辈子一直活在那个梦里，被姚千岁追赶着，拼命地逃命着，全校学生都在笑着，教学楼阳台和路边都黑压压地站着一大片，就在围观运动会上的三千米长跑。那时候的我还是一个勇敢的少年，而凌一尧也是一个羞涩文静的少女，我们所有的爱情都藏在那一次次擦肩而过，沉默不语的微笑里。<br>新疆的戈壁滩，开春之前的积雪淹没小腿，我戴着银行劫匪般的头罩，裹着又长又厚的军大衣，扛着沉重的仪器，在荒野里深一脚浅一脚地跋涉。海边是湿冷，这里则是干冷，但温度低得出乎我的想象，我的嘴巴不停地开裂。夜里盖着被子时脚上的冻疮痒得难受，只能伸在外面冻一会儿，冻醒了再缩回被窝里暖一会儿，痒醒了才伸出去冻。凌一尧想给我寄冻疮膏，但快递根本不可能送到，我这里太偏僻了，连蔬菜和肉都要从很远的地方拖过来。一拖就拖一卡车，一吃就是大半月。一起在这里混生计的也有与我差不多年龄的，农民工耐得住吃苦，但那些细皮嫩肉的年轻人都熬不住，没呆几天便跑得光光的。幸好我在海边干过大半年，那边的条件比这里好不到哪里，早就习惯了，何况我已经没有退路。过了没多久，凌一尧打电话告诉我，例假来了，孩子没来。她显然有些沮丧，而我说不清自己是什么心情，也不知道自己应该怀有怎样的心情。她家里还是极力试图促成她与罗XX在一起，我们之间偶尔还会因一点小矛盾而争吵，我的脑袋像被门板夹过似的，明明知道她与我一起抗争着，可还是忍不住一次又一次通过这种拙劣的方式来向自己证明她没有离我而去。由于工地的GPS仪器出了故障，我们不得不利用原始方式定位高度。我背着二十公斤的全站仪，拿着对讲机，跑出很远去寻找被大雪淹没的原始基准点。不料，我走着走着就迷失方向，我以为可以摸回营地，不料最后我连自己的脚印都找不到了，而对讲机那头的那帮人根本无法判断我的方位。这是我以往在海边从未遇到的状况，有种被人类世界抛弃的恐慌，我不敢乱走，叫那些工人赶紧回营地找人救援。但直到晚上九点，夜色已然降临，四周只剩白雪映出的冷光，还是一点进展都没有，对讲机里满是男人们乱哄哄的争吵。我以为自己的小命会丢在这里，只能背朝肆虐的寒风，用大衣裹住身体，拼命维系最后那点体温。我掏出手机给凌一尧打电话，但要么就是信号全无，要么就是无法接通，连他妈的他妈的他妈的他妈的短信都总是他妈的他妈的他妈的他妈的他妈的他妈的发送失败。我平生第一次发现自己是一个胆小鬼，这样怕死，我怕我死了以后父母没人照顾，怕自己无法被及时发现，怕凌一尧见到的是一具面目全非的残骸，更怕自己像狗一样无人问津地曝尸荒野，葬礼上连一个为我哭泣的人都没有。凌一尧啊凌一尧，如果我真的死在这里，请呼唤我的名字，把我的灵魂带回故乡吧。<br>我找了一个地势稍高的土坡，将全站仪加在坡顶，以便尽早被人发现，然后躲在北风面的凹处，能活多久就活多久。我不知道自己能不能熬过去，做好最坏的打算，用冻得几乎失去知觉的手横握着笔杆，借着雪地映出的微光，在施工日志的中页写遗书。我在这里投了多少钱，外面还有谁谁谁欠我钱，我又欠谁谁谁的钱，我的户口还在学校里没拿回来，如此而已。我本来想说对不起父母，早走一步，劝凌一尧不要悲伤，下辈子有缘再见，但我歪歪扭扭地写完那些账目，再也没精力写字了。我蜷缩在那个角落里，脑子里开始胡思乱想，想着我要是即将失去意识，应该用什么样的姿势才显得体面安详一些，不至于狼狈潦倒。有时我觉得这身体已经完全不属于我自己，四肢像木头一样无知无觉，心脏是性命寄生的最后一块阵地。也是在这个时候，我依稀听见上风口传来发动机的声音，还有人高声呼喊，以及雪地里沙沙的脚步声，随后有人从身后的土丘上冲下来，蹲在我旁边一边喊我名字一边拍我的脸。我感觉自己像被人摁在水里，所有的声音都含糊不清，灯光尤为刺眼，看不清他们到底谁是谁，也不知道自己到底算是获救了，还是正在垂死。他们把我抬起来往上一提，我整个人就像飘进太空的一块废料，所有的意识都跟着失重地飘着。他们把我抬进开着空调的车子里，盖上厚被子，让人揉捏我的四肢，不停地呼喊我，叫我保持清醒：“吕工，吕工，吕工……”我恍恍惚惚地就听见一个熟悉的声音：“吕钦扬，吕钦扬……”我一下子坐了起来，拼命地推开那些工人，瞪大眼睛努力地四处观望，发现根本没有凌一尧的身影，又颓然地倒了下去。后来，那些工人和我喝酒时经常拿这事开玩笑，说他们当时被吓了一跳，以为我是回光返照，以为我是听到勾魂小鬼的点名。我一边喝酒一边嘲笑他们的迷信愚昧，哈哈哈哈哈哈哈哈。呵呵。医院离这里太远，我被带回营地以后烤了一会儿的火也就缓过气来，他们便让我躺在床上休息，专门让烧饭的老头子来伺候我。我一觉睡到第二天下午才醒，掀开窗帘看见一轮咸鸭蛋黄般黯淡的红日，凌厉的冷风吹得活动板房的单层玻璃呜呜作响。我喝了热汤，让老头子给我手机充电，然后给凌一尧打电话。 电话一通，她便问我昨天在干嘛的，为什么只打了一声就挂了。 我说我昨天差点丢了命，连遗书都写好了。凌一尧似乎不太相信我的话，她说：“你到底是去工作还是去打仗的，为什么会有生命危险，如果真的那么危险那就回来啊！”面对这样的责问，我不知道如何应答才好，我已经把自己所有的积蓄都投入这场豪赌，怎么可能因一场意外而举手投降。我在这里扛住雨雪风霜，就是为了让她此生都活得安逸，我只希望她此生都不必感受生活的艰辛，哪怕一辈子都无法理解我此时的狂热。随后她告诉我，她父母托人在我们那个城市给她找了一份新工作，待遇相当不错，催她回去工作。她知道，这样的安排无非是让她离罗XX更近一些，更好地掌握两人之间的动向，于是她努力地抗争着，一天一天地拖着。她说：“今天我妈妈说了一句话，我哭了好一会儿。”</p><p>我问：“她骂你了？”她说：“不是。她说‘树欲静而风不止，子欲养而亲不待’，叫我不要等她哪天不在了，才后悔现在没有尽孝。”我愣了好一会儿，突然意识到“疏不间亲”，无论我多爱她，我的地步都很难逾越她的父母。这就是我拼死拼活地卖命，恨不得拿把刀坐在市场中央割肉兜售的结局吗？我强忍左胸口的酸痛，问道：“你想回去了？”凌一尧沉默片刻，而后低声说：“我会尽力扛。”尽力扛，只是尽力扛。呵呵。她能够与我一直走到现在，已经是仁至义尽，我没有权力要求她必须永远与我坚持到底，爱情不是靠绑架得来的。我把烧饭的老头子支了出去，然后向她保证我很快就能出头了，我们可以过得非常幸福，可以让所有人都惭愧他们现在的阻挠.我感觉自己当时的口才出奇地好，比以往任何时候都好，用亢奋的状态向她描述一个美好的未来，完全不像一个从鬼门关回来的人。但凌一尧只是安静地听着，缄默得让我一度怀疑她是否还在电话那头，我不得不傻逼兮兮地“喂”“喂”“喂”。她只是微微的叹息一声，说：“可是，我已经很累了呀。”那一瞬间，我感觉自己的天空猛然塌陷一块，自以为永远不会动摇的精神支柱摇摇欲坠，电话另一头那个让我魂牵梦萦的女孩突然变得无比陌生。我可以相信日出西方，相信江水倒流，相信六月飞雪，就是不能相信凌一尧也会决心动摇，也会有打算离我而去的一天。我忽然发现自己在雪地里对死亡的胆怯显得那么可笑，吕钦扬啊吕钦扬，你拼命地熬着忍着撑着盼着等着，终于保住这条下贱卑微的狗命，迎接你的现实就是这个模样么？生亦何欢，死亦何苦，早知道这样，为什么不干脆听从命运的安排，在老天为你选择的那块埋骨地了结此生算了？你怎么不死掉算了？你干嘛不死掉算了！！！！你死掉算了好不好！！！！啊哈哈哈哈哈哈！！！！！！！也是在那一天，我和凌一尧之间的裂纹越来越明显，分道扬镳的日子不期将至。 在戈壁滩的那段日子，我忙得不可开交，要么在施工现场东奔西跑着，要么趴在电灯泡底下看图纸，要么与工人们混在一起喝酒。偶尔闲暇下来，我傻傻地坐在房间里看着床头那个日历，一遍又一遍地推算工程完工验收的日期。另一个工程队的项目部有一台电视机，外接信号锅的，偶尔我会去那里看一会儿电视，特别喜欢看江苏卫视。不是看非诚勿扰，也不是看电视剧，只是想看一下镜头里的街景。有一天，一个专题节目介绍我家乡的特产，我硬是死死地抓住遥控器，将那帮想看抗日连续剧的家伙晾了十几分钟。最让我万分痛苦的是，凌一尧似乎对我越来越冷淡，以往她接电话时都是兴高采烈的，现在却是问：“什么事？”“你至于这样故意伤我么？”我终于不满地问.“我有吗？”“你态度这样冷淡，是不是不愿意接我电话？”她说：“我们总不可能一辈子都像初恋时那样火热吧，总有一天，你接到我的电话时会不耐烦，握我的手时也毫无感觉。”我呵呵地笑：“可能你说得对吧，但那是第几个十年呢？”凌一尧沉默许久才说：“我妈闹我闹得很凶，一闹就犯气管炎，她都要拿断绝母女关系说事儿了，我能怎么办？我以前一直觉得自己过得很好，家庭和睦，爱情美满，学业也很顺利。可是现在呢，家庭，爱情和工作都乱糟糟的，每天夜里都失眠，早上一睁眼又想着怎样把今天熬过去。我真的很累，太累了。” 我从未见过凌一尧这样暴露自己的脆弱，可我不知道如何安慰，因为我自己的心空得像一个深不见底，连回音都没有的峡谷。我很想将她牢牢抓住，可我又觉得自己像在与她的家人打一场拉锯战，每个人都打着爱她的旗号不肯撒手，却从未有人在乎她夹在其中被撕扯得多痛苦。 我说：“既然你这么为难，那就不要勉强了，回去吧。” 凌一尧愣了一下，问道：“这是你说的？” 我深呼吸一口气，努力将泪水咽了回去，说：“我说的。” 电话那头一片沉寂，而后挂断了。此后的很长时间，我们谁都倔强地不肯联系对方，直到有一天南京的房东打电话给我，问我另一把钥匙在哪里，我才知道她已经退掉房子，回家去了。我离开戈壁滩的时候积雪正在消融，我把手里的数据都交给项目部，连同那本撕掉遗书的施工日志，而我带来的垫付资金暂时只能抽走不到一半。一个关系不错的朋友开着破旧的越野车把我送了出去，一路打滑，一路颠簸，一直把我送到火车站。</p><p>从南京到乌鲁木齐，背离朝阳，冲向黄昏，而从乌鲁木齐与之相反。那四十多小时里，我一直稀里糊涂地想着心事，日落时怀疑自己离太阳越来越远是不是一个不详之兆，日出东方时又在期待这是预示我可以拥有走出困境的幸运。我很无助，感觉自己的力量微弱得几乎渺小，只能寄希望于这些毫不相干的启示。我辗转回到那座城市，没有回家，在车站旁边的宾馆住了下来。我洗澡剃须换了干净衣裳，试图逼着自己睡一会儿，好让自己与凌一尧见面时精神状态好一点。可是，我又困又累，却怎么也睡不着，一闭上眼睛就心慌气短，仿佛有人在我耳边敲着锣鼓大声聒噪:“她要离开你了！她要离开你了！”凌一尧知道我回来了，我们约在安定广场见面，面对面站着，她看着我的眼睛，说:“怎么那么多血丝？多久没睡觉了？”我不知道怎么回答，因为我最近一次超过四小时的睡觉就是从戈壁雪地里捡回小命后近乎昏厥的长睡。旁边有很多小孩子穿着旱冰鞋跑来跑去，我们生怕被撞到，于是坐到旁边的长椅上。我告诉她，我每天都很想她，已经把新疆的工程丢下了，不想再离开她了。她皱起眉头，问:“你不是在那里垫资了吗？丢下那里，你以后怎么办？”<br>我有些不高兴:“你希望我回去？”她想了想，低叹道:“我怕你人财两空，不值得。”我顿时不知道怎么说了，不停地揣测她这句话到底什么意思，可我的脑子处于混沌状态，不知道该往哪个方向思考。她随后又说:“前段时间，我和我妈吵了，把她气得犯病，我外婆都打电话过责备我，问我是不是打算闹得家人不相认，以后逢年过节都不想回家团聚，给祖宗磕头。”她抬眼看我的时候，眼泪一下子流出来，委屈地说:“我外公去年去世，今年清明节应该扫墓的，可我躲在南京就是没回来，你难道还不理解我？我小时候是外公外婆带大的，他们都说我忘恩负义，白眼狼。”我一边帮她擦眼泪，一边抚慰道:“我这个工程一结束就有钱了，我去买车，我们去给你外公磕头，挨家挨户拜访你家亲戚，我也可以很孝敬你的长辈。”她推开我的手，自己擦掉眼泪，说:“你忘了吗？我和你已经是地下恋爱了，我和罗XX从年初开始就是名义上的交往，我现在已经回不去了啊！我回不去了！”我们回不去了？我迷茫地看着凌一尧那张脸，那张曾经给我温柔也给我力量的面容现在满是悲伤与决绝，这也是十年来我第一次感受到近在咫尺却远在天涯的无奈。我许久才缓过神来，问道:“你要我怎么办？”凌一尧低头沉默一会儿，说:“我很累了，扛不住了，给我自由吧。”我感觉自己像被人狠狠地砸了后脑，眼前一片黑，但还是努力站起来点头说:“好，听你的。”“你会恨我的吧？”她也跟着站起来。我咬住嘴唇尽量让自己不要说话，那么多小孩子在旁边，不要当众丢人，只是张开胳膊把她搂入怀里，狠狠地抱了一下，最后一次嗅了嗅她长发的香味，然后扭头离开那个广场。凌一尧啊凌一尧，我曾经发誓要为之遮蔽风雪，此生疼爱和保护的女孩啊，你才是世界上最强大的人，你拥有轻描淡写一句话就可以将我抽空灵魂放逐天际的神力啊！从今往后，我该往哪里走，该为谁而活，我该怎样面对那么漫长那么漆黑那么毫无意义的人生啊？</p><p>　随后的一个礼拜，我过着这辈子最潦倒的日子。我暂时不想回新疆，也不想去找那些熟知凌一尧的好友，但我已经把家里所有的积蓄都砸在项目上了，所以不敢回家见父母。我一直在宾馆里睡着，拉着窗帘，没日没夜地睡，实在饿得受不了，就干啃房间里本来就有的桶装方便面。<br>　　<br>　　我以为自己呆在这个城市可以做些什么，但事实上我根本无从改变眼前的现实，凌一尧没有再给我发一条短信，打一个电话，我也没有再去联系她。于是，我决定出去走走。<br>　　<br>　　这几年来，我一直在走，从江苏走到新疆，从荒凉的沿海滩涂走到更荒凉的戈壁滩。但我从未迷失方向，即便走在只知前后左右不知道东南西北的风雪里，我心里也依然竖着一座高高的灯塔，依然有人期待我的归去。可是现在，灯塔的光亮彻底消失，我再也找不到回去的路了。</p><p>　　我独自回到南京，去找以前那间房子，房东尚未将它租出去，我恳求他让我呆一晚。凌一尧离开时将房子打扫得干干净净，一些被遗弃的生活用品被整整齐齐地摆在角落里，蓝色的毛巾牙刷杯子都是我的，红色的都是她的；床头靠背还贴着当初我从新袜子包装上面撕下来的标签，她总是因此而数落我“幼稚”；台灯罩上有她用唇彩画的卡通脸，咧着嘴，没心没肺地笑着。<br>　　<br>　　没有被褥，我只能裹着衣服躺在硬床板上，开着电视睡觉。我总是迷迷糊糊地听见她的声音，每次都猛然惊醒，却发现只是电视的声音。我真希望我所经历的只是一个噩梦，真希望我醒来时看见她正在阳台晾晒衣裳，黄昏余晖映出她可爱的身体轮廓，或者她忽然推门进来，手里提着的塑料袋还贴着超市的标签。可是她已经走了，不会再出现了。</p><p>第二天上午，我独自站在镜子前洗漱，将红色和蓝色的牙刷放在一个杯子里，然后带上房门离开。那天我重新踏上前往乌鲁木齐的火车，从此孑然一身，无牵无挂，这个躯体是行尸走肉，这颗心不再属于凌一尧，而这条命我敬老天爷。</p><p>　　回到戈壁滩，别人问我事情处理得怎样，我嘿嘿地笑着说一切妥当，一副无比幸福的模样。我不是可怜虫，我不需要博取所谓的怜悯，我已经丢了灵魂，但尖牙与利齿还在，我可以参与残酷的争夺。<br>　　<br>　　我变成工地上脾气最古怪的人，工作时精力充沛，休息时嘻嘻哈哈，但监理都对我敬而远之，因为我一会儿像哈巴狗一样对他们点头哈腰叫爷爷，一会儿像疯狗一样对他们凶相毕露，甚至趁着酒劲追打吹毛求疵的小监理。合伙人经常数落我，却又纵容着我，因为他们不方便与别人翻脸，他们需要我这样的疯狗。<br>　　<br>　　只是，一闲下来，我就开始发呆。同事开玩笑说，我是“墙角里的一根打狗棒”。<br>　　<br>　　我们经常会请业主或者质监站之类的人吃饭，我每次都咋咋呼呼，哗众取宠地说着各种庸俗的荤段子，然后拿出同归于尽的架势来喝酒，一杯接一杯地死磕。所有人都夸我海量，年轻有为，前途不可估限，但我知道，酒场和官场都是谎言的集散地。<br>　　<br>　　我蹲在一望无垠的戈壁滩上吐，然后趴在地上哭，旁边的同事都开心地笑，所有人都知道我酒劲上来就会哭，却没人知道我到底在哭什么。那几个月里，我与她完全没有联系，似乎这辈子都老死不相往来。我在遥远的新疆数着每一次日升月落，期待将她遗忘的那天，可是一旦每次喝得酩酊大醉，每次从噩梦中惊醒，我都会疯狂地想念那个熟悉的名字。<br>　　<br>可是酒醒之后，站至人前，我还得每天强颜欢笑，听别人讲我酒后的失态模样有多么傻逼多么傻逼多么傻逼，然后我和他们一起笑得直抹眼泪。<br>　　<br>　　那里的生活极其枯燥，业主项目部的司机小廖用U盘传给我一些歌曲，我把那些它们一股脑全装进手机里，从凤凰传奇到维塔斯，从摇滚到红歌，我毫不挑选地挨个儿听过去，在空旷的戈壁滩上一边开车一边高声嚎唱。<br>　　<br>　　唯独有一首歌让我不得不将车子停在路边，捂着胸口，趴在方向盘上缓气———五月天的《你不是真正的快乐》。</p><p>电力企业是一个不差钱的豪门，但不包括2012年在建的太阳能发电站，由于欧美对中国光伏产品的反倾销制裁，光伏电站顿时陷入资金泥潭。新疆戈壁滩的气候恶劣，通常四月份才能正常开工，十月底就完全不具备施工条件，我们提前一个月冒着冰雪和低温开工测量放线，终于在十月基本完工。<br>　　<br>　　此时的业主暴露资金极度短缺的问题，他们的注册资金是会计师操作出来的，而银行又盯着上头的政策，不敢轻易贷款。于是，我们的工程款没了着落，业主方拿资料审核说事，一天一天地拖着不肯验收。<br>　　<br>　　我带着工人将业主的车子堵在工地不放行，派出所的民警一趟又一趟过来协调，反反复复八趟之后，连派出所都不太愿意来了。最终我们去骗业主里那个稍微老实的负责人，说暂时只要签字验收就行了，今年不会催要拖欠的工程款，他们刚好不堪其扰，不得不把字签了。<br>　　<br>　　这个社会，老实人都是要吃亏的。签字的第二天，我们的人挤满整个业主项目部的办公室，拍着桌子催要工程款，把那个女文员吓得躲在角落里哭。我拿着一大把小锁，将他们办公室里的抽屉和资料柜都挂了锁，但挂到那个女文员那边的时候，我看见她的抽屉里摆着一只玻璃罐子，里面摆着五颜六色的许愿星，而她的桌角还有许多未完成的折纸。<br>　　<br>　　我忽然想起来，凌一尧也曾经为我折过这个东西。<br>　　<br>　　我像一个张牙舞爪的孩子被大人狠狠地扇了一耳光，陡然发现自己失态时的丑陋，我为什么会变成这样？曾经那个善良的温和的喜欢恶作剧从来不忍心伤害别人的吕钦扬哪里去了？这个一脸狰狞拍桌挂锁满口脏话的吕钦扬又是从哪里来的？<br>　　<br>　　我没有锁那个女文员的抽屉，默默地走出那间拥挤的办公室。<br>　　<br>　　十一月中旬，大雪封路之前，我提前离开戈壁滩，返回阔别半年的家乡。也是在到家的当天，我踌躇许久后终于鼓起勇气拨通那个熟悉的号码，她听到我的声音一下子愣住了，叫我稍等一会儿，然后跑回房间接听。<br>　　<br>　　我说：“没想到你这个南京号码还通着。”<br>　　<br>　　她说：“我每个月只交一点钱维持不停机，可惜一直没人联系这个号，这几天还在想着把这个号停掉算了。”<br>　　<br>　　我愣了一下：“等我的？”<br>　　<br>　　她没有说话，不肯定也不否定。<br>　　<br>　　我说不禁喜出望外，迫不及待地向她展示自己柳暗花明的现状：“我已经回来了，我也赚到钱了，不是穷小子了！你不是喜欢甲壳虫吗？我们去买一辆！还有开一家书店，我们可以去物色店面！我以后除了和你出去旅行，再也不出去逛荡了，我很想你，我每天都很想你……”<br>　　<br>我自言自语似的说了一大堆的话，想狗等待主人筷子上那块骨头一样渴望她点一下头，然后我开着摩托车狂飙过去拥抱她，我的人生从此完美无缺，我每天都要向苍天和大地感恩戴德。<br>　　<br>可惜，凌一尧低声打断道：“我已经订婚了。” </p><p>我一下子愣住了，再也蹦不出一个字，甚至忘记收起脸上因对未来的憧憬而不知不觉地流露出的笑容。订婚了。。。未婚妻。。。妻。。。我难过得忍不住蹲了下来，用拳头抵住胸口狠狠地摁，试图抑制内心如同比万千虫蚁啃噬的痛楚。</p><p>凌一尧啊凌一尧，你真会开玩笑啊，你怎么可能告诉我这样一句话？你还是扎着马尾辫的高中生啊，你不是要跟我一起气死姚千岁吗？你不是说“妻”这个称呼好别扭可是你又很期待成为我的这个字吗？你不是说一想到这个世界终将诞生一个或者两个拥有我们两人血脉的孩子就会觉得神奇又激动吗？</p><p>我不坚强，我不自信，我不要脸，我是一个贱人，我想和一个无赖的孩子一样躺下来蹬腿哭喊，把自己全身弄得满是尘土，你回答我：你！！！！！！为！！！！！什！！！！！么！！！！！！言！！！！！！而！！！！！无！！！！信！！！！！</p><p>这近两个月里，我们依然保持着联系，过得却不是太好。她经常脾气暴躁，无缘无故地对我发火，把我所有的缺点都翻出来说一遍。有些缺点甚至是许多年以前的，我也早就已经克服，不知道是不是在戈壁滩上透支太多精力，我竟然一点都不生气，任由她自说自话地骂着。她连挂电话都没有预兆，没有再见，没有晚安。</p><p>我们仅仅见过一面，在这座小城的电影院里。那场电影的观影厅空荡荡的没几个人，我们没敢坐在一起，她坐在我的左前方，没有回头，而我几乎一直盯着她的侧影。我记得高二时语文老师给她们班代课，叫我帮他去隔壁班架一下投影仪，我一进去就有人起哄，而她低头写作业不敢抬头看我一眼。这一晃，就是十年，那个腼腆的少女即将嫁作他人妇。</p><p>但我们一直没有停止抗争，这两个月里，只是这艘船上载了太多的人，她搬不动船上的巨锚，而我无法阻止港口缓缓升起的闸。那段时间我看很多电影，读很多书，也聆听许多人的建议。有人说，你的痛苦放在人群里简直微不足道，许多人的心里都深埋着那样一段不见天日的回忆，以后她会渐渐地与丈夫相处融洽，而你也会找到另一个女人，你可以不爱她，也可以对她很好，生一个孩子，你们的心思便全在抚养孩子身上了，谁还在乎爱情是什么？</p><p>我相信那个人所说的话，可是我不要那样的人生。我不想一回家就看到一张冷漠的脸，不想在风月场所眯着醉眼牵走一个不知姓名的女孩，只因她依稀有一点尧尧的影子，我更不想哪天躺在床上奄奄一息，身边围了一大群人，但我却感觉万分孤独，只有雪白的天花板上映出那张几乎遗忘的笑脸。</p><p>凌一尧说，这大半年里她再也没有与家人吵过，但也没有再和他们撒娇谈笑过，每天上班下班，吃完饭便礼貌地放下碗筷，安静地返回自己的房间。<br>她曾经问罗XX:“你觉得你喜欢我吗？” </p><p>罗XX说:“挺喜欢的吧。” </p><p>罗XX的人品不坏，也很斯文，他生于温室，生活自理能力还停留在少年时代，大小事宜都有自己的主见，最后还是要服从父母的安排。 </p><p>就在挑选婚纱的当天，这个帖子开播的前一天，罗XX在她家吃饭，她也跟着喝了一点酒，然后笑了。她母亲很高兴，说尧尧今天心情不错，终于见到笑脸了。但她母亲洗碗时，她站在厨房门口说:“妈，我告诉你一件事，我这一年没有一天过得开心，我一想到以后也要这样过，就害怕得想死。” </p><p>她母亲说:“你喝多了吧，月底都快领证了还说这种话？” </p><p>凌一尧回房间给我打电话，笑着告诉我这事，她那天的话特别特别的多，一句话反反复复地说，而我沉默地听。十几分钟以后，她似乎有些自责地叹气，说:“喝多了，平时不会告诉你这些屁事的。”</p><p>然后她又突然无奈地苦笑起来，说:“我妈的反射弧真够长的，现在才开始摔盘子，我出去看看。”</p><p>　　我说不清这段时间自己到底什么心态，随着月底的临近，我觉得自己的心像烧尽的木炭一样渐渐黯淡。最为迷茫的是，我有时无法确定自己到底希望她婚后过得幸不幸福，许多小说和电影都说过，爱一个人就祝她幸福，可我却无法笃定地祝她幸福？我一度怀疑自己对她的感情是否足够真挚，罪责感充斥内心。</p><p>　　1月23日那天，凌一尧和她母亲上街购物，恰巧发现一家饰品店的老板是她小学和初中的同学，冒XX。高考之后的暑假，我和冒XX第一次认识，她帮我和凌一尧瞒这段感情瞒了好几年，直到两年前才渐渐失去联系。凌一尧的母亲说：“我们家尧尧初五结婚，伴娘还没定人呢，你要不要一起来玩？”<br>　　<br>　　冒XX问凌一尧：“你和他到现在才结婚？”<br>　　<br>　　凌一尧说：“不是他。”<br>　　<br>　　冒XX用意外又惊诧的目光看着她，然后当场婉拒，说年初店里忙，走不开。凌一尧当晚打电话给我，呵呵地苦笑，说：“一共邀请了几个高中同学，一个个都说没空，蒋XX直接说不想来，她说以后你结婚时请她，她更不想去。”<br>　　<br>　　蒋XX也是凌一尧初中的同学，也是我高中时的同班同学，也就是开头提到的那个学霸妹子，我抄她的作业，骗她的零食，偷翻她的日记，我一直以为她讨厌我。<br>　　<br>　　凌一尧说：“我跟我妈说，我和你本来可以得到很多人的祝福，现在他们的祝福都快变成诅咒了，连一个捧场的好朋友都没有。我妈这次被我说哭了，但是没再骂我，上次她摔过盘子之后，心情就一直不太好。”<br>　　<br>　　子石放假从外地回来，我约他出来吃饭，刚好舒缓内心的抑郁，随口问万一抢婚的话他去不去。子石摇头说：“如果他们真的走到那一步了，你就没必要再折腾了，一个乌烟瘴气的婚礼足够让很多人一辈子抬不起头了。不过，不是还有一个星期才领证吗？你再去努力一下，实在改变不了，那就认命吧，这个世界上有太多不如意却还是维系下去的婚姻了。”<br>　　<br>　　枕边人不是心上人，心上人只是梦中人。我想到凌一尧从今往后便是别人家的贤妻良母，而我也不得不与另一个女人同床异梦地度过下半辈子，两个人此生都不敢将对方的名字念出来，不禁感到一阵胸闷气短。我可以每天逢场作戏地欢笑，当然也可以假装深情地说“我爱你”，这些都不过是作为一个演员的基本素养，但我无法忍受凌一尧躺在另一栋房子的另一张床上的另一个臂弯里，心里默念着我的名字。<br>　　<br>　　除非凌一尧亲口对我说，她已经放下了。</p><p> 我打电话约凌一尧出来，在这座城市一座古园林见面，和上次在电影院里一样，我们刻意保持着距离。一直走到一座高高的小土山，山坡上生长着一片竹林，坡顶有一座小凉亭，她回头看我一眼，我才紧走几步跟了上去。她说：“我讨厌这种偷偷摸摸的滋味，像在做什么不要脸的事情似的。再过几天，所有事情都已经定了，无论你怎么约我，我都不会再出来了。”</p><p>　　我说：“我也很憋屈，很窝火，我们本来应该光明正大地牵手逛街的，而不是现在这个样子。”<br>　　<br>　　“你憋屈？呵呵，”凌一尧笑了一声，“以前有一次我和罗XX上街买东西，他也牵过我的手，可我觉得更像做贼一样恐慌，害怕你不知道什么时候在什么地方就突然冒出来。”<br>　　<br>　　听她这样说，我鼓起勇气，恳求道：“既然这样，我们都不要放弃好吗？时间还有，感情还在，我们豁出去拼一下，把这件事情缓下来。我可以去找你爸妈谈，只要是反对我们的人，有一个算一个，我都可以去找他们谈。”<br>　　<br>但她一直不说话，我有些心慌了，问道：“那你现在还想不想和我一起？”</p><p>　　凌一尧这才抬头看着我的眼睛，说：“想。”<br>　　<br>　　“那你在犹豫什么？”<br>　　<br>　　“怕。”<br>　　<br>　　“怕什么？”<br>　　<br>　　凌一尧想了一下，说：“怕很多事情，最怕的就是你现在只是不甘心，没有以前那么喜欢我了，如果是这样，我宁愿现在就散了。”<br>　　<br>　　我没想到她心里竟有这样的疑虑，完全出乎我的意料，一时不知道怎么回答，片刻之后才为自己辩护道：“我们从高中就开始相处，现在已经十年了，你应该最懂我。我很少向你许诺或者发誓，但保证过的就一定会去兑现，我现在非常确定地告诉你，我对你的感情绝不是不甘心。”<br>　　<br>　　凌一尧点了点头，又问：“那我爸妈和罗XX家怎么办？以前我以为你不回来了，又被我妈闹得难受，觉得你不在了，跟谁过都是一样过，就把这事给应了。现在我说不想结婚了，我爸妈肯定不会同意，罗XX家也会来闹。”<br>　　<br>　　我说：“你不要担心，这事我来扛。”</p><p>　　凌一尧盯着我的眼睛，而后咬着嘴唇认真地点头，一开始见面时的焦躁不安消散得无影无踪，但我的内心却满是愧疚———我们都同样并非完美，性格有各自的弱点，过分的单纯与善良让她举步维艰，而我竟偏执地踏上自以为的英雄之路，留她独自在炎凉世态里苦撑。</p><p>我原本打算先去拜会凌一尧的家人，但思索再三，还是更改主意，打电话约罗XX出来谈一谈。约谈地点还是一家音乐茶座，他们二人一同出现的，落座时凌一尧习惯性地坐到我身边。<br>　　<br>　　我对凌一尧说：“我们两人谈点事情，你先坐到他车里玩一会儿。”<br>　　<br>　　罗XX掏出遥控钥匙递给凌一尧，但凌一尧接过去隔着落地窗摁了一下，又放回桌面上，拎着包出去了。我们一直目送她坐上车，才收回目光打量对方，一时间不知道怎么开口，最后我尴尬地笑道：“有点像给她开家长会，哈？”<br>　　<br>　　罗XX也讪笑一声，但气氛稍微缓和一点。<br>　　<br>　　我问道：“你和凌一尧相处这么久，觉得开心吗？”<br>　　<br>　　他说：“还可以吧。”<br>　　<br>　　“你确定你爱她？”<br>　　<br>　　罗XX犹豫片刻，抹着鼻尖说：“反正蛮喜欢的。”<br>　　<br>　　我却不客气地说：“你应该也看得出来，这大半年里凌一尧从未开心过，我和她一起走了十年，不得已的分手就像被迫离婚一样痛苦。她心里想着我，但不代表我和你之间谁比谁更优秀，而是我运气好一些，十年前就认识她了。现在我很诚恳地希望得到你的帮助，把领证结婚这事停了吧，你们俩勉强凑合在一起不会过得好。”<br>　　<br>　　罗XX有些不服气：“那你前面这几个月干嘛去了？”<br>　　<br>　　“我以前做得不对，所以现在来纠正错误。本来这事有很多解决途径，只要尧尧一口咬定不领证不结婚，我带她直接离开这个城市，难道你们还能捆绑着逼婚？之所以与你沟通商量，是希望咱们年轻人私底下把这事解决了，尽量把负面影响降到最小，不要伤害长辈，你看怎么样？”<br>　　<br>　　罗XX保持缄默，手指一直拨弄那把车钥匙。<br>　　<br>　　我给他添了茶水，说：“你们相处几个月，时间不算短了，但你对她了解多少呢？你每次向别人介绍她，第二句就是她的硕士学位；夏天你老是怂恿她穿得性感一些，可她不是你用来向哥们儿炫耀的宠物啊；还有，你总是不停地草泥马草泥马，并且认为这是时尚用语，不是脏话。这些事情都让她非常反感，可是她为什么不说出来呢？”<br>　　<br>　　罗XX不是笨蛋，他明白我的言外之意，我也适时地停止这种攻击性的责问，将话题岔开，与他谈及我与凌一尧在高中时的趣事。罗XX一开始有些抵触，但听着听着，也跟着笑了起来，在他笑容最灿烂的时候，我再次严肃地向他请求道：“兄弟啊，以你的条件，再找一个漂亮女朋友不是难事，但我只有一个凌一尧，错过了她，我这辈子都会过得不安生。所以，希望你能帮我一把，恳请你帮我一把。”<br>　　<br>　　罗XX渐渐收起笑脸，思索片刻后说：“如果我不帮忙呢？”<br>　　<br>我说：“我刚才已经讲过了，凌一尧我是肯定要带走的。你帮忙，这事会变得好看一点，你不帮忙，这事只是稍微难看一些而已。”<br>　　<br>　　罗XX坐在那里想了一会儿，最后叹息一声，说：“我明白了。这事我得想一想，明天再打电话给你，给你答复。”<br>　　<br>　　他起身离开，刚离开座位，凌一尧就从那辆车里下来，往茶座里走来。她和罗XX在门口遇到，两人互相打了一声招呼，然后一个出门登车而去，一个在我对面身边坐了下来。凌一尧问：“谈得怎么样？”<br>　　<br>　　我说：“我也不确定，不过既然已经把话说开了，那你以后就要做好和一条道走到黑的心理准备。”<br>　　<br>　　凌一尧点了点头，而后又眯眼微笑道：“这条道不会是黑的。”<br>　　<br>　　整整一天，我一直心神不宁地等着电话，甚至想过万一凌一尧被她父母软禁在家，我就喊一帮哥们儿去抢人，或者打电话报警说有人抢我的老婆。只要凌一尧点一下头，承认她想跟我走，我便再无任何顾忌，大不了从此远走高飞。<br>　　<br>　　大约凌晨两点，罗XX没有打电话过来，却接到凌一尧的电话，她说：“罗XX叫我转告你，他已经向他家人说过了，他和我性格不合，两个人相处得不愉快，想取消婚约。我爸妈的态度也不太激烈，我说我也不想和罗XX结婚了，他们就只是叹气，没多说什么。”<br>　　<br>　　“那我什么时候去你家拜会？”我问道。<br>　　<br>　　“你不要急嘛，再等两天，等大家都把这事认下了，你再过来找我爸妈谈。”凌一尧停顿片刻，说，“我都把东西收拾好了，要是他们还那么固执，我就直接跟你走。”<br>　　<br>　　我努力抑制内心的喜悦，问道：“你现在什么感觉？”<br>　　<br>　　凌一尧拖着长音的“嗯”，最后长吸一口气，释然地说：“感觉像又活过来了。”<br>　　<br>　　挂断电话之后，我张开四肢躺在床上，听着床头闹钟滴滴答答的声音，每一次声响都昭示我正在一秒一秒地远离自己的青春。可是，缱绻于心的爱情如同一个野蛮的天神，呼啸着从天而降，抓着我的衣领飞向九天云霄之外。我闭着眼睛感受这种踏步云端的喜悦，仿佛一瞬间时光倒流，我又回到许多年前的那个漫天火烧云的黄昏，满脸稚气的孩子敲着饭盒喊我的名字，年轻的老师们笑而不语，而凌一尧一脸绯红地躲在满是起哄声的教室里，就像一个即将嫁给我的小新娘。<br>　　<br>　　而我内心曾经的自卑，以及对金钱的狂热，就像那只名叫“理查德帕克”的白老虎，甩一甩尾巴，轻轻一跃，消失于新疆戈壁滩的绿洲之中。<br>　　<br>　　理查德.帕克，呵呵。<br>　　<br>　　如果这个故事让诸位不满意，非要追根究底地质疑这样一个故事是否可信，那我重新讲一个靠谱一点的故事吧。<br>　　<br>　　我从新疆回来的第三天，去安定广场闲逛，偶然发现花圃台阶旁边有一个漂亮的新娘正在拍婚纱照。她很漂亮，表情又有些木讷，像一个牵线木偶一样被摄影师指挥着，与新郎摆出各种造型。<br>　　<br>　　我喊了她的名字：“凌一尧。”<br>　　<br>　　她看见我时愣了一下，而后丢下那个打扮得油头粉面的新郎，提着婚纱的裙摆，快步走了过来。穿着这身单薄的婚纱，她冻得瑟瑟发抖，又有些羞赧，问道：“你哥呢？”<br>　　<br>　　我说：“他在新疆没回来。”<br>　　<br>　　“你还去吗？”<br>　　<br>　　我点头说“还去，要去收账。”<br>　　<br>　　凌一尧噢了一声，“你等我一下”，她去台阶旁边拿起自己的加长羽绒服披上，又拎来自己的包，将一张银行卡递给我，说：“这是你哥身份证办的卡，以前一起时的定期存款，你帮我带给他，他知道密码。”<br>　　<br>　　“嗯。”我将银行卡接了过去，揣进口袋。<br>　　<br>　　“一定要带给他。”她又强调一遍。<br>　　<br>　　我用拳头按了按胸口，说：“一定。”<br>　　<br>　　然后我转身离开，冷风横贯整个广场，我深呼吸试图抑制内心的痛楚，却被着实呛了一下，眼泪差点滚落下来。我的思绪一下子回到三月的戈壁滩，风雪肆虐，寒气逼人，我的步话机里断断续续地传出吕钦扬的呼喊：“你们点几个火堆，把火烧旺，给我指一下方向，我找不到回去的路了。”<br>　　<br>　　我们用皮卡车拖了许多木方，以及报废的橡胶轮胎，火焰和浓烟直冲云霄，整整烧了一夜，但吕钦扬还是毫无音讯。最后一次与他通话时，他似乎有些精神恍惚，绝望地念叨着：“凌一尧，我迷路了啊……”<br>　　<br>　　第二天下午，我们在十公里外的一座土丘背后找到他早已冻僵的尸体，他不停地跋涉着，可惜离营地越来越远。而他大衣里那本施工日记的中页，用凝油的圆珠笔笔尖在纸上深深地刻下他此生最潦草最歪斜的几个字：“别告诉凌一尧”。<br>　　<br>　　吕钦扬，我最尊敬的学长。当初在黄海的滔天潮水中，你用挖掘机的斗子死死抵住我这台机器的侧面，以防我脚下的堤坝塌陷；你坚持不起诉那些地痞，保下我这个冲动不懂事的学弟；你将我拦了下来，扛着仪器走入茫茫雪地之中；你不停地朝着凌一尧的方向奔跑，那么坚定执着，为什么最后还是迷失方向？<br>　　<br>　　愿你永远活在十年前的文津河畔，愿你灵魂安息。</p><p>今天是公元2013年2月14日，情人节，也是农历癸巳年正月初五，凌一尧的婚期。原本打算讲完故事就销声匿迹，让它慢慢冷却，逐渐被遗忘，但事到如今还是决定给它一个最终番，省得那么多人猜来猜去，越猜越离奇。 </p><p>也在这里对某些人说一声，不要以你的生活环境作为公理定理原理来判断这个世界，譬如学龄。我是如皋小城的一个乡下孩子，入小学时不满六岁，因为运河上面没有桥梁只有渡船，在淹死几个孩子之后，学校在河东开了一所小分校，我所在的那一届，全年级不过七个人而已。后来，有一个家伙留级了，我那个年级一共只剩六个人———如果你们觉得这个事情很荒唐，那么你们以后对人对事作判断时请悠着点。 </p><p>2000年我未满十五岁，以全校第12名的成绩进入白蒲高中，但由于整天把心思放在踢足球上，学业受到影响，考过全班第一，也考过二三十名。也是在那里，我开始人生的初恋并且不幸被抓，饱受政教处的折腾，也得到班主任老姚的格外关照。冬天起床后为了暖一下身体，出门时我们灌了一口红酒，最后被老姚拦在门口，每人做了20个俯卧撑，他终于将我锁定。他后来对同寝室的阿荣说：“XXX同学今早喝酒了，可能是因为感情受挫，你们一定要对他关心爱护。” </p><p>在此感谢千岁大人。 </p><p>正如故事里所说，高考时我数学失利，只考到本二，而凌一尧正常发挥，考取名牌一本，但我至少可以与凌一尧光明正大地恋爱了。这场恋爱不伟大也不光荣，和所有的校园情侣一样，懵懵懂懂，浑浑噩噩，为了莫名其妙的小事吵架，也为了装逼矫情的小事开心。但我大学毕业之后，一切都变得陡然沉重，因为我拿着两三千的月薪，无法挣脱穷困的枷锁。 </p><p>情侣之间最无法弥合的矛盾，就是为了钱而吵架。 </p><p>我业余时间开始写小说，希望成为所谓的修仙小说写手，写一个少年得到神仙指点不断修炼不断进步最后成为神魔人三界主宰，这种故事非常无趣但它就是有市场，兴许可以为我赚得娶老婆的本钱。但最后，我毫无建树，因为我对此根本一点都不感兴趣，我后来出版的小说也是一个反响平平的都市爱情故事。 </p><p>再后来，我去给出版社做枪手，为他人做嫁衣。写自己的故事，署他人的名，拿一笔如同售卖亲子得来的钱。这样的工作可以为我提供七八万的年薪，但我只是别人的影子，没有一点社会地位，当凌一尧的父亲问我从事什么工作，我说是出版社，可是我心里明白，出版社的员工花名册里压根儿没有我的名字。 </p><p>我只是别人花钱雇来的影子武士。 </p><p>在那段时间，凌一尧的父母对我说了“NO”，我与凌一尧之间也不停地发生争执，我一度出现精神抑郁的状况，整夜整夜地失眠。也是在那段时间，我与一个早年认识的北京女孩聊得较多，当初认识时她才十八九岁，素颜时很像大学时期的凌一尧。 </p><p>我走进一个死胡同，我将这个北京女孩当作凌一尧，试图用一个从未谋面的人来排挤凌一尧，那段颠三倒四的日子就是这样混过去的。后来，我也不知道自己到底是在暗恋北京女孩，还是在思念凌一尧。 </p><p>再后来，北京女孩长大了，她与同学创建“powerful”的品牌，而我依旧是默默无闻的吕钦扬，互相删了微博和豆瓣。 </p><p>后来我遇到一个既称得上哥又称得上叔的长辈，他问我怕不怕苦，问我要不要一起去干工程，加入这个既辛苦又容易暴发的行业。当时我想钱已经想疯了，我看见运钞车都会不自觉地想一下各种可能性，我每天都渴望赚到钱但我不知道如何赚，每天都被这种矛盾折磨得无法入睡。 </p><p>凌一尧试图阻止我，但我还是跟他一起走了，先去海边干围海，没有赚到现钱，政府工程的付款方式非常扯淡。再后来，我们又去新疆做光伏电站，在那里，一起趟过黄海和戈壁的技术员把命丢在那里。他比我小一岁，出来卖命的原因也是为了某个她。 </p><p>因为出现伤亡事故会导致工程停滞，业主最后托关系出具自然死亡证明，80万元私了，尸体在当地停了几天后才火化。为了把他带回江苏，我们三人轮流开车，手机按了免提摆在骨灰盒上，里面传出来自家乡老人的呼唤：“天冷霜重，快点归乡哦！” </p><p>当我回到家乡，凌一尧与别人的婚事已经是板上钉钉的事情，用她的话讲，“和他结婚或者和你结婚，现在对我而言，似乎都无所谓了”。我们打电话都要偷偷摸摸的，我们对此都非常厌烦，年底婚期将至的那段时间，凌一尧在派发请柬时难免遇到我们当时的一些老朋友，她的情绪出现波动，开始犹豫不决，甚至想过悔婚。 </p><p>可是即便他不是她想要的，那现在的我就是她想要的么？ </p><p>我也曾经欢欣鼓舞地认为自己的爱情可以失而复返，但最终闹腾一段时间，我们都发现，那不过是再普通不够的婚前焦虑而已。我们很久以前就各自走上背离对方的道路，只是我独自活在自己的世界里，以为两条道路在前面仍会交汇。 </p><p>那个技术员经常喝酒以后和我聊他那让我一听就想打瞌睡的爱情，一提到他的女朋友以后可能和别人结婚，他就忍不住抹眼泪，说：“要是她以后和别人结婚，我一定要躺到她家门口，从我身上跨过去才让她出门。” </p><p>1月27日，我做了人生里最操蛋的事情，我去了他女朋友举办婚礼的那家酒店，将一块旧红布压在迎宾门毯底下。现在你就躺在这里了，可是你阻止得了么？ </p><p>至于红布是什么，我家乡的人兴许会明白。</p><p>讲完这个故事之后，我比你们任何人都无法自拔，老是梦见白蒲高中那条河，梦见她穿着蓝白相间的校服走下桥头，梦见她站在阳台上忧虑地望着远方。但那又能如何，我现在一想起她，只记得她从十五岁到二十四岁的模样，却想不起来她如今着了粉黛之后的相貌。 </p><p>我的脾气也越来越坏，时而莫名其妙地摔东西，时而一个人在家唱歌，我有时都想着自己是不是有点精神分裂，怀疑自己会不会哪天睁眼醒来发现自己的一些经历只是一场梦。 </p><p>昨天是家乡风俗里迎财神的日子，而今天是送财神的日子，漫天的璀璨烟火，其中便有为祝福她的未来而怒放。凌晨五点，我踏上前往上海的车子，今天在上海呆一宿，明天飞往北京，拜见几位资历厚重的前辈。 </p><p>正月初五，情人节，故人着新衣，嫁作他人妇。 </p><p>这只金箍，先戴为敬。</p><p>故事引用了少年派的结局，作者疑似为写手，不过这都已经不重要了，相信在13年那个还没那么多“故事写手”的情况下，作者带着自己的感情与爱情写下了这篇帖子，帖子的最后，楼主给了这个故事三个结局，除了直播帖一开始的结局之外，还有“<a href="https://baike.baidu.com/item/%E5%87%8C%E4%B8%80%E5%B0%A7">凌一尧</a>解除婚约，回到吕钦扬身边”和“吕钦扬丧命沙漠，遗书要求向凌一尧隐瞒死讯”两个结局。网友猜测，帖子开头的结局是真实的，大团圆结局是楼主的美好愿望，而那个残忍的结局，则是楼主希望“自己当时死了算了”的感叹。</p><p><strong>三个结局</strong><br>　　1，男主回来，找到男二谈话，找回了爱情，男二自己放弃（这是作者和读者最想看到的结局）<br>　　2，男主死在了新疆，男主学弟复述了这个故事，赚了很多读者的眼泪。（其实是以那个真的死去的技术员为背景写的这个结局，同时寓意自己的心已经死在新疆）<br>　　3，男主否认了上面两种结局，这个世界上没有那么多美好的结局，也没有付出努力就得到的大笔金钱（工程真的做了，但没有赚到钱），更没有那么多让爱情变得凄美的死亡。男主在这个残酷的世界里，找不回曾经的爱情，而存在于他们心底的爱情，也没有年少时的勇气和激情能够让他们推翻抛弃一切在一起。<br>　　也许，最痛苦的，不是发现自己无力改变这个现实，而是发现，已经不那么爱了。</p><p>他们足够相爱，足够有担当，足够谦让，足够包容，拥有一切爱情所需要的，可最终还是败在了现实面前，也许生活就是这样</p><p>看完以后</p><p>所有的话语化成一句我爱你</p><p>我会用尽全力🍖。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Butterfly的外挂标签引入</title>
      <link href="posts/7d58.html"/>
      <url>posts/7d58.html</url>
      
        <content type="html"><![CDATA[<p>感谢店长！！！<br>店长yyds!!!<br>店长博客地址：<a href="https://akilar.top/">https://akilar.top/</a></p><div class="tip home"><p>如有使用了本站的右键菜单教程的读者，请确保自己的配置内容为最新。2020年11月15日之前的教程中的css样式和本帖的部分标签有冲突。请及时更新。</p><p>同理，若您在使用本帖教程后，发现样式无法完全还原，请重点排查您的其余第三方魔改css样式，例如css中是否存在 <code>.circle</code>、<code>.square</code> 等易重class名。</p></div><details red><summary> 点开查看开发记录 </summary>              <div class='content'>              <div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>本文所涉及的样式，主要参考的是各类已有主题，并对相应styl文件进行样式修改以及添加夜间模式适配。已尽可能追根溯源找到了各部分魔改内容最初的作者，如有错误和遗漏还请联系我修改。</p></div><div class="timeline"><p class='p h2'>开发记录</p><div class="timenode"><div class="meta"><p><p>2020-11-14:内测版v0.05</p></p></div><div class="body"><ol><li>主要使用了<a href="https://github.com/volantis-x/hexo-theme-volantis">Volantis</a>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。</li><li>主要参考内容</li></ol><ul><li><a href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></li><li><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins）</a></li><li><a href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></li><li><a href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></li><li><a href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2020-11-15:正式版v1.0</p></p></div><div class="body"><ol><li>基本完成Volantis外挂标签移植。</li><li>移除了btn标签，因为存在冲突。而且不如butterfly自带的button样式好看。</li><li>适配了folding标签的夜间模式。</li><li>打包了静态资源文件，上传蓝奏云。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-11-16:正式版v1.1</p></p></div><div class="body"><ol><li>新增tip.js，将小康大佬的渐变色上标标签写法从HTML的方式改成用标签语法编写。</li><li>新增动态标签样式anima，使用了fontawesome-animation项目。</li><li>新增标签内容夜间模式适配。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-03:正式版v1.2</p></p></div><div class="body"><ol><li>新增当初弃用的issues.js标签，以配合友链魔改教程中的issues自动更新功能。</li><li>更新了静态资源文件，请之前的读者重新覆盖安装。</li><li>修改了<code>fontawesome-animation.min.css</code>的引入方式，改成使用<code>@import</code>注入<code>index.css</code>。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-07:正式版v1.21</p></p></div><div class="body"><ol><li>资源文件无任何改动。</li><li>更新了动态标签的使用说明。补全参数配置，更换示例。使得教程更加通俗易懂。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-13:正式版v1.3</p></p></div><div class="body"><ol><li>新增Butterfly_v3.4.0的配置文件。</li><li>请读者根据自己的主题版本选择替换。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-17:正式版v1.4</p></p></div><div class="body"><ol><li>新增两个样式标签poem和icon</li><li>修复了folding标签嵌套字体逐级放大的bug。</li><li>不再更新v3.4.0以下版本的适配内容。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-31:正式版v1.5</p></p></div><div class="body"><ol><li>新增两个样式标签，github徽标ghbdage和特效标签wow</li><li>移除静态资源中的<code>fontawesome-animation.min.css</code>以及<code>issues.js</code>，改为CDN引用。</li><li>本帖不专门提供特效标签wow的配置方案，若有需要，请查看站内教程<a href="/posts/abab51cf/">使用wowjs给博客添加动画效果</a></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-02-24:正式版v1.6</p></p></div><div class="body"><ol><li>新增一个样式标签，进度条progress</li></ol></div></div></div>              </div>            </details><details cyan open><summary> 点开查看配置教程 </summary>              <div class='content'>              <ol><li><p>下载资源文件<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Akilarlxh/Tag_Plugins"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=Akilarlxh&repo=Tag_Plugins&theme=vue&show_owner=true"/></a></p></li><li><p>将下载的<code>Tag_Plugins.zip</code>解压得到<code>butterfly</code>文件夹。</p></li><li><p>将<code>butterfly</code>文件夹复制到<code>[Blogroot]\themes\</code>目录下，覆盖当前的<code>butterfly</code>主题文件夹，提示重复则选择替换。(如果担心覆盖自己的其他魔改内容，可以根据静态文件内容自主比对修改)</p></li><li><p>修改<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项，添加<code>CDN</code>依赖项。由于<code>issues</code>写入<code>timeline</code>和<code>site-card</code>标签要用到<code>jquery</code>，请务必根据注释指示的版本决定是否添加。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/l-lin/font-awesome-animation/dist/font-awesome-animation.min.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span>  <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># 自butterfly_v3.4.0+开始，主题基本实现去jquery化，需要自己添加引用，请读者根据版本自行决定是否添加这行引用。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/hexo-theme-volantis@latest/source/js/issues.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment">#数据集合标签issues的依赖</span></span><br></pre></td></tr></table></figure></li><li><p>外挂标签使用方案请参阅下文。</p></li></ol>              </div>            </details><h1 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h1><div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#text-2">样式预览</button></li><li class="tab"><button type="button" data-href="#text-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="text-2"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h1><div class="tabs" id="span"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#span-1">标签语法</button></li><li class="tab"><button type="button" data-href="#span-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#span-3">样式预览</button></li><li class="tab"><button type="button" data-href="#span-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="span-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-2"><ol><li>字体: logo, code</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="span-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h1><div class="tabs" id="p"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#p-1">标签语法</button></li><li class="tab"><button type="button" data-href="#p-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#p-3">样式预览</button></li><li class="tab"><button type="button" data-href="#p-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="p-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-2"><ol><li>字体: logo, code</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="p-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h1><div class="note warning simple"><p>最新版<code>butterfly</code>标签支持引用<code>fontawesome V5</code>图标，效果上已经优于<code>volantis</code>的note标签。故不再额外引入<code>volantis的note样式</code>。<del>做样式适配好麻烦的啊，能偷懒就偷懒吧</del></p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>以下是<code>butterfly</code>主题的note写法。</p></div><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#note-1">通用配置</button></li><li class="tab"><button type="button" data-href="#note-2">语法格式</button></li><li class="tab"><button type="button" data-href="#note-3">配置参数</button></li><li class="tab active"><button type="button" data-href="#note-4">样式预览</button></li><li class="tab"><button type="button" data-href="#note-5">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="note-1"><p>修改主题配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><code>Note</code>标签外挂有两种用法。<code>icons</code>和<code>light_bg_offset</code>只对方法一生效。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><details cyan><summary> 方法一 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details blue><summary> 方法二 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-3"><details cyan><summary> 方法一 </summary>              <div class='content'>              <table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">class</td><td align="left">【可选】标识，不同的标识有不同的配色<br>（ default / primary / success / info / warning / danger ）</td></tr><tr><td align="left">no-icon</td><td align="left">【可选】不显示 icon</td></tr><tr><td align="left">style</td><td align="left">【可选】可以覆盖配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table>              </div>            </details><details blue><summary> 方法二 </summary>              <div class='content'>              <table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">class</td><td align="left">【可选】标识，不同的标识有不同的配色<br>（ default / primary / success / info / warning / danger ）</td></tr><tr><td align="left">no-icon</td><td align="left">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td align="left">style</td><td align="left">【可选】可以覆盖配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="note-4"><details cyan><summary> 方法一 </summary>              <div class='content'>              <ol><li><code>simple</code>样式</li></ol>  <div class="note simple"><p>默认 提示块标签</p></div>  <div class="note default simple"><p>default 提示块标签</p></div>  <div class="note primary simple"><p>primary 提示块标签</p></div>  <div class="note success simple"><p>success 提示块标签</p></div>  <div class="note info simple"><p>info 提示块标签</p></div>  <div class="note warning simple"><p>warning 提示块标签</p></div>  <div class="note danger simple"><p>danger 提示块标签</p></div><ol start="2"><li><code>modern</code>样式</li></ol>  <div class="note modern"><p>默认 提示块标签</p></div>  <div class="note default modern"><p>default 提示块标签</p></div>  <div class="note primary modern"><p>primary 提示块标签</p></div>  <div class="note success modern"><p>success 提示块标签</p></div>  <div class="note info modern"><p>info 提示块标签</p></div>  <div class="note warning modern"><p>warning 提示块标签</p></div>  <div class="note danger modern"><p>danger 提示块标签</p></div><ol start="3"><li><code>flat</code>样式</li></ol>  <div class="note flat"><p>默认 提示块标签</p></div>  <div class="note default flat"><p>default 提示块标签</p></div>  <div class="note primary flat"><p>primary 提示块标签</p></div>  <div class="note success flat"><p>success 提示块标签</p></div>  <div class="note info flat"><p>info 提示块标签</p></div>  <div class="note warning flat"><p>warning 提示块标签</p></div>  <div class="note danger flat"><p>danger 提示块标签</p></div><ol start="4"><li><code>disabled</code>样式</li></ol>  <div class="note disabled"><p>默认 提示块标签</p></div>  <div class="note default disabled"><p>default 提示块标签</p></div>  <div class="note primary disabled"><p>primary 提示块标签</p></div>  <div class="note success disabled"><p>success 提示块标签</p></div>  <div class="note info disabled"><p>info 提示块标签</p></div>  <div class="note warning disabled"><p>warning 提示块标签</p></div>  <div class="note danger disabled"><p>danger 提示块标签</p></div><ol start="5"><li><code>no-icon</code>样式</li></ol>  <div class="note no-icon simple"><p>默认 提示块标签</p></div>  <div class="note default no-icon simple"><p>default 提示块标签</p></div>  <div class="note primary no-icon simple"><p>primary 提示块标签</p></div>  <div class="note success no-icon simple"><p>success 提示块标签</p></div>  <div class="note info no-icon simple"><p>info 提示块标签</p></div>  <div class="note warning no-icon simple"><p>warning 提示块标签</p></div>  <div class="note danger no-icon simple"><p>danger 提示块标签</p></div>              </div>            </details><details blue><summary> 方法二 </summary>              <div class='content'>              <ol><li>simple样式</li></ol>  <div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div>  <div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div>  <div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div>  <div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div>  <div class="note green icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="2"><li>modern样式</li></ol>  <div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div>  <div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div>  <div class="note red icon modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div>  <div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div>  <div class="note green icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="3"><li>flat样式</li></ol>  <div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div>  <div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div>  <div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div>  <div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div>  <div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="4"><li>disabled样式</li></ol>  <div class="note icon disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div>  <div class="note pink icon disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div>  <div class="note red icon disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div>  <div class="note orange icon disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note purple icon disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div>  <div class="note green icon disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="5"><li>no-icon样式</li></ol>  <div class="note no-icon simple"><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note blue no-icon simple"><p>2021年快到了….</p></div>  <div class="note pink no-icon simple"><p>小心开车 安全至上</p></div>  <div class="note red no-icon simple"><p>这是三片呢？还是四片？</p></div>  <div class="note orange no-icon simple"><p>你是刷 Visa 还是 UnionPay</p></div>  <div class="note purple no-icon simple"><p>剪刀石头布</p></div>  <div class="note green no-icon simple"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-5"><details cyan><summary> 方法一 </summary>              <div class='content'>              <ol><li><code>simple</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><code>modern</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><code>flat</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li><code>disabled</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><code>no-icon</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details blue><summary> 方法二 </summary>              <div class='content'>              <ol><li><code>simple</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><code>modern</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><code>flat</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li><code>disabled</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><code>no-icon</code>样式</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h1><div class="tip cogs"><p>主要样式参考自<a href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly渐变背景标签</a>,自己写了个<code>tip.js</code>来渲染标签，精简了一下代码。</p></div><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#tip-3">样式预览</button></li><li class="tab"><button type="button" data-href="#tip-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><ol><li>样式: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li>自定义图标: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-3"><div class="tip "><p>默认情况</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;默认情况&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h1><div class="tip faa-horizontal animated"><p>动态标签的实质是引用了<a href="https://github.com/l-lin/font-awesome-animation">font-awesome-animation</a>的css样式，不一定局限于tip标签，也可以是其他标签。<br>只不过这里<code>tip.js</code>是我自己写的，所以我清楚它会怎么被渲染成html，才用的这个写法。<br>可以熟读文档，使用html语言来编写其他标签类型。</p></div><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#tip-3">样式预览</button></li><li class="tab"><button type="button" data-href="#tip-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>更多详情请参看<a href="http://l-lin.github.io/font-awesome-animation/">font-awesome-animation文档</a></p><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><table><thead><tr><th align="left">On DOM load<br>当页面加载时<br>显示动画</th><th align="left">On hover<br>当鼠标悬停时<br>显示动画</th><th align="left">On parent hover<br>当鼠标悬停<br>在父级元素时<br>显示动画</th></tr></thead><tbody><tr><td align="left"><span><i class="fas fa-wrench faa-wrench animated"></i>&nbsp;faa-wrench animated</span></td><td align="left"><span><i class="fas fa-wrench faa-wrench animated-hover"></i>&nbsp;faa-wrench animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-wrench faa-wrench"></i>&nbsp;faa-wrench</span></td></tr><tr><td align="left"><span><i class="fas fa-bell faa-ring animated"></i>&nbsp;faa-ring animated</span></td><td align="left"><span><i class="fas fa-bell faa-ring animated-hover"></i>&nbsp;faa-ring animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-bell faa-ring"></i>&nbsp;faa-ring</span></td></tr><tr><td align="left"><span><i class="fas fa-envelope faa-horizontal animated"></i>&nbsp;faa-horizontal animated</span></td><td align="left"><span><i class="fas fa-envelope faa-horizontal animated-hover"></i>&nbsp;faa-horizontal animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-envelope faa-horizontal"></i>&nbsp;faa-horizontal</span></td></tr><tr><td align="left"><span><i class="fas fa-thumbs-up faa-vertical animated"></i>&nbsp;faa-vertical animated</span></td><td align="left"><span><i class="fas fa-thumbs-up faa-vertical animated-hover"></i>&nbsp;faa-vertical animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-thumbs-up faa-vertical"></i>&nbsp;faa-vertical</span></td></tr><tr><td align="left"><span><i class="fas fa-exclamation-triangle faa-flash animated"></i>&nbsp;faa-flash animated</span></td><td align="left"><span><i class="fas fa-exclamation-triangle faa-flash animated-hover"></i>&nbsp;faa-flash animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-exclamation-triangle faa-flash"></i>&nbsp;faa-flash</span></td></tr><tr><td align="left"><span><i class="fas fa-thumbs-up faa-bounce animated"></i>&nbsp;faa-bounce animated</span></td><td align="left"><span><i class="fas fa-thumbs-up faa-bounce animated-hover"></i>&nbsp;faa-bounce animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-thumbs-up faa-bounce"></i>&nbsp;faa-bounce</span></td></tr><tr><td align="left"><span><i class="fas fa-spinner faa-spin animated"></i>&nbsp;faa-spin animated</span></td><td align="left"><span><i class="fas fa-spinner faa-spin animated-hover"></i>&nbsp;faa-spin animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-spinner faa-spin"></i>&nbsp;faa-spin</span></td></tr><tr><td align="left"><span><i class="fas fa-plane faa-tada animated"></i>&nbsp;faa-tada animated</span></td><td align="left"><span><i class="fas fa-plane faa-tada animated-hover"></i>&nbsp;faa-tada animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-plane faa-tada"></i>&nbsp;faa-tada</span></td></tr><tr><td align="left"><span><i class="fas fa-heart faa-pulse animated"></i>&nbsp;faa-pulse animated</span></td><td align="left"><span><i class="fas fa-heart faa-pulse animated-hover"></i>&nbsp;faa-pulse animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-heart faa-pulse"></i>&nbsp;faa-pulse</span></td></tr><tr><td align="left"><span><i class="fas fa-envelope faa-shake animated"></i>&nbsp;faa-shake animated</span></td><td align="left"><span><i class="fas fa-envelope faa-shake animated-hover"></i>&nbsp;faa-shake animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-envelope faa-shake"></i>&nbsp;faa-shake</span></td></tr><tr><td align="left"><span><i class="fas fa-trophy faa-tada animated"></i>&nbsp;faa-tada animated</span></td><td align="left"><span><i class="fas fa-trophy faa-tada animated-hover"></i>&nbsp;faa-tada animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-trophy faa-tada"></i>&nbsp;faa-tada</span></td></tr><tr><td align="left"><span><i class="fas fa-space-shuttle faa-passing animated"></i>&nbsp;faa-passing animated</span></td><td align="left"><span><i class="fas fa-space-shuttle faa-passing animated-hover"></i>&nbsp;faa-passing animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-space-shuttle faa-passing"></i>&nbsp;faa-passing</span></td></tr><tr><td align="left"><span><i class="fas fa-space-shuttle faa-passing-reverse animated"></i>&nbsp;faa-passing-reverse animated</span></td><td align="left"><span><i class="fas fa-space-shuttle faa-passing-reverse animated-hover"></i>&nbsp;faa-passing-reverse animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-space-shuttle faa-passing-reverse"></i>&nbsp;faa-passing-reverse</span></td></tr><tr><td align="left"><span><i class="fas fa-circle faa-burst animated"></i>&nbsp;faa-burst animated</span></td><td align="left"><span><i class="fas fa-circle faa-burst animated-hover"></i>&nbsp;faa-burst animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-circle faa-burst"></i>&nbsp;faa-burst</span></td></tr><tr><td align="left"><span><i class="fas fa-star faa-falling animated"></i>&nbsp;faa-falling animated</span></td><td align="left"><span><i class="fas fa-star faa-falling animated-hover"></i>&nbsp;faa-falling animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-star faa-falling"></i>&nbsp;faa-falling</span></td></tr><tr><td align="left"><span><i class="fas fa-rocket faa-rising animated"></i>&nbsp;faa-rising animated</span></td><td align="left"><span><i class="fas fa-rocket faa-rising animated-hover"></i>&nbsp;faa-rising animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-rocket faa-rising"></i>&nbsp;faa-rising</span></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-3"><ol><li>On DOM load（当页面加载时显示动画）</li></ol>  <div class="tip warning faa-horizontal animated"><p>warning</p></div>  <div class="tip ban faa-flash animated"><p>ban</p></div><ol start="2"><li>调整动画速度。</li></ol>  <div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div>  <div class="tip ban faa-flash animated faa-slow"><p>ban</p></div><ol start="3"><li>On hover（当鼠标悬停时显示动画）</li></ol>  <div class="tip warning faa-horizontal animated-hover"><p>warning</p></div>  <div class="tip ban faa-flash animated-hover"><p>ban</p></div><ol start="4"><li>On parent hover（当鼠标悬停在父级元素时显示动画）</li></ol>  <div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div>  <div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><ol><li>On DOM load（当页面加载时显示动画）</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>调整动画速度</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>On hover（当鼠标悬停时显示动画）</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>On parent hover（当鼠标悬停在父级元素时显示动画）</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h1><div class="tabs" id="checkbox"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#checkbox-1">标签语法</button></li><li class="tab"><button type="button" data-href="#checkbox-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#checkbox-3">样式预览</button></li><li class="tab"><button type="button" data-href="#checkbox-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="checkbox-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-2"><ol><li>样式: plus, minus, times</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="checkbox-3"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h1><div class="tabs" id="radio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#radio-1">标签语法</button></li><li class="tab"><button type="button" data-href="#radio-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#radio-3">样式预览</button></li><li class="tab"><button type="button" data-href="#radio-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="radio-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-2"><ol><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="radio-3"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h1><div class="tabs" id="timeline"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#timeline-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#timeline-2">样式预览</button></li><li class="tab"><button type="button" data-href="#timeline-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="timeline-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选） %&#125;</span><br><span class="line">&#123;% timenode 时间节点（标题） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% timenode 时间节点（标题） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="timeline-2"><div class="timeline"><div class="timenode"><div class="meta"><p><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></p></div><div class="body"><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></p></div><div class="body"><p>不需要额外处理。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></p></div><div class="body"><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) %&#125;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h1><div class="tabs" id="link"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#link-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#link-2">样式预览</button></li><li class="tab"><button type="button" data-href="#link-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="link-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="link-2"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h1><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p><code>Volantis</code>的按钮使用的是<code>btn</code>和<code>btns</code>标签。<code>btns</code>和<code>butterfly</code>的<code>button</code>不冲突，但是<code>btn</code>会被强制渲染，导致部分参数失效,而且<code>btn</code>的效果还是<code>butterfly</code>的<code>button</code>更好看些。所以就只适配了<code>btns</code>。</p></div><div class="tabs" id="btn"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#btn-1">标签语法</button></li><li class="tab"><button type="button" data-href="#btn-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#btn-3">样式预览</button></li><li class="tab"><button type="button" data-href="#btn-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="btn-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btn-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;标题&lt;/b&gt; </code>和<code> &lt;p&gt;描述文字&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">wide</td><td align="left">宽一点的按钮</td></tr><tr><td align="left">fill</td><td align="left">填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td align="left">center</td><td align="left">居中，按钮之间是固定间距</td></tr><tr><td align="left">around</td><td align="left">居中分散</td></tr><tr><td align="left">grid2</td><td align="left">等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid3</td><td align="left">等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid4</td><td align="left">等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid5</td><td align="left">等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="btn-3"><ol><li>如果需要显示类似「团队成员」之类的一组含有头像的链接：</li></ol>  <div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div><ol start="2"><li>或者含有图标的按钮：</li></ol>  <div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><ol start="3"><li>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</li></ol>  <div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btn-4"><ol><li>如果需要显示类似「团队成员」之类的一组含有头像的链接：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li>或者含有图标的按钮：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="github卡片-ghcard"><a href="#github卡片-ghcard" class="headerlink" title="github卡片 ghcard"></a>github卡片 ghcard</h1><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>ghcard使用了<code>github-readme-stats</code>的API，支持直接使用markdown语法来写。</p></div><div class="tabs" id="ghcard"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghcard-1">标签语法</button></li><li class="tab"><button type="button" data-href="#ghcard-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#ghcard-3">样式预览</button></li><li class="tab"><button type="button" data-href="#ghcard-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghcard-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-2"><p>更多参数可以参考：<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/anuraghazra/github-readme-stats"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=github-readme-stats&show_owner=true"/></a><br>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th align="left">参数名</th><th align="left">取值</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">hide</td><td align="left">stars,commits,prs,issues,contribs</td><td align="left">隐藏指定统计</td></tr><tr><td align="left">count_private</td><td align="left">true</td><td align="left">将私人项目贡献添加到总提交计数中</td></tr><tr><td align="left">show_icons</td><td align="left">true</td><td align="left">显示图标</td></tr><tr><td align="left">theme</td><td align="left">请查阅<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td align="left">主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghcard-3"><ol><li>用户信息卡片</li></ol><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=calm&show_owner=true"/></a></td></tr></tbody></table><ol start="2"><li>仓库信息卡片</li></ol><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-4"><ol><li>用户信息卡片</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard xaoxuu %&#125; | &#123;% ghcard xaoxuu, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=buefy %&#125; | &#123;% ghcard xaoxuu, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=onedark %&#125; | &#123;% ghcard xaoxuu, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=algolia %&#125; | &#123;% ghcard xaoxuu, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><ol start="2"><li>仓库信息卡片<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="github徽标-ghbdage"><a href="#github徽标-ghbdage" class="headerlink" title="github徽标 ghbdage"></a>github徽标 ghbdage</h1><div class="tip cogs"><p>关于ghbdage参数的更多具体用法可以参看站内教程：<a href="/posts/e87ad7f8">添加github徽标</a></p></div><div class="tabs" id="ghbdage"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghbdage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#ghbdage-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#ghbdage-3">样式预览</button></li><li class="tab"><button type="button" data-href="#ghbdage-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghbdage-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghbdage-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghbdage-3"><div class="note info modern"><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></div>1. 基本参数<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object>2. 信息参数<br><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object>3. 拓展参数<br><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=40"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=40&logoColor=violet"></object><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghbdage-4"><div class="note info modern"><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></div>1. 基本参数,定义徽标左右文字和图标<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure>2. 信息参数，定义徽标右侧内容背景色，指向链接<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure>3. 拓展参数，支持shields的API的全部参数内容<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h1><div class="tabs" id="site"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#site-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#site-2">样式预览</button></li><li class="tab"><button type="button" data-href="#site-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="site-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="site-2"><div class="site-card-group"><a class="site-card" target="_blank" href="https://xaoxuu.com"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png"/><span class="title">xaoxuu</span><span class="desc">简约风格</span></div></a><a class="site-card" target="_blank" href="https://inkss.cn"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" target="_blank" href="https://blog.mhuig.top"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" target="_blank" href="https://colsrch.top"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" target="_blank" href="https://linhk1606.github.io"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="site-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h1><div class="tabs" id="inlineimage"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#inlineimage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#inlineimage-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#inlineimage-3">样式预览</button></li><li class="tab"><button type="button" data-href="#inlineimage-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="inlineimage-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-2"><ol><li>高度：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="inlineimage-3"><p>这是 <img no-lazy class="inline" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h1><div class="tabs" id="image"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#image-1">标签语法</button></li><li class="tab"><button type="button" data-href="#image-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#image-3">样式预览</button></li><li class="tab"><button type="button" data-href="#image-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="image-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="image-3"><ol><li>添加描述：</li></ol>  <div class="img-wrap"><div class="img-bg"><img class="img" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div><ol start="2"><li>指定宽度：</li></ol>  <div class="img-wrap"><div class="img-bg"><img class="img" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div><ol start="3"><li>指定宽度并添加描述：</li></ol>  <div class="img-wrap"><div class="img-bg"><img class="img" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div><ol start="4"><li>设置占位背景色：</li></ol>  <div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-4"><ol><li>添加描述：</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>指定宽度：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure></li><li>指定宽度并添加描述：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure></li><li>设置占位背景色：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h1><div class="tabs" id="audio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#audio-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#audio-2">样式预览</button></li><li class="tab"><button type="button" data-href="#audio-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="audio-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="audio-2"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="audio-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h1><div class="tabs" id="video"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#video-1">标签语法</button></li><li class="tab"><button type="button" data-href="#video-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#video-3">样式预览</button></li><li class="tab"><button type="button" data-href="#video-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="video-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="video-2"><ol><li>对其方向：left, center, right</li><li>列数：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="video-3"><ol><li>100%宽度</li></ol>  <div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><ol start="2"><li><p>50%宽度</p><div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></li><li><p>25%宽度</p></li></ol>  <div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="video-4"><ol><li><p>100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></li><li><p>25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="相册-gallery"><a href="#相册-gallery" class="headerlink" title="相册 gallery"></a>相册 gallery</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>自带<code>gallery</code>相册，而且会根据图片大小自动调整排版，效果比<code>Volantis</code>的<code>gallery</code>更好，故不再收录<code>Volantis</code>的<code>gallery</code>标签。</p></div><div class="note simple"><p>以下为<code>Butterfly</code>自带的<code>gallery</code>标签写法。相册图库和相册配合使用。</p></div><div class="tabs" id="gallery"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#gallery-1">标签语法</button></li><li class="tab"><button type="button" data-href="#gallery-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#gallery-3">样式预览</button></li><li class="tab"><button type="button" data-href="#gallery-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="gallery-1"><ol><li><p>gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th align="left">参数名</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">name</td><td align="left">图库名字</td></tr><tr><td align="left">description</td><td align="left">图库描述</td></tr><tr><td align="left">link</td><td align="left">链接到对应相册的地址</td></tr><tr><td align="left">img-url</td><td align="left">图库封面</td></tr></tbody></table><div class="note info simple"><p>思维拓展一下，相册图库的实质其实就是个快捷方式，可以自定义添加描述、封面、链接。那么我们未必要把它当做一个相册，完全可以作为一个链接卡片，链接到视频、QQ、友链都是不错的选择。</p></div><ul><li>gallery 相册<br>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="gallery-3"><ul><li>gallerygroup 相册图库</li></ul><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo@v2.3/tencent/MC/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo@v2.3/tencent/Gundam/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo@v2.3/tencent/I-am-Akilar/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure>  </div><ul><li>gallery 相册</li></ul> <div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-4"><div class="note info simple"><p>对于很多同学提问的<code>gallerygroup</code>和<code>gallery</code>相册页的链接问题。这里说下我个人的使用习惯。<br>一般使用相册图库的话，可以在导航栏加一个gallery的page(<strong>使用指令<code>hexo new page gallery</code>添加</strong>)，里面放相册图库作为封面。然后在<code>[Blogroot]/source/gallery/</code>下面建立相应的文件夹，例如若按照这里的示例，若欲使用<code>/gallery/MC/</code>路径访问MC相册，则需要新建<code>[Blogroot]/source/gallery/MC/index.md</code>，并在里面填入<code>gallery</code>相册内容。</p></div><ol><li><p>gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo@v2.3/tencent/MC/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo@v2.3/tencent/Gundam/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo@v2.3/tencent/I-am-Akilar/20200907113116651.png %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>虽然也有内置折叠框<code>hideToggle</code>标签，但是<code>Volantis</code>的<code>folding</code>折叠框更好看一些。</p></div><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#folding-3">样式预览</button></li><li class="tab"><button type="button" data-href="#folding-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="folding-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>颜色：blue, cyan, green, yellow, red</li><li>状态：状态填写 open 代表默认打开。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="folding-3"><details ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg"></p>              </div>            </details><details cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details green><summary> 查看代码测试 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br></pre></td></tr></table></figure>              </div>            </details><details yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>的<code>tab</code>标签和<code>Volantis</code>的<code>tab</code>标签都是移值自<code>NexT</code>主题，所以写法和效果一模一样。</p></div><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#folding-3">样式预览</button></li><li class="tab"><button type="button" data-href="#folding-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="folding-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在#id中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</li><li>仅当前帖子/页面的URL必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果index为-1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="folding-3"><div class="note primary simple"><p>Demo 1 - 预设选择第一个【默认】</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary simple"><p>Demo 2 - 预设选择tabs</p></div><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary simple"><p>Demo 3 - 没有预设值</p></div><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary simple"><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></div><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-4"><div class="note primary simple"><p>Demo 1 - 预设选择第一个【默认】</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="note primary simple"><p>Demo 2 - 预设选择tabs</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="note primary simple"><p>Demo 3 - 没有预设值</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="note primary simple"><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="数据集合-issues"><a href="#数据集合-issues" class="headerlink" title="数据集合 issues"></a>数据集合 issues</h1><div class="tabs" id="issues"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#issues-1">标签语法</button></li><li class="tab"><button type="button" data-href="#issues-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#issues-3">样式预览</button></li><li class="tab"><button type="button" data-href="#issues-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="issues-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% issues type | api=url | group=key:value1,value2（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="issues-2"><p><span class='p center logo large'>type(类型)：</span><br>根据需求不同，会将 issues 内容解析成不同的 HTML 标签，目前支持的类型有：</p><ol><li>时间轴<code>timeline</code>: 解析成<code>timeline</code>标签，<code>issue</code>的标题对应<code>timeline</code>的时间，<code>issue</code>的内容对应<code>timeline</code>的内容。</li><li>网站卡片<code>sites</code>: 解析成<code>sites</code>标签，需要有<code>JSON</code>代码块,各参数对应<code>sites</code>标签参数:</li></ol>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;screenshot&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;「keywords」&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">网站名称</td></tr><tr><td align="left">screenshot</td><td align="left">网站预览图</td></tr><tr><td align="left">url</td><td align="left">网站链接，需要添加<br><code>https://</code>协议组成完整域名。<br>否则可能被识别成站点相对路径。</td></tr><tr><td align="left">avatar</td><td align="left">站长头像</td></tr><tr><td align="left">「keywords」</td><td align="left">分组依据，<br>未必要叫「keywords」，<br>详见下文group(分组)</td></tr></tbody></table><p><span class='p center logo large'>api(接口)：</span><br>url为可以调的通的API，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">api&#x3D;https:&#x2F;&#x2F;gitee.com&#x2F;api&#x2F;v5&#x2F;repos&#x2F;xaoxuu&#x2F;friends&#x2F;issues?sort&#x3D;updated&amp;state&#x3D;open&amp;page&#x3D;1&amp;per_page&#x3D;100&amp;labels&#x3D;active</span><br><span class="line">api&#x3D;https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;xaoxuu&#x2F;friends&#x2F;issues?sort&#x3D;updated&amp;state&#x3D;open&amp;page&#x3D;1&amp;per_page&#x3D;100&amp;labels&#x3D;active</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left"><a href="https://gitee.com/api/v5/">https://gitee.com/api/v5/</a></td><td align="left">gitee仓库的api</td></tr><tr><td align="left"><a href="https://api.github.com/">https://api.github.com/</a></td><td align="left">github仓库的api</td></tr><tr><td align="left">repos/xaoxuu/friends/issues</td><td align="left">repos/用户名/仓库名/issues</td></tr><tr><td align="left">sort=updated&amp;state=open</td><td align="left">界定哪些类型的<code>issues</code>会<br>被读取过来渲染成相应的标签</td></tr><tr><td align="left">page=1&amp;per_page=100</td><td align="left">读取前100条issues</td></tr><tr><td align="left">labels=active</td><td align="left">控制默认的issue不显示，<br>只有自己审核通过<br>添加了active标签之后才会显示</td></tr></tbody></table><p><span class='p center logo large'>group(分组)：</span><br><code>sites</code>类型的<code>issues</code>默认不分组，如果需要分组，可指定分组依据<code>「keywords」</code>，和分组白名单<code>「value1」</code>、<code>「value2」</code>等，例如：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">group=version:v4,v3,v2</span></span><br><span class="line"><span class="comment"># 此处的version就是上文中的「keywords」</span></span><br></pre></td></tr></table></figure><p>这个参数的作用就是，筛选出<code>JSON</code>中包含<code>&quot;version&quot;: &quot;v4&quot;</code>或者<code>&quot;version&quot;:&quot;v3&quot;</code>或者<code>&quot;version&quot;: &quot;v2&quot;</code>的数据，并分组显示。</p><p><span class='p center logo large'>仓库ISSUES模板配置</span></p><details green><summary> Github仓库配置方案 </summary>              <div class='content'>              <ol><li>新建一个仓库，仓库名随意，这里我命名为<code>friend_link</code>,<br>新建文件<code>friend_link\.github\ISSUE_TEMPLATE.md</code>,<br>并在其中输入以下内容作为<code>issues</code>模板。</li></ol>  <div class="tip warning faa-horizontal animated fa-slow"><p>其中的json代码块前面的反斜杠记得删去。此处这么写主要是为了转义，否则无法嵌套代码块。</p></div>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">name: 友链模板</span><br><span class="line">about: 请根据指示规范填写友链格式。</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;!-- 请在下方代码块的双引号中填写 --&gt;</span><br><span class="line">\<span class="code">```json</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">    &quot;title&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;screenshot&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;url&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;avatar&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;description&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;keywords&quot;: &quot;&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">\```</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;站点名称&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;站点预览图链接&quot;,</span><br><span class="line">&quot;url&quot;: &quot;站点链接&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;头像链接&quot;,</span><br><span class="line">&quot;description&quot;: &quot;站点描述&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;关键词，作为分组名&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;Akilarの糖果屋&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;https://cdn.jsdelivr.net/gh/Akilarlxh/ScreenShot@gh-pages/akilar.top.jpg&quot;,</span><br><span class="line">&quot;url&quot;: &quot;https://akilar.top/&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;https://akilar.top/img/siteicon/favicon.png&quot;,</span><br><span class="line">&quot;description&quot;: &quot;期待您的光临！&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;糖果屋&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>新建active label</li></ol><p>  <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo/assets/d63b5c0c.png" alt="新建label用于控制审核结果"></p><p>  <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo/assets/6311f960.png" alt="配置名称描述颜色"></p><ol start="3"><li>提交示例</li></ol><p>  <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo/assets/f87ebfd3.png" alt="填写规范"><br>  <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo/assets/efdfc67d.png" alt="审核通过"></p><ol start="4"><li>从审核通过到页面读取有一段api的缓存期，稍微有点耐心。</li></ol>              </div>            </details><details yellow><summary> Gitee仓库配置方案 </summary>              <div class='content'>              <ol><li>新建一个仓库，仓库名随意，这里我命名为<code>friend_link</code>,<br>新建文件<code>friend_link\.gitee\ISSUE_TEMPLATE.md</code>,<br>并在其中输入以下内容作为<code>issues</code>模板。</li></ol>  <div class="tip warning faa-horizontal animated fa-slow"><p>其中的json代码块前面的反斜杠记得删去。此处这么写主要是为了转义，否则无法嵌套代码块。</p></div>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">name: 友链模板</span><br><span class="line">about: 请根据指示规范填写友链格式。</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;!-- 请在下方代码块的双引号中填写 --&gt;</span><br><span class="line">\<span class="code">```json</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">    &quot;title&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;screenshot&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;url&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;avatar&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;description&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;keywords&quot;: &quot;&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">\```</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;站点名称&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;站点预览图链接&quot;,</span><br><span class="line">&quot;url&quot;: &quot;站点链接&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;头像链接&quot;,</span><br><span class="line">&quot;description&quot;: &quot;站点描述&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;关键词，作为分组名&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;Akilarの糖果屋&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;https://cdn.jsdelivr.net/gh/Akilarlxh/ScreenShot@gh-pages/akilar.top.jpg&quot;,</span><br><span class="line">&quot;url&quot;: &quot;https://akilar.top/&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;https://akilar.top/img/siteicon/favicon.png&quot;,</span><br><span class="line">&quot;description&quot;: &quot;期待您的光临！&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;糖果屋&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>新建active标签</li></ol><p>  <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo/assets/7522911b.png" alt="新建标签用于控制审核结果"></p><ol start="3"><li>提交示例</li></ol><p>  <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo/assets/dd334eea.png" alt="填写规范"><br>  <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo/assets/72d06ae1.png" alt="审核通过"></p><ol start="4"><li>从审核通过到页面读取有一段api的缓存期，稍微有点耐心。</li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="issues-3"><ol><li>时间轴标签<code>timeline</code>渲染<br>对应的仓库<code>issues</code>链接:<div class="tag link"><a class="link-card" title="xaoxuu/timeline" href="https://gitee.com/xaoxuu/timeline/issues"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/timeline</p><p class="url">https://gitee.com/xaoxuu/timeline/issues</p></div></a></div></li></ol>  <div class="issues-api timeline"api="https://gitee.com/api/v5/repos/xaoxuu/timeline/issues?state=open&creator=xaoxuu&sort=created&direction=desc&page=1&per_page=100"></div><ol start="2"><li>网站卡片标签<code>sites</code>渲染</li></ol><ul><li><p>gitee仓库示例</p><p>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/friends" href="https://gitee.com/xaoxuu/friends/issues"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/friends</p><p class="url">https://gitee.com/xaoxuu/friends/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites"api="https://gitee.com/api/v5/repos/xaoxuu/friends/issues?sort=updated&state=open&page=1&per_page=100&labels=active"></div></li><li><p>github仓库示例</p><p>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/friends" href="https://github.com/xaoxuu/friends/issues"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/friends</p><p class="url">https://github.com/xaoxuu/friends/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites"api="https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&state=open&page=1&per_page=100&labels=active"></div></li></ul><ol start="3"><li>网站卡片标签<code>sites</code>分组渲染<br>这是<code>Volantis</code>主题官网的「示例博客」页面的数据：<br>对应的仓库<code>issues</code>链接:</li></ol>  <div class="tag link"><a class="link-card" title="如何参与项目" href="https://github.com/volantis-x/examples/issues"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">如何参与项目</p><p class="url">https://github.com/volantis-x/examples/issues</p></div></a></div><p>  渲染后的标签：</p>  <div class="issues-api sites"api="https://api.github.com/repos/volantis-x/examples/issues?sort=updated&state=open&page=1&per_page=100"group="version:版本：^4.0,版本：^3.0,版本：^2.0"></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="issues-4"><ol><li>时间轴标签<code>timeline</code>渲染</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% issues timeline | api=https://gitee.com/api/v5/repos/xaoxuu/timeline/issues?state=open&amp;creator=xaoxuu&amp;sort=created&amp;direction=desc&amp;page=1&amp;per<span class="emphasis">_page=100 %&#125;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>网站卡片标签<code>sites</code>渲染</li></ol><ul><li><p>gitee仓库示例</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% issues sites | api=https://gitee.com/api/v5/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100&amp;labels=active %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>github仓库示例</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% issues sites | api=https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100&amp;labels=active %&#125;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>网站卡片标签<code>sites</code>分组渲染<br>这是<code>Volantis</code>主题官网的「示例博客」页面的数据：</li></ol>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% issues sites | api=https://api.github.com/repos/volantis-x/examples/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100 | group=version:版本：^4.0,版本：^3.0,版本：^2.0 %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h1><div class="tabs" id="poem"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#poem-1">标签语法</button></li><li class="tab"><button type="button" data-href="#poem-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#poem-3">样式预览</button></li><li class="tab"><button type="button" data-href="#poem-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="poem-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem [title],[author] %&#125;</span><br><span class="line">诗词内容</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="poem-2"><ol><li>title：诗词标题</li><li>author：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="poem-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？<br>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="poem-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="阿里图标-icon"><a href="#阿里图标-icon" class="headerlink" title="阿里图标 icon"></a>阿里图标 icon</h1><div class="tip cogs"><p>本标签的图标需要自己额外引入阿里矢量图标库的样式，具体引入方案请移步：<a href="/posts/d2ebecef/">Hexo引入阿里矢量图标库</a></p></div><div class="tabs" id="icon示例"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#icon示例-1">标签语法</button></li><li class="tab"><button type="button" data-href="#icon示例-2">参数释义</button></li><li class="tab active"><button type="button" data-href="#icon示例-3">样式预览</button></li><li class="tab"><button type="button" data-href="#icon示例-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="icon示例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon示例-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="icon示例-3"><table><thead><tr><th align="left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg></th><th align="left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></th><th align="left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg></th><th align="left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></th><th align="left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg></th><th align="left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></th></tr></thead><tbody><tr><td align="left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg></td><td align="left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></td><td align="left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg></td><td align="left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></td><td align="left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg></td><td align="left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></td></tr><tr><td align="left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg></td><td align="left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></td><td align="left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg></td><td align="left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></td><td align="left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg></td><td align="left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></td></tr><tr><td align="left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg></td><td align="left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></td><td align="left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg></td><td align="left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></td><td align="left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg></td><td align="left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon示例-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="特效标签wow"><a href="#特效标签wow" class="headerlink" title="特效标签wow"></a>特效标签wow</h1><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>特效标签的静态资源未添加在本帖的配置内容中（因为多为cdn配置），请移步站内教程完成相关配置：</p><div class="tag link"><a class="link-card" title="使用wowjs给博客添加动画效果" href="/posts/abab51cf/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">使用wowjs给博客添加动画效果</p><p class="url">/posts/abab51cf/</p></div></a></div></div><div class="tabs" id="animate"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#animate-1">标签语法</button></li><li class="tab"><button type="button" data-href="#animate-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#animate-3">样式预览</button></li><li class="tab"><button type="button" data-href="#animate-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="animate-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="animate-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><div class="note warning simple"><p>注意，后面四个虽然是选填项，但是当有跨位选填时，次序不能乱。详见示例。<br>支持嵌套其他外挂标签。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="animate-3"><ol><li><code>flip</code>动画效果。<div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' >  <div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p><code>flip</code>动画效果。</p></div></div></li><li><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次。<div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' >  <div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div></li><li><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。<div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' >  <div class="note orange icon modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div></li><li><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' >  <div class="note red icon modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="animate-4"><ol><li><code>flip</code>动画效果。<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__flip %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note green &#x27;fas fa-fan&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`flip`动画效果。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次。<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。此处注意不用的参数位置要留空，用逗号间隔。<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h1><div class="note info morden simple"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="progress"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#progress-1">标签语法</button></li><li class="tab"><button type="button" data-href="#progress-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#progress-3">样式预览</button></li><li class="tab"><button type="button" data-href="#progress-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="progress-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="progress-2"><p><code>width</code>: 0到100的阿拉伯数字<br><code>color</code>: 颜色，取值有<span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span><br><code>text</code>:进度条上的文字内容</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="progress-3"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="progress-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习（七）</title>
      <link href="posts/e6da.html"/>
      <url>posts/e6da.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>今天也是学习Vue的一天💪</p><p>Vue-x</p></blockquote><h1 id="认识Vue-x"><a href="#认识Vue-x" class="headerlink" title="认识Vue-x"></a>认识Vue-x</h1><h2 id="Vuex是做什么的"><a href="#Vuex是做什么的" class="headerlink" title="Vuex是做什么的?"></a>Vuex是做什么的?</h2><p><strong>官方解释</strong>：Vuex 是一个专为 Vue.js 应用程序开发的<code>状态管理模式</code>。</p><p>它采用 <code>集中式存储管理</code> 应用的所有组件的状态，并以<code>相应的规则保证状态</code>以一种<code>可预测的方式发生变化</code>。</p><p>Vuex 也集成到 Vue 的官方调试工具 <code>devtools extension</code>，提供了诸如零配置的 time-travel 调试、<code>状态快照</code>导入导出等高级调试功能。</p><p><strong>状态管理到底是什么？</strong></p><p><strong>状态管理模式</strong>、<strong>集中式存储管理</strong>这些名词听起来就非常高大上，让人捉摸不透。</p><p>其实，你可以简单的将其看成把<code>需要多个组件共享的变量</code>全部存储在一个对象里面。</p><p>然后，将这个对象放在顶层的Vue实例中，让其他组件可以使用。</p><p>那么，多个组件是不是就可以共享这个对象中的所有变量属性了呢？</p><p><strong>等等，如果是这样的话，为什么官方还要专门出一个插件Vuex呢？难道我们不能自己封装一个对象来管理吗？</strong></p><p>当然可以，只是我们要先想想VueJS带给我们最大的便利是什么呢？没错，就是<code>响应式</code>。</p><p>如果你自己封装实现一个对象能不能保证它里面所有的属性做到响应式呢？当然也可以，只是自己封装可能稍微麻烦一些。</p><p>不用怀疑，Vuex就是为了提供这样一个在多个组件间共享状态的插件，用它就可以了。</p><h2 id="管理什么状态呢"><a href="#管理什么状态呢" class="headerlink" title="管理什么状态呢?"></a>管理什么状态呢?</h2><p><strong>但是，有什么状态时需要我们在多个组件间共享的呢？</strong></p><p>如果你做过大型开放，你一定遇到过多个状态，在多个界面间的共享问题。</p><p>比如用户的登录状态、用户名称、头像、地理位置信息等等。</p><p>比如商品的收藏、购物车中的物品等等。</p><p>这些状态信息，我们都可以放在统一的地方，对它进行保存和管理，而且它们还是<code>响应式</code>的（待会儿我们就可以看到代码了，莫着急）。</p><p>OK，从理论上理解了状态管理之后，让我们从实际的代码再来看看状态管理。</p><p>毕竟，Talk is cheap, Show me the code.(来自Linus)</p><p>我们先来看看但界面的状态管理吧.</p><h2 id="单界面的状态管理"><a href="#单界面的状态管理" class="headerlink" title="单界面的状态管理"></a>单界面的状态管理</h2><p>我们知道，要在单个组件中进行状态管理是一件非常简单的事情</p><p>什么意思呢？我们来看下面的图片。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508194432.png" alt="image-20210508194423923"></p><p><strong>这图片中的三种东西，怎么理解呢？</strong></p><p><code>State</code>：不用多说，就是我们的状态。（你姑且可以当做就是data中的属性）</p><p><code>View</code>：视图层，可以针对State的变化，显示不同的信息。（这个好理解吧？）</p><p><code>Actions</code>：这里的Actions主要是用户的各种操作：点击、输入等等，会导致状态的改变。</p><h2 id="单界面状态管理的实现"><a href="#单界面状态管理的实现" class="headerlink" title="单界面状态管理的实现"></a>单界面状态管理的实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">   &lt;template&gt;</span><br><span class="line">       &lt;div class&#x3D;&quot;test&quot;&gt;</span><br><span class="line">         &lt;div&gt;当前计数: &#123;&#123;counter&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">         &lt;button @click&#x3D;&quot;counter+&#x3D;1&quot;&gt;+1&lt;&#x2F;button&gt;</span><br><span class="line">         &lt;button @click&#x3D;&quot;counter-&#x3D;1&quot;&gt;-1&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;&#x2F;div&gt;</span><br><span class="line">   &lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">       export default &#123;</span><br><span class="line">           name: &#39;HelloWorld&#39;,</span><br><span class="line">           data() &#123;</span><br><span class="line">               return &#123;</span><br><span class="line">                   counter: 0</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>在这个案例中，我们有木有状态需要管理呢？没错，就是个数<code>counter</code>。</p><p>counter需要某种方式被记录下来，也就是我们的<code>State</code>。</p><p>counter目前的值需要被显示在界面中，也就是我们的<code>View部分</code>。</p><p>界面发生某些操作时（我们这里是用户的点击，也可以是用户的input），需要去更新状态，也就是我们的<code>Actions</code></p><p>这不就是上面的流程图了吗？</p><h2 id="多界面状态管理"><a href="#多界面状态管理" class="headerlink" title="多界面状态管理"></a>多界面状态管理</h2><p><strong>Vue已经帮我们做好了单个界面的状态管理，但是如果是多个界面呢？</strong></p><ul><li>多个视图都依赖同一个状态（一个状态改了，多个界面需要进行更新）</li><li>视图要修改，Profile.vue也需要修改这个状态）</li></ul><p><strong>也就是说对于某些状态(状态1/状态2/状态3)来说只属于我们某一个视图，但是也有一些状态(状态a/状态b/状态c)属于多个视图共同想要维护的</strong></p><ul><li>状态1/状态2/状态3你放在自己的房间中，你自己管理自己用，没问题。</li><li>但是状态a/状态b/状态c我们希望交给一个大管家来统一帮助我们管理！！！</li><li>没错，Vuex就是为我们提供这个大管家的工具。</li></ul><p><strong>全局单例模式（大管家）</strong></p><ul><li>我们现在要做的就是将共享的状态抽取出来，交给我们的大管家，统一进行管理。</li><li>之后，你们每个视图，按照我<code>规定好</code>的规定，进行访问和修改等操作。</li><li>这就是Vuex背后的基本思想。</li></ul><h2 id="Vuex状态管理图例"><a href="#Vuex状态管理图例" class="headerlink" title="Vuex状态管理图例"></a>Vuex状态管理图例</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508195444.png"></p><h2 id="Vue-x基本使用"><a href="#Vue-x基本使用" class="headerlink" title="Vue-x基本使用"></a>Vue-x基本使用</h2><p>我们还是实现一下之前简单的案例</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508195548.png"></p><p>首先，我们需要在某个地方存放我们的<strong>Vuex代码</strong>：</p><p>这里，我们先<code>创建一个文件夹store</code>，并且在其中创建一个index.js文件</p><p>在<code>index.js</code>文件中写入如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.安装插件</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="comment">// 2.创建对象</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    count: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">      <span class="function"><span class="title">increment</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">          state.count++</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="title">decrement</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">          state.count--</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.导出store独享</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><h2 id="使用Vuex的count"><a href="#使用Vuex的count" class="headerlink" title="使用Vuex的count"></a>使用Vuex的count</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">   &lt;template&gt;</span><br><span class="line">       &lt;div class&#x3D;&quot;test&quot;&gt;</span><br><span class="line">         &lt;div&gt;当前计数: &#123;&#123;counter&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">         &lt;button @click&#x3D;&quot;counter+&#x3D;1&quot;&gt;+1&lt;&#x2F;button&gt;</span><br><span class="line">         &lt;button @click&#x3D;&quot;counter-&#x3D;1&quot;&gt;-1&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;&#x2F;div&gt;</span><br><span class="line">   &lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">       export default &#123;</span><br><span class="line">           name: &#39;App&#39;,</span><br><span class="line">           components: &#123;  </span><br><span class="line">           &#125;,</span><br><span class="line">           comouted: &#123;</span><br><span class="line">               count: function() &#123;</span><br><span class="line">                   return this.$store.state.count</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;,</span><br><span class="line">           methods: &#123;</span><br><span class="line">               increment: function () &#123;</span><br><span class="line">                   this.$store.commit(&#39;increment&#39;)</span><br><span class="line">               &#125;,</span><br><span class="line">               decrement: function () &#123;</span><br><span class="line">                   this.$store.commit(&#39;decrement&#39;)</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>好的，这就是使用Vuex最简单的方式了。</p><p><strong>我们来对使用步骤，做一个简单的小节：</strong></p><ol><li>提取出一个公共的store对象，用于保存在多个组件中共享的状态</li><li>将store对象放置在new Vue对象中，这样可以保证在所有的组件中都可以使用到</li><li>在其他组件中使用store对象中保存的状态即可</li></ol><p>通过<code>this.$store.state</code>.属性的方式来<code>访问状态</code></p><p>通过<code>this.$store.commit(&#39;mutation中方法&#39;)</code>来<code>修改状态</code></p><p><strong><code>注意事项：</code></strong></p><p>我们通过提交<code>mutation</code>的方式，而非直接改变<code>store.state.count。</code></p><p>这是因为<code>Vuex</code>可以更明确的追踪状态的变化，所以<code>不要直接改变store.state.count的值</code>。</p><h2 id="Vuex核心概念"><a href="#Vuex核心概念" class="headerlink" title="Vuex核心概念"></a>Vuex核心概念</h2><blockquote><p>Vuex有几个比较核心的概念:</p><p>State</p><p>Getters</p><p>Mutation</p><p>Action</p><p>Module</p><p>我们对它进行一一介绍.</p></blockquote><h1 id="State单一状态树"><a href="#State单一状态树" class="headerlink" title="State单一状态树"></a>State单一状态树</h1><p>Vuex提出使用单一状态树, 什么是单一状态树呢？</p><ul><li>英文名称是Single Source of Truth，也可以翻译成单一数据源。</li></ul><p><strong>但是，它是什么呢？我们来看一个生活中的例子。</strong></p><ul><li>OK，我用一个生活中的例子做一个简单的类比。</li><li>我们知道，在国内我们有很多的信息需要被记录，比如上学时的个人档案，工作后的社保记录，公积金记录，结婚后的婚姻信息，以及其他相关的户口、医疗、文凭、房产记录等等（还有很多信息）。</li><li>这些信息被分散在很多地方进行管理，有一天你需要办某个业务时(比如入户某个城市)，你会发现你需要到各个对应的工作地点去打印、盖章各种资料信息，最后到一个地方提交证明你的信息无误。</li><li>这种保存信息的方案，不仅仅低效，而且不方便管理，以及日后的维护也是一个庞大的工作(需要大量的各个部门的人力来维护，当然国家目前已经在完善我们的这个系统了)。</li></ul><p><strong>这个和我们在应用开发中比较类似：</strong></p><ul><li>如果你的状态信息是保存到多个Store对象中的，那么之后的管理和维护等等都会变得特别困难。</li><li>所以Vuex也使用了单一状态树来管理应用层级的全部状态。</li><li>单一状态树能够让我们最直接的方式找到某个状态的片段，而且在之后的维护和调试过程中，也可以非常方便的管理和维护。</li></ul><h1 id="Getters"><a href="#Getters" class="headerlink" title="Getters"></a>Getters</h1><h2 id="Getters基本使用"><a href="#Getters基本使用" class="headerlink" title="Getters基本使用"></a>Getters基本使用</h2><p>有时候，我们需要从store中获取一些<code>state变异后</code>的状态，比如下面的Store中：</p><p>获取学生年龄大于20的个数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.store(&#123;</span><br><span class="line">    stute: &#123;</span><br><span class="line">        students: [</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">110</span>, <span class="attr">name</span>: <span class="string">&#x27;violet&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">111</span>, <span class="attr">name</span>: <span class="string">&#x27;kobe&#x27;</span>, <span class="attr">age</span>: <span class="number">21</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">112</span>, <span class="attr">name</span>: <span class="string">&#x27;lucy&#x27;</span>, <span class="attr">age</span>: <span class="number">25</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">113</span>, <span class="attr">name</span>: <span class="string">&#x27;lilei&#x27;</span>, <span class="attr">age</span>: <span class="number">30</span>&#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>我们可以在Store中定义getters</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    <span class="function"><span class="title">getGreaterAgesCount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.$store.state.students.filter(<span class="function"><span class="params">age</span> =&gt;</span> age &gt;= <span class="number">20</span>).length</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">    </span><br><span class="line">gentters: &#123;</span><br><span class="line">greaterAgsCount: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> state.students.filter(<span class="function"><span class="params">s</span> =&gt;</span> s.age &gt;= <span class="number">20</span>).length</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Getters作为参数和传递参数"><a href="#Getters作为参数和传递参数" class="headerlink" title="Getters作为参数和传递参数"></a>Getters作为参数和传递参数</h2><p><strong>如果我们已经有了一个获取所有年龄大于20岁学生列表的getters, 那么代码可以这样来写</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gentters: &#123;</span><br><span class="line">greaterAgesStus: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> state.students.filter(<span class="function"><span class="params">s</span> =&gt;</span> s.age &gt;= <span class="number">20</span>).length</span><br><span class="line">    &#125;</span><br><span class="line">    greaterAgesCount: <span class="function">(<span class="params">state, getters</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getters.greaterAgesStus.length</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>getters默认是不能传递参数的, 如果希望传递参数, 那么只能让getters本身返回另一个函数.</strong></p><p>比如上面的案例中,我们希望根据ID获取用户的信息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gentters: &#123;</span><br><span class="line">stuByID: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="params">id</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> state.students.find(<span class="function"><span class="params">s</span> =&gt;</span> s.id === id)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Mutation"><a href="#Mutation" class="headerlink" title="Mutation"></a>Mutation</h1><h2 id="Mutation状态更新"><a href="#Mutation状态更新" class="headerlink" title="Mutation状态更新"></a>Mutation状态更新</h2><p>Vuex的store状态的更新唯一方式：<strong>提交Mutation</strong></p><p>Mutation主要包括两部分：</p><p>字符串的<strong>事件类型（type）</strong></p><p><strong>一个回调函数（handler）</strong>,该回调函数的第一个参数就是<code>state</code>。</p><p>mutation的定义方式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mutations: &#123;</span><br><span class="line">    <span class="function"><span class="title">increment</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">        state.count++</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过mutation更新</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">increment: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.$store.commit(<span class="string">&#x27;increment&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mutation传递参数"><a href="#Mutation传递参数" class="headerlink" title="Mutation传递参数"></a>Mutation传递参数</h2><p>在通过mutation更新数据的时候, 有可能我们希望携带一些<code>额外的参数</code></p><p>参数被称为是mutation的<code>载荷(Payload)</code></p><p>Mutation中的代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">decrement</span>(<span class="params">state, n</span>)</span> &#123;</span><br><span class="line">    state.count -= n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">decrement: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.$store.commit(<span class="string">&#x27;decrement&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>但是如果参数不是一个呢?</strong></p><p>比如我们有很多参数需要传递.</p><p>这个时候, 我们通常会以<code>对象</code>的形式传递, 也就是payload是一个对象.</p><p>这个时候可以再从对象中取出相关的信息.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">changeCount</span>(<span class="params">state, payload</span>)</span> &#123;</span><br><span class="line">    state.count = payload.count</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">changeCount: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.$store.commot(<span class="string">&#x27;changeCount&#x27;</span>, &#123;<span class="attr">count</span>: <span class="number">0</span>&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mutation提交风格"><a href="#Mutation提交风格" class="headerlink" title="Mutation提交风格"></a>Mutation提交风格</h2><p>上面的通过<code>commit</code>进行提交是一种普通的方式</p><p>Vue还提供了另外一种风格, 它是一个包含type属性的对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$store.commit(&#123;</span><br><span class="line">    type: <span class="string">&#x27;chageCount&#x27;</span>,</span><br><span class="line">    count: <span class="number">100</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Mutation中的处理方式是将整个commit的对象作为payload使用, 所以代码没有改变, 依然如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">changeCount</span>(<span class="params">state, payload</span>)</span> &#123;</span><br><span class="line">    state.count = payload.count</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mutation响应规则"><a href="#Mutation响应规则" class="headerlink" title="Mutation响应规则"></a>Mutation响应规则</h2><p><strong>Vuex的store中的state是响应式的, 当state中的数据发生改变时, Vue组件会自动更新.</strong></p><p><strong>这就要求我们必须遵守一些Vuex对应的规则:</strong></p><p>提前在store中<code>初始化</code>好所需的属性.</p><p>当给state中的对象添加新属性时, 使用下面的方式:</p><ul><li>方式一: 使用Vue.set(obj, ‘newProp’, 123)</li><li>方式二: 用心对象给旧对象重新赋值</li></ul><p><strong>我们来看一个例子:</strong></p><p>当我们点击更新信息时, 界面并没有发生对应改变.</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509113100.png" alt="image-20210509113048513"></p><p><strong>如何才能让它改变呢?</strong></p><p>查看下面代码的方式一和方式二</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509113113.png" alt="image-20210509113111283"></p><p>都可以让state中的属性是响应式的.</p><h2 id="Mutation常量类型-–-概念"><a href="#Mutation常量类型-–-概念" class="headerlink" title="Mutation常量类型 – 概念"></a>Mutation常量类型 – 概念</h2><p><strong>我们来考虑下面的问题:</strong></p><ul><li>在mutation中, 我们定义了很多事件类型(也就是其中的方法名称).</li><li>当我们的项目增大时, Vuex管理的状态越来越多, 需要更新状态的情况越来越多, 那么意味着Mutation中的方法越来越多.</li><li>方法过多, 使用者需要花费大量的经历去记住这些方法, 甚至是多个文件间来回切换, 查看方法名称, 甚至如果不是复制的时候, 可能还会出现写错的情况.</li></ul><p><strong>如何避免上述的问题呢?</strong></p><ul><li>在各种Flux实现中, 一种很常见的方案就是使用<code>常量</code>替代Mutation<code>事件的类型.</code></li><li>我们可以将这些常量放在一个单独的文件中, 方便管理以及让整个app所有的事件类型一目了然.</li></ul><p><strong>具体怎么做呢?</strong></p><ul><li>我们可以创建一个文件: mutation-types.js, 并且在其中定义我们的常量.</li><li>定义常量时, 我们可以使用ES2015中的风格, 使用一个常量来作为函数的名称.</li></ul><h2 id="Mutation常量类型-–-代码"><a href="#Mutation常量类型-–-代码" class="headerlink" title="Mutation常量类型 – 代码"></a>Mutation常量类型 – 代码</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509113351.png" alt="image-20210509113349803"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509113401.png" alt="image-20210509113400116"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509113407.png" alt="image-20210509113406317"></p><h2 id="Mutation同步函数"><a href="#Mutation同步函数" class="headerlink" title="Mutation同步函数"></a>Mutation同步函数</h2><p><strong>通常情况下, Vuex要求我们Mutation中的方法必须是同步方法.</strong></p><ul><li>主要的原因是当我们使用devtools时, 可以devtools可以帮助我们捕捉mutation的快照.</li><li>但是如果是异步操作, 那么devtools将不能很好的追踪这个操作什么时候会被完成.</li></ul><p>**比如我们之前的代码, 当执行更新时, devtools中会有如下信息: **</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509113613.png" alt="image-20210509113510461"></p><p>**但是, 如果Vuex中的代码, 我们使用了异步函数: **</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509113623.png"></p><p>你会发现state中的info数据一直没有被改变, 因为他无法追踪到.</p><p><strong>So, 通常情况下, 不要再mutation中进行异步的操作</strong></p><h1 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h1><h2 id="Action的基本定义"><a href="#Action的基本定义" class="headerlink" title="Action的基本定义"></a>Action的基本定义</h2><p><strong>我们强调, 不要在Mutation中进行异步操作.</strong></p><ul><li>但是某些情况, 我们确实希望在Vuex中进行一些异步操作, 比如网络请求, 必然是异步的. 这个时候怎么处理呢?</li><li>Action类似于Mutation, 但是是用来代替Mutation进行异步操作的.</li></ul><p><strong>Action的基本使用代码如下:</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509113849.png" alt="image-20210509113847758"></p><p><strong>context是什么?</strong></p><ul><li>context是和store对象具有相同方法和属性的对象.</li><li>也就是说, 我们可以通过context去进行commit相关的操作, 也可以获取context.state等.</li><li>但是注意, 这里它们并不是同一个对象, 为什么呢? 我们后面学习Modules的时候, 再具体说.</li></ul><p><strong>这样的代码是否多此一举呢?</strong></p><ul><li>我们定义了actions, 然后又在actions中去进行commit, 这不是脱裤放屁吗?</li><li>事实上并不是这样, 如果在Vuex中有异步操作, 那么我们就可以在actions中完成了.</li></ul><h2 id="Action的分发"><a href="#Action的分发" class="headerlink" title="Action的分发"></a>Action的分发</h2><p>在Vue组件中, 如果我们调用action中的方法, 那么就需要使用dispatch</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    <span class="function"><span class="title">increment</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;increment&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的, 也是支持传递payload</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509114016.png" alt="image-20210509114014802"></p><p>前面我们学习ES6语法的时候说过, <code>Promise经常用于异步操作.</code></p><p>在Action中, 我们可以将异步操作放在一个Promise中, 并且在成功或者失败后, 调用对应的<code>resolve</code>或<code>reject</code>.</p><p>OK, 我们来看下面的代码:</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509114131.png" alt="image-20210509114129968"></p><h1 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h1><h2 id="认识Module"><a href="#认识Module" class="headerlink" title="认识Module"></a>认识Module</h2><p><strong>Module是模块的意思, 为什么在Vuex中我们要使用模块呢?</strong></p><ul><li>Vue使用单一状态树,那么也意味着很多状态都会交给Vuex来管理.</li><li>当应用变得非常复杂时,store对象就有可能变得相当臃肿.</li><li>为了解决这个问题, Vuex允许我们将store分割成模块(Module), 而每个模块拥有自己的state、mutations、actions、getters等</li></ul><p><strong>我们按照什么样的方式来组织模块呢?</strong> </p><p>我们来看下边的代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> moduleA = &#123;</span><br><span class="line">    state: &#123; ... &#125;,</span><br><span class="line">    mutations: &#123; ... &#125;,</span><br><span class="line">    actions: &#123; ... &#125;,</span><br><span class="line">    getters: &#123; ... &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> moduleB = &#123;</span><br><span class="line">    state: &#123; ... &#125;,</span><br><span class="line">    mutations: &#123; ... &#125;,</span><br><span class="line">    actions: &#123; ... &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    modules: &#123;</span><br><span class="line">        a: moduleA,</span><br><span class="line">        b: moduleB</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">store.state.a <span class="comment">// -&gt; moduleA 的状态</span></span><br><span class="line">store.state.b <span class="comment">// -&gt; moduleB 的状态</span></span><br></pre></td></tr></table></figure><h2 id="Module局部状态"><a href="#Module局部状态" class="headerlink" title="Module局部状态"></a>Module局部状态</h2><p>上面的代码中, 我们已经有了整体的组织结构, 下面我们来看看具体的局部模块中的代码如何书写.</p><p>我们在moduleA中添加state、mutations、getters</p><p>mutation和getters接收的第一个参数是局部状态对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> moduleA = &#123;</span><br><span class="line">    state: &#123; </span><br><span class="line">        count: <span class="number">0</span> </span><br><span class="line">    &#125;,</span><br><span class="line">    mutations: &#123;</span><br><span class="line">        <span class="function"><span class="title">increment</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">            state.count++</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;,</span><br><span class="line">    getters: &#123; </span><br><span class="line">    <span class="function"><span class="title">doubleCount</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> state.count * <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> moduleB = &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    state: &#123;</span><br><span class="line">        gCount: <span class="number">111</span></span><br><span class="line">    &#125;,</span><br><span class="line">    modules: &#123;</span><br><span class="line">        a: moduleA,</span><br><span class="line">        b: moduleB</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scriopt</span>&gt;</span></span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    components: &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">    count() &#123;</span><br><span class="line">    return this.$store.getters.doubleCount</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">    increment() &#123;</span><br><span class="line">this,$store.commit(&#x27;increment&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">scriopt</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意:</strong></p><p>虽然, 我们的<code>doubleCount</code>和<code>increment</code>都是定义在对象内部的.</p><p>但是在调用的时候, 依然是通过<code>this.$store</code>来直接调用的.</p><h2 id="Actions的写法"><a href="#Actions的写法" class="headerlink" title="Actions的写法"></a>Actions的写法</h2><p><strong>actions的写法呢? 接收一个context参数对象</strong></p><p>局部状态通过 <code>context.state</code>暴露出来，根节点状态则为 <code>context.rootState</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> moduleA = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    actions: &#123;</span><br><span class="line">        incrementIfOddOnRootSum (&#123; state, commit, rootState &#125;) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((state.count + rootState.count) % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">                commit(<span class="string">&#x27;increment&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>如果getters中也需要使用全局的状态, 可以接受更多的参数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> moduleA = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    getters: &#123;</span><br><span class="line">        sumWithRootCount (state, getters, rootState) &#123;</span><br><span class="line">            <span class="keyword">return</span> state.count + rootState.count</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p><strong>当我们的Vuex帮助我们管理过多的内容时, 好的项目结构可以让我们的代码更加清晰.</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210509120034.png" alt="image-20210509120032917"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习（六）</title>
      <link href="posts/pogf.html"/>
      <url>posts/pogf.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>今天就来学习看看Promise</p></blockquote><h1 id="什么是Promise呢？"><a href="#什么是Promise呢？" class="headerlink" title="什么是Promise呢？"></a>什么是Promise呢？</h1><p>ES6中一个非常重要和好用的特性就是Promise</p><p>但是初次接触Promise会一脸懵逼，这TM是什么东西？</p><p>看看官方或者一些文章对它的介绍和用法，也是<code>一头雾水</code>。</p><p><strong>Promise到底是做什么的呢？</strong></p><p>Promise是异步编程的一种解决方案。</p><p><strong>那什么时候我们会来处理异步事件呢？</strong></p><p>一种很常见的场景应该就是网络请求了。</p><p>我们封装一个网络请求的函数，因为不能立即拿到结果，所以不能像简单的3+4=7一样将结果返回。</p><p>所以往往我们会传入另外一个函数，在数据请求成功时，将数据通过传入的函数回调出去。</p><p>如果只是一个简单的网络请求，那么这种方案不会给我们带来很大的麻烦。</p><p><strong>但是，当网络请求非常复杂时，就会出现回调地狱。</strong></p><p>OK，我以一个非常夸张的案例来说明。</p><h1 id="网络请求的回调地狱"><a href="#网络请求的回调地狱" class="headerlink" title="网络请求的回调地狱"></a>网络请求的回调地狱</h1><p>我们来考虑下面的场景(有夸张的成分)：</p><ul><li>我们需要通过一个url1从服务器加载一个数据data1，data1中包含了下一个请求的url2</li><li>我们需要通过data1取出url2，从服务器加载数据data2，data2中包含了下一个请求的url3</li><li>我们需要通过data2取出url3，从服务器加载数据data3，data3中包含了下一个请求的url4</li><li>发送网络请求url4，获取最终的数据data4</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(<span class="string">&#x27;url1&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data1</span>) </span>&#123;</span><br><span class="line">$.ajax(data1[<span class="string">&#x27;url2&#x27;</span>], <span class="function"><span class="keyword">function</span> (<span class="params">data2</span>) </span>&#123;</span><br><span class="line">    $ajax(data2[<span class="string">&#x27;url3&#x27;</span>], <span class="function"><span class="keyword">function</span>(<span class="params">data3</span>) </span>&#123;</span><br><span class="line">            $ajax(data3[<span class="string">&#x27;url4&#x27;</span>], <span class="function"><span class="keyword">function</span>(<span class="params">data4</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(data4);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;)       </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>上面的代码有什么问题吗？</strong></p><ul><li>正常情况下，不会有什么问题，可以正常运行并且获取我们想要的结果。</li><li>但是，这样额代码难看而且不容易维护。</li><li>我们更加期望的是一种更加优雅的方式来进行这种异步操作。</li></ul><p>如何做呢？就是使用<code>Promise</code>。</p><ul><li><code>Promise</code>可以以一种非常优雅的方式来解决这个问题。</li></ul><h1 id="Promise基本使用"><a href="#Promise基本使用" class="headerlink" title="Promise基本使用"></a>Promise基本使用</h1><p><strong>我们先来看看Promise最基本的语法。</strong></p><p>这里，我们用一个定时器来模拟异步事件：</p><ul><li>假设下面的data是从网络上1秒后请求的数据</li><li>console.log就是我们的处理方式。</li></ul><p>这是我们过去的处理方式，我们将它换成Promise代码</p><p>这个例子会让我们感觉脱裤放屁，多此一举</p><ul><li>首先，下面的Promise代码明显比上面的代码看起来还要复杂。</li><li>其次，下面的Promise代码中包含的<code>resolve</code>、<code>reject</code>、<code>then</code>、<code>catch</code>都是些什么东西？</li></ul><p>我们先不管第一个复杂度的问题，因为这样的一个屁大点的程序根本看不出来Promise真正的作用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> data = <span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line">    <span class="built_in">console</span>.log(content);</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        resolve(<span class="string">&#x27;Hello World&#x27;</span>)</span><br><span class="line">        reject(<span class="string">&#x27;Error Data&#x27;</span>)</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="定时器异步事件解析"><a href="#定时器异步事件解析" class="headerlink" title="定时器异步事件解析"></a>定时器异步事件解析</h1><p>我们先来认认真真的读一读上面这个程序到底做了什么？</p><ul><li><p>new Promise很明显是创建一个<code>Promise对象</code></p></li><li><p>小括号中((resolve, reject) =&gt; {})也很明显就是一个函数，而且我们这里用的是之前刚刚学习过的箭头函数。</p><p>但是resolve, reject它们是什么呢？</p><p>我们先知道一个事实：在创建Promise时，<code>传入的这个箭头函数是固定的</code>（一般我们都会这样写）</p><p>resolve和reject它们两个也是函数，通常情况下，我们会根据<code>请求数据的成功和失败</code>来决定调用哪一个。</p></li><li><p>成功还是失败？<br>如果是成功的，那么通常我们会调用<code>resolve(messsage)</code>，这个时候，我们后续的<code>then</code>会被回调。<br>如果是失败的，那么通常我们会调用<code>reject(error)</code>，这个时候，我们后续的<code>catch</code>会被回调。 </p></li></ul><p>OK，这就是Promise最基本的使用了。</p><h1 id="Promise三种状态"><a href="#Promise三种状态" class="headerlink" title="Promise三种状态"></a>Promise三种状态</h1><p>首先, 当我们开发中有异步操作时, 就可以给<code>异步操作包装一个Promise</code></p><p>异步操作之后会有三种状态</p><p>我们一起来看一下这三种状态:</p><p><code>pending</code>：<strong>等待状态</strong>，比如正在进行网络请求，或者定时器没有到时间。</p><p><code>fulfill</code>：<strong>满足状态</strong>，当我们主动回调了resolve时，就处于该状态，并且会回调.then()</p><p><code>reject</code>：<strong>拒绝状态</strong>，当我们主动回调了reject时，就处于该状态，并且会回调.catch()</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210506154737.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// resolve(&#x27;Hello World&#x27;)</span></span><br><span class="line">        reject(<span class="string">&#x27;Error Data&#x27;</span>)</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="Promise链式调用"><a href="#Promise链式调用" class="headerlink" title="Promise链式调用"></a>Promise链式调用</h1><p>我们在看Promise的流程图时，发现无论是then还是catch都可以返回一个Promise对象。</p><p>所以，我们的代码其实是可以进行链式调用的：</p><p>这里我们直接通过Promise包装了一下新的数据，将Promise对象返回了</p><p><code>Promise.resovle()</code>：将数据包装成Promise对象，并且在内部回调resolve()函数</p><p><code>Promise.reject()</code>：将数据包装成Promise对象，并且在内部回调reject()函数</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210506160209.png"></p><h1 id="链式调用简写"><a href="#链式调用简写" class="headerlink" title="链式调用简写"></a>链式调用简写</h1><p><strong>简化版代码：</strong></p><p>如果我们希望数据直接包装成Promise.resolve，那么在then中可以直接返回数据</p><p>注意下面的代码中，我讲return Promise.resovle(data)改成了return data</p><p>结果依然是一样的</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210506160259.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五一，武汉行</title>
      <link href="posts/7e87.html"/>
      <url>posts/7e87.html</url>
      
        <content type="html"><![CDATA[<span class='p center logo large'>武汉行</span><span class='p center small'>一场说走就走的旅行✌️</span><p>趁着这次五一长假📷，去武汉好好的玩一玩<del>武功山人太多了</del>，武汉我们来啦~</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505165505.JPG"></p><p>下午15点坐上火车，晚上20点就到了武昌站</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505165445.JPG"></p><p>一路上遇到了很多人很多事，火车真的是一个大杂烩，什么人都有，比如某不抽烟就是不信毛爷爷女子，抽烟抽了10多年了从没人管过之类，但也有人很好的叔叔，也有给我们让座了的好人，4个人的旅途总之很愉快🧊~</p><p>下了车站后，我们找到酒店放下行李，休息了一会儿后就立马前往<strong>楚河汉街</strong>。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505170816.jpg"></p><p>吃了一顿不是那么好吃的烧烤和炒饭河粉（可能武汉人民的烧烤不符合我们湖南人吧hhh），逛完楚河汉街和光谷步行街已经到了晚上12点，打车回酒店就直接睡了。第一天的行程就结束了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505171024.JPG"></p><p><strong>第二天</strong></p><p>第二天我们早早的起床，早早的化妆，终于在9点半出发hhh，10点左右赶到粮道街，令我们没想到的是，武汉鱿鱼老板任性的在10点左右开门，柒个蛋烘糕也在10点半开门，所以我们几乎没排什么队的就把所有小吃🍰吃了个遍<del>除了武汉热干面</del>，也多亏了没吃热干面🥘，不然就吃不下这么多好吃的了，柒个蛋烘糕🌮针不戳，就是老板任性，有钱我不赚，哎<del>，就是玩儿</del>hhh。</p><p><strong>爆汁生煎</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505172324.JPG"></p><p><strong>马丁豆豆</strong>（牛蛙肉）</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505172443.JPG"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505173007.JPG" alt="9"></p><p><strong>鱿鱼</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505172621.jpg" alt="1"></p><p><strong>无骨煸鸡</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505172723.jpg"></p><p><strong>蛋卷</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505172909.JPG"></p><p><strong>茶百道</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505172948.JPG" alt="11"></p><p><strong>豆皮烧麦</strong><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505173025.JPG" alt="10"></p><p><img src= "/img/loading.gif" data-lazy-src="image/20210505181057.jpg"></p><p>中午的时候咱们走路去了黄鹤楼，本来想常常黄鹤楼雪糕🍦，结果没找到地方就没买了，在黄鹤楼外的小公园里面拍了很多照片，远远的拍了一张黄鹤楼的照片<del>就当我来过了</del></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505173334.JPG"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505183730.jpg"></p><p>接下来就是到处走，到处看，去了<code>昙华林</code>体验了一下“欧式建筑”，到处转了转，感受了当地的风土民情🍧。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505183456.JPG" alt="8"></p><p>下午下起了雨<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505173745.PNG" alt="33"></p><p>迫于无奈去看了一场电影《你的婚礼》🙏，怎么样我就不说了，4人集体yue，直接跑路。</p><p>看完电影还想去玩，但是雨还没停，想着4点多了，小明大排档也快开门了，结果因为下雨🌨️，我们走路过去晚到了10分钟，在我们前面排队的就有70桌，而小明大排档上下两层楼只有20桌，然后我们果断的等了半个小时后放弃直接去了一家刚开业的小龙虾大排档。</p><p>吃完饭，雨🌨️还是没有停的意思，但是我们决定一定要坐渡轮，因为明天就回去了，所以我们走路去了坐渡轮的地方，别问我们为什么不打滴滴去，<del>才不是因为打不到车，打车更久</del> 走路过去的结果就是我们的jio都成了泡椒凤爪💧</p><p>但是看到了渡轮⛵上的风景，也挺好看的，桥上的灯也正好在我们那一趟船开灯了</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505175332.jpg"></p><div class="videos" col='2'><div class="video"><video controls preload><source src='https://cdn.jsdelivr.net/gh/waterchen520/vuecdn/1.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://cdn.jsdelivr.net/gh/waterchen520/vuecdn/2.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div><p>回到民宿，我们看了🎉《羞羞的铁拳》，简直比某婚礼好看不知道多少倍</p><p>第三天，起床我们就去了吃了小川料理✨，简直超好吃，可惜吃不动了，某人还去面基了~</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210505180450.JPG" alt="15"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/vuecdn2@master/img/20210505181215.JPG"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505182215.JPG" alt="29"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505182643.JPG"></p><p>吃了大餐后，我们去了武汉博物馆🔔，武汉美术馆，梨园，海底世界等，以上所有地点都由于一系列原因只在门口进行了拍照留念<del>哈哈哈</del></p><p>最后我们在东湖玩了一下午，东湖之大，几个西湖装不下</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505184158.jpg"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505183829.jpg"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505184459.jpg"></p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505184413.jpg" style="height:500px;" /><br>![](https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505184322.JPG)<p>最后这趟愉快的武汉之行就结束啦~<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210505184651.JPG"></p><p>这是一场说走就走的旅行⚽，以后也会在我们记忆的深处埋藏</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习（五）</title>
      <link href="posts/92a6.html"/>
      <url>posts/92a6.html</url>
      
        <content type="html"><![CDATA[<h1 id="vue-router详解"><a href="#vue-router详解" class="headerlink" title="vue-router详解"></a>vue-router详解</h1><blockquote><p>内容概述</p><ul><li>认识路由</li><li>vue-router基本使用</li><li>vue-router嵌套路由</li><li>vue-router参数传递</li><li>vue-router导航守卫</li><li>keep-alive</li></ul></blockquote><h1 id="认识路由"><a href="#认识路由" class="headerlink" title="认识路由"></a>认识路由</h1><h2 id="什么是路由？"><a href="#什么是路由？" class="headerlink" title="什么是路由？"></a>什么是路由？</h2><p>说起路由你想起了什么？</p><p>路由是一个网络工程里面的术语。</p><p>路由（routing）就是通过互联的网络把信息从源地址传输到目的地址的活动. — 维基百科</p><p>额, 啥玩意? 没听懂</p><p>在生活中, 我们有没有听说过路由的概念呢? 当然了, 路由器嘛.</p><p>路由器是做什么的? 你有想过吗?</p><p>路由器提供了两种机制: 路由和转送.</p><p>路由是决定数据包从来源到目的地的路径.</p><p>转送将输入端的数据转移到合适的输出端.</p><p>路由中有一个非常重要的概念叫路由表.</p><p>路由表本质上就是一个映射表, 决定了数据包的指向.</p><h2 id="后端路由阶段"><a href="#后端路由阶段" class="headerlink" title="后端路由阶段"></a>后端路由阶段</h2><p>早期的网站开发整个HTML页面是由服务器来渲染的.</p><ul><li>服务器直接生产渲染好对应的HTML页面, 返回给客户端进行展示.</li></ul><p>但是, 一个网站, 这么多页面服务器如何处理呢?</p><ul><li>一个页面有自己对应的网址, 也就是URL.</li><li>URL会发送到服务器, 服务器会通过正则对该URL进行匹配, 并且最后交给一个Controller进行处理.</li><li>Controller进行各种处理, 最终生成HTML或者数据, 返回给前端.</li><li>这就完成了一个IO操作.</li></ul><p>上面的这种操作, 就是后端路由.</p><ul><li>当我们页面中需要请求不同的路径内容时, 交给服务器来进行处理, 服务器渲染好整个页面, 并且将页面返回给客户顿.</li><li>这种情况下渲染好的页面, 不需要单独加载任何的js和css, 可以直接交给浏览器展示, 这样也有利于SEO的优化.</li></ul><p>后端路由的缺点:</p><ul><li>一种情况是整个页面的模块由后端人员来编写和维护的.</li><li>另一种情况是前端开发人员如果要开发页面, 需要通过PHP和Java等语言来编写页面代码.</li><li>而且通常情况下HTML代码和数据以及对应的逻辑会混在一起, 编写和维护都是非常糟糕的事情.</li></ul><h2 id="前端路由阶段"><a href="#前端路由阶段" class="headerlink" title="前端路由阶段"></a>前端路由阶段</h2><p><strong>前后端分离阶段：</strong></p><ul><li>随着Ajax的出现, 有了前后端分离的开发模式.</li><li>后端只提供API来返回数据, 前端通过Ajax获取数据, 并且可以通过JavaScript将数据渲染到页面中.</li><li>这样做最大的优点就是前后端责任的清晰, 后端专注于数据上, 前端专注于交互和可视化上.</li><li>并且当移动端(iOS/Android)出现后, 后端不需要进行任何处理, 依然使用之前的一套API即可.</li><li>目前很多的网站依然采用这种模式开发.</li></ul><p><strong>单页面富应用阶段:</strong></p><ul><li>其实SPA最主要的特点就是在前后端分离的基础上加了一层前端路由.</li><li>也就是前端来维护一套路由规则.</li></ul><p><strong>前端路由的核心是什么呢？</strong></p><ul><li>改变URL，但是页面不进行整体的刷新。</li><li>如何实现呢？</li></ul><h1 id="前端路由的规则"><a href="#前端路由的规则" class="headerlink" title="前端路由的规则"></a>前端路由的规则</h1><h2 id="URL的hash"><a href="#URL的hash" class="headerlink" title="URL的hash"></a>URL的hash</h2><p><strong>URL的hash</strong></p><ul><li><p>URL的hash也就是锚点(#), 本质上是改变window.location的href属性.</p></li><li><p>我们可以通过直接赋值location.hash来改变href, 但是页面不发生刷新</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502083931.png"></p></li></ul><h2 id="HTML5的history模式：pushState"><a href="#HTML5的history模式：pushState" class="headerlink" title="HTML5的history模式：pushState"></a>HTML5的history模式：pushState</h2><p>history接口是HTML5新增的, 它有五种模式改变URL而不刷新页面.</p><p><strong>history.pushState()</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502085559.png"></p><h2 id="HTML5的history模式：replaceState"><a href="#HTML5的history模式：replaceState" class="headerlink" title="HTML5的history模式：replaceState"></a>HTML5的history模式：replaceState</h2><p><strong>history.replaceState()</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502085544.png"></p><h2 id="HTML5的history模式：go"><a href="#HTML5的history模式：go" class="headerlink" title="HTML5的history模式：go"></a>HTML5的history模式：go</h2><p><strong>history.go()</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502085712.png"></p><p><strong>补充说明：</strong></p><ul><li>上面只演示了三个方法</li><li>因为 history.back() 等价于 history.go(-1)</li><li>history.forward() 则等价于 history.go(1)</li><li>这三个接口等同于浏览器界面的前进后退。</li></ul><h1 id="认识vue-router"><a href="#认识vue-router" class="headerlink" title="认识vue-router"></a>认识vue-router</h1><p><strong>目前前端流行的三大框架, 都有自己的路由实现:</strong></p><ul><li>Angular的ngRouter</li><li>React的ReactRouter</li><li>Vue的vue-router</li></ul><p><strong>当然, 我们的重点是vue-router</strong></p><ul><li>vue-router是Vue.js官方的路由插件，它和vue.js是深度集成的，适合用于构建单页面应用。</li><li>我们可以访问其官方网站对其进行学习: <a href="https://router.vuejs.org/zh/">https://router.vuejs.org/zh/</a></li></ul><p><strong>vue-router是基于路由和组件的</strong></p><ul><li>路由用于设定访问路径, 将路径和组件映射起来.</li><li>在vue-router的单页面应用中, 页面的路径的改变就是组件的切换.</li></ul><h2 id="安装和使用vue-router"><a href="#安装和使用vue-router" class="headerlink" title="安装和使用vue-router"></a>安装和使用vue-router</h2><p>因为我们已经学习了webpack, 后续开发中我们主要是通过工程化的方式进行开发的.</p><p>所以在后续, 我们直接使用npm来安装路由即可.</p><ul><li><p>步骤一: 安装vue-router</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router --save</span><br></pre></td></tr></table></figure></li><li><p>步骤二: 在模块化工程中使用它(因为是一个插件, 所以可以通过Vue.use()来安装路由功能)</p><ul><li>第一步：导入路由对象，并且调用 Vue.use(VueRouter)</li><li>第二步：创建路由实例，并且传入路由映射配置</li><li>第三步：在Vue实例中挂载创建的路由实例</li></ul></li></ul><p>使用vue-router的步骤:</p><ul><li>第一步: 创建路由组件</li><li>第二步: 配置路由映射: 组件和路径映射关系</li><li>第三步: 使用路由: 通过&lt;router-link&gt;和&lt;router-view&gt;</li></ul><h3 id="创建router实例"><a href="#创建router实例" class="headerlink" title="创建router实例"></a>创建router实例</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502090151.png"></p><h3 id="挂载到Vue实例中"><a href="#挂载到Vue实例中" class="headerlink" title="挂载到Vue实例中"></a>挂载到Vue实例中</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502090217.png"></p><h3 id="步骤一：创建路由组件"><a href="#步骤一：创建路由组件" class="headerlink" title="步骤一：创建路由组件"></a>步骤一：创建路由组件</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502090239.png"></p><h3 id="步骤二：配置组件和路径的映射关系"><a href="#步骤二：配置组件和路径的映射关系" class="headerlink" title="步骤二：配置组件和路径的映射关系"></a>步骤二：配置组件和路径的映射关系</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502090307.png"></p><h3 id="步骤三：使用路由"><a href="#步骤三：使用路由" class="headerlink" title="步骤三：使用路由."></a>步骤三：使用路由.</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502090333.png"></p><p>&lt;router-link&gt;: 该标签是一个vue-router中已经内置的组件, 它会被渲染成一个&lt;a&gt;标签.</p><p>&lt;router-view&gt;: 该标签会根据当前的路径, 动态渲染出不同的组件.</p><p>网页的其他内容, 比如顶部的标题/导航, 或者底部的一些版权信息等会和&lt;router-view&gt;处于同一个等级.</p><p>在路由切换时, 切换的是&lt;router-view&gt;挂载的组件, 其他内容不会发生改变.</p><h3 id="最终效果如下"><a href="#最终效果如下" class="headerlink" title="最终效果如下"></a><strong>最终效果如下</strong></h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502090426.png"></p><h2 id="路由的默认路径"><a href="#路由的默认路径" class="headerlink" title="路由的默认路径"></a>路由的默认路径</h2><p>我们这里还有一个不太好的实现:</p><ul><li><p>默认情况下, 进入网站的首页, 我们希望&lt;router-view&gt;渲染首页的内容.</p></li><li><p>但是我们的实现中, 默认没有显示首页组件, 必须让用户点击才可以.</p></li></ul><p>如何可以让路径默认跳到到首页, 并且&lt;router-view&gt;渲染首页组件呢?</p><p>非常简单, 我们只需要配置多配置一个映射就可以了.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    path: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    redirect: <span class="string">&#x27;/home&#x27;</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>配置解析:</p><ul><li>我们在routes中又配置了一个映射. </li><li>path配置的是根路径: /</li><li>redirect是重定向, 也就是我们将根路径重定向到/home的路径下, 这样就可以得到我们想要的结果了.</li></ul><h2 id="HTML5的History模式"><a href="#HTML5的History模式" class="headerlink" title="HTML5的History模式"></a>HTML5的History模式</h2><p>我们前面说过改变路径的方式有两种:</p><ul><li>URL的hash</li><li>HTML5的history</li><li>默认情况下, 路径的改变使用的URL的hash.</li></ul><p>如果希望使用HTML5的history模式, 非常简单, 进行如下配置即可:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3.创建router实例</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    routes,</span><br><span class="line">    mode: <span class="string">&#x27;history&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502091053.png"></p><h2 id="router-link补充"><a href="#router-link补充" class="headerlink" title="router-link补充"></a>router-link补充</h2><p>在前面的&lt;router-link&gt;中, 我们只是使用了一个属性: to, 用于指定跳转的路径.</p><p>&lt;router-link&gt;还有一些其他属性:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=<span class="string">&#x27;/home&#x27;</span> tag=<span class="string">&#x27;li&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><ul><li><code>tag: </code>tag可以指定&lt;router-link&gt;之后渲染成什么组件, 比如上面的代码会被渲染成一个&lt;li&gt;元素, 而不是&lt;a&gt;</li><li><code>replace:</code> replace不会留下history记录, 所以指定replace的情况下, 后退键返回不能返回到上一个页面中</li><li><code>active-class:</code> 当&lt;router-link&gt;对应的路由匹配成功时, 会自动给当前元素设置一个<code>router-link-active</code>的class, 设置active-class可以修改默认的名称.<ul><li>在进行高亮显示的导航菜单或者底部tabbar时, 会使用到该类.</li><li>但是通常不会修改类的属性, 会直接使用默认的router-link-active即可. </li></ul></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502091252.png"></p><h2 id="修改linkActiveClass"><a href="#修改linkActiveClass" class="headerlink" title="修改linkActiveClass"></a>修改linkActiveClass</h2><p>该class具体的名称也可以通过router实例的属性进行修改 </p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502091347.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502091419.png"></p><p><strong>exact-active-class</strong></p><ul><li>类似于active-class, 只是在精准匹配下才会出现的class.</li><li>后面看到嵌套路由时, 我们再看下这个属性.</li></ul><h2 id="路由代码跳转"><a href="#路由代码跳转" class="headerlink" title="路由代码跳转"></a>路由代码跳转</h2><p>有时候, 页面的跳转可能需要执行对应的JavaScript代码, 这个时候, 就可以使用第二种跳转方式了</p><p>比如, 我们将代码修改如下: </p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502091600.png"></p><h2 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h2><p>在某些情况下，一个页面的path路径可能是不确定的，比如我们进入用户界面时，希望是如下的路径：</p><ul><li>/user/aaaa或/user/bbbb</li><li>除了有前面的/user之外，后面还跟上了用户的ID</li><li>这种path和Component的匹配关系，我们称之为动态路由(也是路由传递数据的一种方式)。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502091649.png"></p><h1 id="路由懒加载"><a href="#路由懒加载" class="headerlink" title="路由懒加载"></a>路由懒加载</h1><h2 id="认识路由的懒加载"><a href="#认识路由的懒加载" class="headerlink" title="认识路由的懒加载"></a>认识路由的懒加载</h2><p>官方给出了解释:</p><ul><li>当打包构建应用时，Javascript 包会变得非常大，影响页面加载。</li><li>如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更加高效了</li></ul><p>官方在说什么呢?</p><ul><li>首先, 我们知道路由中通常会定义很多不同的页面.</li><li>这个页面最后被打包在哪里呢? 一般情况下, 是放在一个js文件中.</li><li>但是, 页面这么多放在一个js文件中, 必然会造成这个页面非常的大.</li><li>如果我们一次性从服务器请求下来这个页面, 可能需要花费一定的时间, 甚至用户的电脑上还出现了短暂空白的情况.</li><li>如何避免这种情况呢? 使用路由懒加载就可以了.</li></ul><p>路由懒加载做了什么?</p><ul><li>路由懒加载的主要作用就是将路由对应的组件打包成一个个的js代码块.</li><li>只有在这个路由被访问到的时候, 才加载对应的组件</li></ul><h2 id="路由懒加载的效果"><a href="#路由懒加载的效果" class="headerlink" title="路由懒加载的效果"></a>路由懒加载的效果</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502091836.png"></p><h2 id="懒加载的方式"><a href="#懒加载的方式" class="headerlink" title="懒加载的方式"></a>懒加载的方式</h2><p>方式一: 结合Vue的异步组件和Webpack的代码分析.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Home = <span class="function"><span class="params">resolve</span> =&gt;</span> &#123; <span class="built_in">require</span>.ensure([<span class="string">&#x27;../components/Home.vue&#x27;</span>], <span class="function">() =&gt;</span> </span><br><span class="line">                                         &#123; resolve(<span class="built_in">require</span>(<span class="string">&#x27;../components/Home.vue&#x27;</span>)) &#125;)</span><br><span class="line">                        &#125;;</span><br></pre></td></tr></table></figure><p>方式二: AMD写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> About = <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>([<span class="string">&#x27;../components/About.vue&#x27;</span>], resolve);</span><br></pre></td></tr></table></figure><p>方式三: 在ES6中, 我们可以有更加简单的写法来组织Vue异步组件和Webpack的代码分割.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Home = <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../components/Home.vue&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h1><h2 id="认识嵌套路由"><a href="#认识嵌套路由" class="headerlink" title="认识嵌套路由"></a>认识嵌套路由</h2><p>嵌套路由是一个很常见的功能</p><p>比如在home页面中, 我们希望通过/home/news和/home/message访问一些内容.</p><p>一个路径映射一个组件, 访问这两个路径也会分别渲染两个组件.</p><p>路径和组件的关系如下:</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502092126.png"></p><p>实现嵌套路由有两个步骤:</p><ul><li>创建对应的子组件, 并且在路由映射中配置对应的子路由.</li><li>在组件内部使用&lt;router-view&gt;标签.</li></ul><h2 id="嵌套路由实现"><a href="#嵌套路由实现" class="headerlink" title="嵌套路由实现"></a>嵌套路由实现</h2><p><strong>定义两个组件:</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502092324.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502092402.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502092522.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502092449.png"></p><h2 id="嵌套默认路径"><a href="#嵌套默认路径" class="headerlink" title="嵌套默认路径"></a>嵌套默认路径</h2><p><strong>嵌套路由也可以配置默认的路径, 配置方式如下:</strong> </p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502092751.png"></p><h1 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>为了演示传递参数, 我们这里再创建一个组件, 并且将其配置好</p><ul><li>第一步: 创建新的组件Profile.vue </li><li>第二步: 配置路由映射 </li><li>第三步: 添加跳转的&lt;router-link&gt; </li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502092920.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502092956.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502093009.png"></p><h2 id="传递参数的方式"><a href="#传递参数的方式" class="headerlink" title="传递参数的方式"></a>传递参数的方式</h2><p>传递参数主要有两种类型: params和query</p><p><strong>params的类型:</strong></p><p>配置路由格式: <code>/router/:id</code></p><p>传递的方式: <code>在path后面跟上对应的值</code></p><p>传递后形成的路径: <code>/router/123, /router/abc</code></p><p><strong>query的类型:</strong></p><ul><li>配置路由格式: <code>/router</code>, 也就是普通配置</li><li>传递的方式: 对象中使用<code>query的key作为传递方式</code></li><li>传递后形成的路径: <code>/router?id=123, /router?id=abc</code></li></ul><p>如何使用它们呢? 也有两种方式: &lt;router-link&gt;的方式和JavaScript代码方式</p><h2 id="传递参数方式一-lt-router-link-gt"><a href="#传递参数方式一-lt-router-link-gt" class="headerlink" title="传递参数方式一: &lt;router-link&gt;"></a>传递参数方式一: &lt;router-link&gt;</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502093202.png"></p><h2 id="传递参数方式二-JavaScript代码"><a href="#传递参数方式二-JavaScript代码" class="headerlink" title="传递参数方式二: JavaScript代码"></a>传递参数方式二: JavaScript代码</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502093224.png"></p><h2 id="获取参数"><a href="#获取参数" class="headerlink" title="获取参数"></a>获取参数</h2><p>获取参数通过<code>$route</code>对象获取的.</p><p>在使用了 vue-router 的应用中，路由对象会被注入每个组件中，赋值为 <code>this.$route</code> ，并且当路由切换时，<code>路由对象会被更新</code>。</p><p>通过$route获取传递的信息如下:</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502093320.png"></p><h2 id="route和-router是有区别的"><a href="#route和-router是有区别的" class="headerlink" title="$route和$router是有区别的"></a>$route和$router是有区别的</h2><p>$route和$router是有区别的</p><ul><li>$router为VueRouter实例，想要导航到不同URL，则使用$router.push方法</li><li>$route为当前router跳转对象里面可以获取name、path、query、params等 </li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502093415.png"></p><h1 id="导航守卫"><a href="#导航守卫" class="headerlink" title="导航守卫"></a>导航守卫</h1><h2 id="为什么使用导航守卫"><a href="#为什么使用导航守卫" class="headerlink" title="为什么使用导航守卫?"></a>为什么使用导航守卫?</h2><p>我们来考虑一个需求: 在一个SPA应用中, 如何改变网页的标题呢?</p><ul><li>网页标题是通过&lt;title&gt;来显示的, 但是SPA只有一个固定的HTML, 切换不同的页面时, 标题并不会改变.</li><li>但是我们可以通过JavaScript来修改&lt;title&gt;的内容.window.document.title = ‘新的标题’.</li><li>那么在Vue项目中, 在哪里修改? 什么时候修改比较合适呢?</li></ul><p>普通的修改方式:</p><ul><li>我们比较容易想到的修改标题的位置是每一个路由对应的组件.vue文件中.</li><li>通过mounted声明周期函数, 执行对应的代码进行修改即可.</li><li>但是当页面比较多时, 这种方式不容易维护(因为需要在多个页面执行类似的代码).</li></ul><p>有没有更好的办法呢? <strong>使用导航守卫即可</strong>.</p><p>什么是导航守卫?</p><ul><li>vue-router提供的导航守卫主要用来监听监听路由的进入和离开的.</li><li>vue-router提供了beforeEach和afterEach的钩子函数, 它们会在路由即将改变前和改变后触发.</li></ul><h2 id="导航守卫使用"><a href="#导航守卫使用" class="headerlink" title="导航守卫使用"></a>导航守卫使用</h2><p>我们可以利用beforeEach来完成标题的修改.</p><ul><li>首先, 我们可以在钩子当中定义一些标题, 可以利用meta来定义</li><li>其次, 利用导航守卫,修改我们的标题.</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502093613.png"></p><p>导航钩子的三个参数解析:</p><ul><li><code>to</code>: 即将要进入的目标的路由对象.</li><li><code>from</code>: 当前导航即将要离开的路由对象.</li><li><code>next</code>: 调用该方法后, 才能进入下一个钩子.</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502093712.png"></p><h2 id="导航守卫补充"><a href="#导航守卫补充" class="headerlink" title="导航守卫补充"></a>导航守卫补充</h2><p>补充一:如果是后置钩子, 也就是afterEach, 不需要主动调用next()函数.</p><p>补充二: 上面我们使用的导航守卫, 被称之为全局守卫.</p><ul><li>路由独享的守卫.</li><li>组件内的守卫.</li></ul><p>更多内容, 可以查看官网进行学习:</p><ul><li><a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E8%B7%AF%E7%94%B1%E7%8B%AC%E4%BA%AB%E7%9A%84%E5%AE%88%E5%8D%AB">https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E8%B7%AF%E7%94%B1%E7%8B%AC%E4%BA%AB%E7%9A%84%E5%AE%88%E5%8D%AB</a></li></ul><h1 id="keep-alive遇见vue-router"><a href="#keep-alive遇见vue-router" class="headerlink" title="keep-alive遇见vue-router"></a>keep-alive遇见vue-router</h1><p>keep-alive 是 Vue 内置的一个组件，可以使被包含的组件保留状态，或避免重新渲染。</p><p>它们有两个非常重要的属性:</p><ul><li>include - 字符串或正则表达，只有匹配的组件会被缓存</li><li>exclude - 字符串或正则表达式，任何匹配的组件都不会被缓存</li></ul><p>router-view 也是一个组件，如果直接被包在 keep-alive 里面，所有路径匹配到的视图组件都会被缓存：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502093858.png"></p><p>通过create声明周期函数来验证</p><h1 id="TabBar实现思路"><a href="#TabBar实现思路" class="headerlink" title="TabBar实现思路"></a>TabBar实现思路</h1><ol><li><p>如果在下方有一个单独的TabBar组件，你如何封装</p><ul><li>自定义TabBar组件，在APP中使用</li><li>让TabBar出于底部，并且设置相关的样式</li></ul></li><li><p>TabBar中显示的内容由外界决定</p><ul><li>定义插槽</li><li>flex布局平分TabBar</li></ul></li><li><p>自定义TabBarItem，可以传入 图片和文字</p><ul><li>定义TabBarItem，并且定义两个插槽：图片、文字。</li><li>给两个插槽外层包装div，用于设置样式。</li><li>填充插槽，实现底部TabBar的效果</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502094109.png"></p></li><li><p>传入 高亮图片<br>定义另外一个插槽，<code>插入active-icon的数据</code><br>定义一个变量isActive，通过<code>v-show</code>来决定是否显示对应的icon</p></li><li><p>TabBarItem绑定路由数据<br>安装路由：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router —save</span><br></pre></td></tr></table></figure><p><code>完成router/index.js的内容，以及创建对应的组件</code><br>main.js中注册router<br>APP中加入&lt;router-view&gt;组件</p></li><li><p>点击item跳转到对应路由，并且动态决定<code>isActive</code><br>监听item的点击，通过<code>this.$router.replace()</code>替换路由路径<br>通过this.$route.path.indexOf(this.link) !== -1来判断是否是active</p></li><li><p>动态计算active样式<br>封装新的计算属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.isActive ? &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;red&#x27;</span>&#125; : &#123;&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502094422.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210502094428.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习（四）</title>
      <link href="posts/5018.html"/>
      <url>posts/5018.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>新的一天继续学习Vue💘</p><ul><li>Vue CLI</li><li>Vue CLI2</li><li>Vue CLI3</li></ul></blockquote><h1 id="Vue-CLI"><a href="#Vue-CLI" class="headerlink" title="Vue CLI"></a>Vue CLI</h1><h2 id="什么是Vue-CLI"><a href="#什么是Vue-CLI" class="headerlink" title="什么是Vue CLI"></a>什么是Vue CLI</h2><p>如果你只是简单写几个Vue的<code>Demo程序</code>, 那么你不需要Vue CLI.</p><p>如果你在<code>开发大型项目,</code> 那么你需要, 并且必然<code>需要使用Vue CLI</code></p><ul><li>使用Vue.js开发大型应用时，我们需要考虑代码目录结构、项目结构和部署、热加载、代码单元测试等事情。</li><li>如果每个项目都要手动完成这些工作，那无以效率比较低效，所以通常我们会使用一些脚手架工具来帮助完成这些事情。</li></ul><p><strong>CLI是什么意思?</strong></p><ul><li>CLI是Command-Line Interface, 翻译为命令行界面, 但是俗称<code>脚手架</code>.</li><li>Vue CLI是一个官方发布 vue.js 项目脚手架</li><li>使用 vue-cli 可以快速搭建Vue开发环境以及对应的<code>webpack配置</code>.</li></ul><h2 id="Vue-CLI使用前提-Node"><a href="#Vue-CLI使用前提-Node" class="headerlink" title="Vue CLI使用前提 - Node"></a>Vue CLI使用前提 - Node</h2><ul><li><strong>安装<code>NodeJS</code></strong><br>可以直接在官方网站中下载安装.<br>网址: <a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></li><li><strong>检测安装的版本</strong><br>默认情况下自动安装Node和NPM<br>Node环境要求8.9以上或者更高版本<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430102055.png" alt="image-20210430102046699"></li><li><strong>什么是NPM呢?</strong><br>NPM的全称是Node Package Manager<br>是一个NodeJS包管理和分发工具，已经成为了非官方的发布Node模块（包）的标准。<br>后续我们会经常使用NPM来安装一些开发过程中依赖包.</li><li><strong>cnpm安装</strong></li></ul><p>由于国内直接使用 npm 的官方镜像是非常慢的，这里推荐使用淘宝 NPM 镜像。</p><p>你可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm，你只需要运行以下代码:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>这样就可以使用 cnpm 命令来安装模块了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install [name]</span><br></pre></td></tr></table></figure><h2 id="Vue-CLI使用前提-Webpack"><a href="#Vue-CLI使用前提-Webpack" class="headerlink" title="Vue CLI使用前提 - Webpack"></a>Vue CLI使用前提 - Webpack</h2><ul><li><p><strong>Vue.js官方脚手架工具就使用了webpack模板</strong><br>对所有的资源会压缩等优化操作<br>它在开发过程中提供了一套完整的功能，能够使得我们开发过程中变得高效</p></li><li><p>Webpack的全局安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack -g</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430102605.png" alt="image-20210430102604189"></p></li></ul><h2 id="Vue-CLI的使用"><a href="#Vue-CLI的使用" class="headerlink" title="Vue CLI的使用"></a>Vue CLI的使用</h2><ul><li><p><strong>安装Vue脚手架</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="image/20210430103843.png" alt="image-20210430103840103"></p></li></ul><ul><li><p>注意：上面安装的是Vue CLI3的版本，如果需要想按照Vue CLI2的方式初始化项目时不可以的。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430104037.png" alt="image-20210430104031012"></p></li><li><p>Vue CLI2初始化项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack my-project</span><br></pre></td></tr></table></figure></li><li><p>Vue CLI3初始化项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create my-project</span><br></pre></td></tr></table></figure><h1 id="Vue-CLI2详解"><a href="#Vue-CLI2详解" class="headerlink" title="Vue CLI2详解"></a>Vue CLI2详解</h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430104154.png" alt="image-20210430104152371"></p></li></ul><h2 id="目录结构详解"><a href="#目录结构详解" class="headerlink" title="目录结构详解"></a>目录结构详解</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430104251.png" alt="image-20210430104248949"></p><h2 id="Runtime-Compiler和Runtime-only的区别"><a href="#Runtime-Compiler和Runtime-only的区别" class="headerlink" title="Runtime-Compiler和Runtime-only的区别"></a>Runtime-Compiler和Runtime-only的区别</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430104317.png" alt="image-20210430104315458"></p><p>如果在之后的开发中，你依然使用template，就需要选择Runtime-Compiler</p><p>如果你之后的开发中，使用的是.vue文件夹开发，那么可以选择Runtime-only</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430104400.png" alt="image-20210430104358012"></p><h2 id="render和template"><a href="#render和template" class="headerlink" title="render和template"></a>render和template</h2><p><strong>Runtime-Compiler 和 Runtime-only</strong></p><p>Runtime-Compiler</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    components: &#123; App &#125;,</span><br><span class="line">    template: <span class="string">&#x27;&lt;App/&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Runtime-only</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>为什么存在这样的差异呢？</strong></p><ul><li>我们需要先理解Vue应用程序是如何运行起来的。</li><li>Vue中的模板如何最终渲染成真实DOM。</li><li>我们来看下面的一幅图</li></ul><p><strong>Vue程序运行过程</strong><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430104831.png" alt="image-20210430104829983"></p><h2 id="render函数的使用"><a href="#render函数的使用" class="headerlink" title="render函数的使用"></a>render函数的使用</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430104916.png" alt="image-20210430104915182"></p><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105210.png" alt="image-20210430105208958"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105240.png" alt="image-20210430105240010"></p>          </div><h2 id="npm-run-build"><a href="#npm-run-build" class="headerlink" title="npm run build"></a>npm run build</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105254.png" alt="image-20210430105252551"></p><h2 id="npm-run-dev"><a href="#npm-run-dev" class="headerlink" title="npm run dev"></a>npm run dev</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105315.png" alt="image-20210430105313397"></p><h2 id="修改配置：webpack-base-conf-js起别名"><a href="#修改配置：webpack-base-conf-js起别名" class="headerlink" title="修改配置：webpack.base.conf.js起别名"></a>修改配置：webpack.base.conf.js起别名</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105328.png" alt="image-20210430105326646"></p><h1 id="Vue-CLI3"><a href="#Vue-CLI3" class="headerlink" title="Vue CLI3"></a>Vue CLI3</h1><h2 id="认识Vue-CLI3"><a href="#认识Vue-CLI3" class="headerlink" title="认识Vue CLI3"></a>认识Vue CLI3</h2><p>vue-cli 3 与 2 版本有很大区别</p><p>vue-cli 3 是基于 webpack 4 打造，vue-cli 2 还是 webapck 3</p><p>vue-cli 3 的设计原则是“0配置”，移除的配置文件根目录下的，build和config等目录</p><p>vue-cli 3 提供了 vue ui 命令，提供了可视化配置，更加人性化</p><p>移除了static文件夹，新增了public文件夹，并且index.html移动到public中</p><h2 id="Vue-CLI3-1"><a href="#Vue-CLI3-1" class="headerlink" title="Vue CLI3"></a>Vue CLI3</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105458.png" alt="image-20210430105455843"></p><h2 id="目录结构详解-1"><a href="#目录结构详解-1" class="headerlink" title="目录结构详解"></a>目录结构详解</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105520.png" alt="image-20210430105519231"></p><h2 id="配置去哪里了？"><a href="#配置去哪里了？" class="headerlink" title="配置去哪里了？"></a>配置去哪里了？</h2><p>UI方面的配置</p><p>启动配置服务器：vue ui</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105554.png" alt="image-20210430105553517"></p><p><strong>一大堆配置文件去哪里了？</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105608.png" alt="image-20210430105606722"></p><h2 id="自定义配置：起别名"><a href="#自定义配置：起别名" class="headerlink" title="自定义配置：起别名"></a>自定义配置：起别名</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210430105716.png" alt="image-20210430105715328"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习（三）</title>
      <link href="posts/d760.html"/>
      <url>posts/d760.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>让我们继续来学习VUE💘</p><p>学习vue的第三天笔记</p><ul><li>认识组件化</li><li>注册组件</li><li>组件其他补充</li><li>组件数据存放</li><li>父子组件通信</li><li>父级向子级传递</li><li>子级向父级传递</li><li>插槽slot</li><li>模块化开发</li><li>Common.js</li><li>ES6的export指令</li><li>ES6的import指令</li></ul></blockquote><h1 id="认识组件化"><a href="#认识组件化" class="headerlink" title="认识组件化"></a>认识组件化</h1><h2 id="什么是组件化？"><a href="#什么是组件化？" class="headerlink" title="什么是组件化？"></a>什么是组件化？</h2><p>人面对复杂问题的处理方式：</p><ul><li>任何一个人处理信息的逻辑能力都是有限的</li><li>所以，当面对一个非常复杂的问题时，我们不太可能一次性搞定一大堆的内容。</li><li>但是，我们人有一种天生的能力，就是将问题进行拆解。</li><li>如果将一个复杂的问题，拆分成很多个可以处理的小问题，再将其放在整体当中，你会发现大的问题也会迎刃而解。</li></ul><p>组件化也是类似的思想：</p><ul><li>如果我们将一个页面中所有的处理逻辑全部放在一起，处理起来就会变得非常复杂，而且不利于后续的管理以及扩展。</li><li>但如果，我们讲一个页面拆分成一个个小的功能块，每个功能块完成属于自己这部分独立的功能，那么之后整个页面的管理和维护就变得非常容易了。</li></ul><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428201126.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210429103358.png"></p>          </div><p>我们将一个完整的页面分成很多个组件。</p><p>每个组件都用于实现页面的一个功能块。</p><p>而每一个组件又可以进行细分。</p><h2 id="Vue组件化思想"><a href="#Vue组件化思想" class="headerlink" title="Vue组件化思想"></a>Vue组件化思想</h2><p>组件化是Vue.js中的重要思想</p><ul><li>它提供了一种抽象，让我们可以开发出一个个独立可复用的小组件来构造我们的应用。</li><li>任何的应用都会被抽象成一颗组件树。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428201836.png"></p><p>组件化思想的应用：</p><ul><li>有了组件化的思想，我们在之后的开发中就要充分的利用它。</li><li>尽可能的将页面拆分成一个个小的、可复用的组件。</li><li>这样让我们的代码更加方便组织和管理，并且扩展性也更强。</li></ul><p>所以，组件是Vue开发中，非常重要的一个篇章，要认真学习。</p><h1 id="注册组件"><a href="#注册组件" class="headerlink" title="注册组件"></a>注册组件</h1><h2 id="注册组件的基本步骤"><a href="#注册组件的基本步骤" class="headerlink" title="注册组件的基本步骤"></a>注册组件的基本步骤</h2><p>组件的使用分成三个步骤：</p><ul><li>创建组件构造器</li><li>注册组件</li><li>使用组件。</li></ul><p>我们来看看通过代码如何注册组件</p><p>查看运行结果：</p><ul><li>和直接使用一个div看起来并没有什么区别。</li><li>但是我们可以设想，如果很多地方都要显示这样的信息，我们是不是就可以直接使用<my-cpn></my-cpn>来完成呢？</li></ul><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428202257.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428203012.jpg" alt="image-20210428202353993"></p>          </div><h2 id="注册组件步骤解析"><a href="#注册组件步骤解析" class="headerlink" title="注册组件步骤解析"></a>注册组件步骤解析</h2><p>这里的步骤都代表什么含义呢？</p><p>1.Vue.extend()：</p><ul><li>调用Vue.extend()创建的是一个组件构造器。 </li><li>通常在创建组件构造器时，传入template代表我们自定义组件的模板。</li><li>该模板就是在使用到组件的地方，要显示的HTML代码。</li><li>事实上，这种写法在Vue2.x的文档中几乎已经看不到了，它会直接使用下面我们会讲到的语法糖，但是在很多资料还是会提到这种方式，而且这种方式是学习后面方式的基础。</li></ul><p>2.Vue.component()：</p><ul><li>调用Vue.component()是将刚才的组件构造器注册为一个组件，并且给它起一个组件的标签名称。</li><li>所以需要传递两个参数：1、注册组件的标签名 2、组件构造器</li></ul><p>3.组件必须挂载在某个Vue实例下，否则它不会生效。（见下页）</p><ul><li>我们来看下面我使用了三次&lt;my-cpn&gt;&lt;/my-cpn&gt;</li><li>而第三次其实并没有生效</li></ul><h2 id="第三步的解析"><a href="#第三步的解析" class="headerlink" title="第三步的解析"></a>第三步的解析</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428203328.png" alt="image-20210428203304132"></p><h1 id="组件的其他补充"><a href="#组件的其他补充" class="headerlink" title="组件的其他补充"></a>组件的其他补充</h1><h2 id="全局组件和局部组件"><a href="#全局组件和局部组件" class="headerlink" title="全局组件和局部组件"></a>全局组件和局部组件</h2><p>当我们通过调用Vue.component()注册组件时，组件的注册是全局的</p><ul><li>这意味着该组件可以在任意Vue示例下使用。</li></ul><p>如果我们注册的组件是挂载在某个实例中, 那么就是一个局部组件</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428211531.png" alt="image-20210428211337246"></p><h2 id="父组件和子组件"><a href="#父组件和子组件" class="headerlink" title="父组件和子组件"></a>父组件和子组件</h2><p>在前面我们看到了组件树：</p><ul><li>组件和组件之间存在层级关系</li><li>而其中一种非常重要的关系就是父子组件的关系</li></ul><p>我们来看通过代码如何组成的这种层级关系：</p><p>父子组件错误用法：以子标签的形式在Vue实例中使用</p><ul><li>因为当子组件注册到父组件的components时，Vue会编译好父组件的模块</li><li>该模板的内容已经决定了父组件将要渲染的HTML（相当于父组件中已经有了子组件中的内容了）</li><li>&lt;child-cpn&gt;&lt;/child-cpn&gt;是只能在父组件中被识别的。</li><li>类似这种用法，&lt;child-cpn&gt;&lt;/child-cpn&gt;是会被浏览器忽略的。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428212104.png" alt="image-20210428212102751"></p><h2 id="注册组件语法糖"><a href="#注册组件语法糖" class="headerlink" title="注册组件语法糖"></a>注册组件语法糖</h2><p>在上面注册组件的方式，可能会有些繁琐。</p><ul><li>Vue为了简化这个过程，提供了注册的语法糖。</li><li>主要是省去了调用Vue.extend()的步骤，而是可以直接使用一个对象来代替。</li></ul><p>语法糖注册全局组件和局部组件：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428212432.png" alt="image-20210428212431518"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428212439.png" alt="image-20210428212438884"></p><h2 id="模板的分离写法"><a href="#模板的分离写法" class="headerlink" title="模板的分离写法"></a>模板的分离写法</h2><p>刚才，我们通过语法糖简化了Vue组件的注册过程，另外还有一个地方的写法比较麻烦，就是template模块写法。</p><p>如果我们能将其中的HTML分离出来写，然后挂载到对应的组件上，必然结构会变得非常清晰。</p><p>Vue提供了两种方案来定义HTML模块内容：</p><ul><li>使用&lt;script&gt;标签</li><li>使用&lt;template&gt;标签</li></ul><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428212653.png" alt="image-20210428212652537"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428212703.png" alt="image-20210428212702724"></p>          </div><h1 id="组件数据存放"><a href="#组件数据存放" class="headerlink" title="组件数据存放"></a>组件数据存放</h1><h2 id="组件可以访问Vue实例数据吗"><a href="#组件可以访问Vue实例数据吗" class="headerlink" title="组件可以访问Vue实例数据吗?"></a>组件可以访问Vue实例数据吗?</h2><p>组件是一个单独功能模块的封装：</p><ul><li>这个模块有属于自己的HTML模板，也应该有属性自己的数据data。</li></ul><p>组件中的数据是保存在哪里呢？顶层的Vue实例中吗？</p><ul><li>我们先来测试一下，组件中能不能直接访问Vue实例中的data</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428212941.png" alt="image-20210428212937316"></p><p>我们发现不能访问，而且即使可以访问，如果将所有的数据都放在Vue实例中，Vue实例就会变的非常臃肿。</p><p>结论：Vue组件应该有自己保存数据的地方。</p><h2 id="组件数据的存放"><a href="#组件数据的存放" class="headerlink" title="组件数据的存放"></a>组件数据的存放</h2><p>组件自己的数据存放在哪里呢?</p><ul><li>组件对象也有一个data属性(也可以有methods等属性，下面我们有用到)</li><li>只是这个data属性必须是一个函数</li><li>而且这个函数返回一个对象，对象内部保存着数据</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428213038.png" alt="image-20210428213036983"></p><h2 id="为什么是一个函数呢"><a href="#为什么是一个函数呢" class="headerlink" title="为什么是一个函数呢?"></a>为什么是一个函数呢?</h2><p>为什么data在组件中必须是一个函数呢?</p><ul><li>首先，如果不是一个函数，Vue直接就会报错。</li><li>其次，原因是在于Vue让每个组件对象都返回一个新的对象，因为如果是同一个对象的，组件在多次使用后会相互影响。</li></ul><h1 id="父子组件通信"><a href="#父子组件通信" class="headerlink" title="父子组件通信"></a>父子组件通信</h1><p>在上一个小节中，我们提到了子组件是不能引用父组件或者Vue实例的数据的。</p><p>但是，在开发中，往往一些数据确实需要从上层传递到下层：</p><ul><li>比如在一个页面中，我们从服务器请求到了很多的数据。</li><li>其中一部分数据，并非是我们整个页面的大组件来展示的，而是需要下面的子组件进行展示。</li><li>这个时候，并不会让子组件再次发送一个网络请求，而是直接让大组件(父组件)将数据传递给小组件(子组件)。</li></ul><p>如何进行父子组件间的通信呢？Vue官方提到</p><ul><li>通过props向子组件传递数据</li><li>通过事件向父组件发送消息</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428213503.png" alt="image-20210428213501966"></p><p>在下面的代码中，我直接将Vue实例当做父组件，并且其中包含子组件来简化代码。</p><p>真实的开发中，<code>Vue实例和子组件的通信和父组件和子组件的通信过程</code>是一样的。</p><h1 id="父级向子集传递"><a href="#父级向子集传递" class="headerlink" title="父级向子集传递"></a>父级向子集传递</h1><h2 id="props基本用法"><a href="#props基本用法" class="headerlink" title="props基本用法"></a>props基本用法</h2><p>在组件中，使用选项props来声明需要从父级接收到的数据。</p><p>props的值有两种方式：</p><ul><li>方式一：字符串数组，数组中的字符串就是传递时的名称。</li><li>方式二：对象，对象可以设置传递时的类型，也可以设置默认值等。</li></ul><p>我们先来看一个最简单的props传递：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428214003.png" alt="image-20210428213958083"></p><h2 id="props数据验证"><a href="#props数据验证" class="headerlink" title="props数据验证"></a>props数据验证</h2><p>在前面，我们的props选项是使用一个数组。</p><p>我们说过，除了数组之外，我们也可以使用对象，当需要对<code>props进行类型等验证</code>时，就需要对象写法了。</p><p>验证都支持哪些数据类型呢？</p><ul><li>String</li><li>Number</li><li>Boolean</li><li>Array</li><li>Object</li><li>Date</li><li>Function</li><li>Symbol</li></ul><p>当我们有自定义构造函数时，验证也支持自定义的类型</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span> (<span class="params">firstName,lastName</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.firstName = firstName</span><br><span class="line">    <span class="built_in">this</span>.lastName = lastName</span><br><span class="line">&#125;</span><br><span class="line">Vue.component(<span class="string">&#x27;blog-post&#x27;</span>, &#123;</span><br><span class="line">    props: &#123;</span><br><span class="line">    author: Person</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;my-component&#x27;</span>,&#123;</span><br><span class="line">props: &#123;</span><br><span class="line"><span class="comment">//基础的类型检查( nu11^匹配任何类型)</span></span><br><span class="line">propA: <span class="built_in">Number</span>,</span><br><span class="line"><span class="comment">//多个可能的类型</span></span><br><span class="line">propB: [string, <span class="built_in">Number</span>],</span><br><span class="line"><span class="comment">//必填的字符串</span></span><br><span class="line">    propC: &#123;</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        required: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line">    <span class="comment">//带有默认值的数字</span></span><br><span class="line">    propD:</span><br><span class="line">        type: <span class="built_in">Number</span> ,</span><br><span class="line">        <span class="keyword">default</span>: <span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//带有默认值的对象</span></span><br><span class="line">    propE:</span><br><span class="line">        type: object,</span><br><span class="line">        <span class="comment">//对象或数组默认值必须从一个工厂函数获取</span></span><br><span class="line">        <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">message</span>: <span class="string">&#x27;he11o&#x27;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;，</span><br><span class="line">    <span class="comment">//自定义验证函数</span></span><br><span class="line">    propF: &#123;</span><br><span class="line">    validator: <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//这个值必须匹配下列字符串中的一个</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27; success&#x27;</span>, <span class="string">&#x27;warning&#x27;</span>, <span class="string">&#x27; danger&#x27;</span>]. indexof(value) !== -<span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="子级向父级传递"><a href="#子级向父级传递" class="headerlink" title="子级向父级传递"></a>子级向父级传递</h1><h2 id="子级向父级传递-1"><a href="#子级向父级传递-1" class="headerlink" title="子级向父级传递"></a>子级向父级传递</h2><p>props用于父组件向子组件传递数据，还有一种比较常见的是子组件传递数据或事件到父组件中。</p><p>我们应该如何处理呢？这个时候，我们需要使用自定义事件来完成。</p><p>什么时候需要自定义事件呢？</p><ul><li>当子组件需要向父组件传递数据时，就要用到自定义事件了。</li><li>我们之前学习的v-on不仅仅可以用于监听DOM事件，也可以用于组件间的自定义事件。</li></ul><p>自定义事件的流程：</p><ul><li>在子组件中，通过$emit()来触发事件。</li><li>在父组件中，通过v-on来监听子组件事件。</li></ul><p>我们来看一个简单的例子：</p><ul><li>我们之前做过一个两个按钮+1和-1，点击后修改counter。</li><li>我们整个操作的过程还是在子组件中完成，但是之后的展示交给父组件。</li><li>这样，我们就需要将子组件中的counter，传给父组件的某个属性，比如total。</li></ul><h2 id="自定义事件代码"><a href="#自定义事件代码" class="headerlink" title="自定义事件代码"></a>自定义事件代码</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428214912.png" alt="image-20210428214911232"></p><h1 id="父子组件的访问"><a href="#父子组件的访问" class="headerlink" title="父子组件的访问"></a>父子组件的访问</h1><h2 id="父子组件的访问方式：-children"><a href="#父子组件的访问方式：-children" class="headerlink" title="父子组件的访问方式： $children"></a>父子组件的访问方式： $children</h2><p>有时候我们需要父组件直接访问子组件，子组件直接访问父组件，或者是子组件访问跟组件。</p><ul><li>父组件访问子组件：使用$children或$refs</li><li>子组件访问父组件：使用$parent</li></ul><p>我们先来看下$children的访问</p><ul><li>this.$children是一个数组类型，它包含所有子组件对象。</li><li>我们这里通过一个遍历，取出所有子组件的message状态。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428215018.png" alt="image-20210428215017149"></p><h2 id="父子组件的访问方式：-refs"><a href="#父子组件的访问方式：-refs" class="headerlink" title="父子组件的访问方式： $refs"></a>父子组件的访问方式： $refs</h2><p>$children的缺陷：</p><ul><li>通过$children访问子组件时，是一个数组类型，访问其中的子组件必须通过索引值。</li><li>但是当子组件过多，我们需要拿到其中一个时，往往不能确定它的索引值，甚至还可能会发生变化。</li><li>有时候，我们想明确获取其中一个特定的组件，这个时候就可以使用$refs</li></ul><p>$refs的使用：</p><ul><li>$refs和ref指令通常是一起使用的。</li><li>首先，我们通过ref给某一个子组件绑定一个特定的ID。</li><li>其次，通过this.$refs.ID就可以访问到该组件了。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428215205.png" alt="image-20210428215203198"></p><h2 id="父子组件的访问方式：-parent"><a href="#父子组件的访问方式：-parent" class="headerlink" title="父子组件的访问方式： $parent"></a>父子组件的访问方式： $parent</h2><p>如果我们想在子组件中直接访问父组件，可以通过$parent</p><p>注意事项：</p><ul><li>尽管在Vue开发中，我们允许通过$parent来访问父组件，但是在真实开发中尽量不要这样做。</li><li>子组件应该尽量避免直接访问父组件的数据，因为这样耦合度太高了。</li><li>如果我们将子组件放在另外一个组件之内，很可能该父组件没有对应的属性，往往会引起问题。</li><li>另外，更不好做的是通过$parent直接修改父组件的状态，那么父组件中的状态将变得飘忽不定，很不利于我的调试和维护。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428215254.png" alt="image-20210428215253104"></p><h2 id="非父子组件通信"><a href="#非父子组件通信" class="headerlink" title="非父子组件通信"></a>非父子组件通信</h2><p>刚才我们讨论的都是父子组件间的通信，那如果是非父子关系呢?</p><ul><li>非父子组件关系包括多个层级的组件，也包括兄弟组件的关系。</li></ul><p>在Vue1.x的时候，可以通过$dispatch和$broadcast完成</p><ul><li>$dispatch用于向上级派发事件</li><li>$broadcast用于向下级广播事件</li><li>但是在Vue2.x都被取消了</li></ul><p>在Vue2.x中，有一种方案是通过中央事件总线，也就是一个中介来完成。</p><ul><li>但是这种方案和直接使用Vuex的状态管理方案还是逊色很多。</li><li>并且Vuex提供了更多好用的功能，所以这里我们暂且不讨论这种方案，后续我们专门学习Vuex的状态管理。</li></ul><h1 id="插槽solt"><a href="#插槽solt" class="headerlink" title="插槽solt"></a>插槽solt</h1><h2 id="编译作用域"><a href="#编译作用域" class="headerlink" title="编译作用域"></a>编译作用域</h2><p>在真正学习插槽之前，我们需要先理解一个概念：编译作用域。</p><p>官方对于编译的作用域解析比较简单，我们自己来通过一个例子来理解这个概念：</p><p>我们来考虑下面的代码是否最终是可以渲染出来的：</p><ul><li>&lt;my-cpn v-show=”isShow”&gt; &lt;/my-cpn&gt;中，我们使用了isShow属性。</li><li>isShow属性包含在组件中，也包含在Vue实例中。</li></ul><p>答案：最终可以渲染出来，也就是使用的是Vue实例的属性。</p><p>为什么呢？</p><ul><li>官方给出了一条准则：父组件模板的所有东西都会在父级作用域内编译；子组件模板的所有东西都会在子级作用域内编译。</li><li>而我们在使用&lt;my-cpn v-show=”isShow”&gt;&lt;/my-cpn&gt;的时候，整个组件的使用过程是相当于在父组件中出现的。</li><li>那么他的作用域就是父组件，使用的属性也是属于父组件的属性。</li><li>因此，isShow使用的是Vue实例中的属性，而不是子组件的属性</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428215633.png" alt="image-20210428215632152"></p><h2 id="为什么使用slot"><a href="#为什么使用slot" class="headerlink" title="为什么使用slot"></a>为什么使用slot</h2><p>slot翻译为插槽：</p><ul><li>在生活中很多地方都有插槽，电脑的USB插槽，插板当中的电源插槽。</li><li>插槽的目的是让我们原来的设备具备更多的扩展性。</li><li>比如电脑的USB我们可以插入U盘、硬盘、手机、音响、键盘、鼠标等等。</li></ul><p>组件的插槽：</p><ul><li>组件的插槽也是为了让我们封装的组件更加具有扩展性。</li><li>让使用者可以决定组件内部的一些内容到底展示什么。</li></ul><p>栗子：移动网站中的导航栏。</p><ul><li>移动开发中，几乎每个页面都有导航栏。</li><li>导航栏我们必然会封装成一个插件，比如nav-bar组件。</li><li>一旦有了这个组件，我们就可以在多个页面中复用了。</li></ul><p>但是，每个页面的导航是一样的吗？No，我以京东M站为例</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428215739.png" alt="image-20210428215738904"></p><h2 id="如何封装这类组件呢？slot"><a href="#如何封装这类组件呢？slot" class="headerlink" title="如何封装这类组件呢？slot"></a>如何封装这类组件呢？slot</h2><p>如何去封装这类的组件呢？</p><ul><li>它们也很多区别，但是也有很多共性。</li><li>如果，我们每一个单独去封装一个组件，显然不合适：比如每个页面都返回，这部分内容我们就要重复去封装。</li><li>但是，如果我们封装成一个，好像也不合理：有些左侧是菜单，有些是返回，有些中间是搜索，有些是文字，等等。</li></ul><p>如何封装合适呢？抽取共性，保留不同。</p><ul><li>最好的封装方式就是将共性抽取到组件中，将不同暴露为插槽。</li><li>一旦我们预留了插槽，就可以让使用者根据自己的需求，决定插槽中插入什么内容。</li><li>是搜索框，还是文字，还是菜单。由调用者自己来决定。</li></ul><p>这就是为什么我们要学习组件中的插槽slot的原因。</p><h2 id="slot基本使用"><a href="#slot基本使用" class="headerlink" title="slot基本使用"></a>slot基本使用</h2><p>了解了为什么用slot，我们再来谈谈如何使用slot？</p><ul><li>在子组件中，使用特殊的元素<slot>就可以为子组件开启一个插槽。</li><li>该插槽插入什么内容取决于父组件如何使用。</li></ul><p>我们通过一个简单的例子，来给子组件定义一个插槽：</p><ul><li>&lt;slot&gt;中的内容表示，如果没有在该组件中插入任何其他内容，就默认显示该内容</li><li>有了这个插槽后，父组件如何使用呢？</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428215955.png" alt="image-20210428215954377"></p><h2 id="具名插槽slot"><a href="#具名插槽slot" class="headerlink" title="具名插槽slot"></a>具名插槽slot</h2><p>当子组件的功能复杂时，子组件的插槽可能并非是一个。</p><ul><li>比如我们封装一个导航栏的子组件，可能就需要三个插槽，分别代表左边、中间、右边。</li><li>那么，外面在给插槽插入内容时，如何区分插入的是哪一个呢？</li><li>这个时候，我们就需要给插槽起一个名字</li></ul><p>如何使用具名插槽呢？</p><ul><li>非常简单，只要给slot元素一个name属性即可</li><li>&lt;slot name=’myslot’&gt;&lt;/slot&gt;</li></ul><p>我们来给出一个案例：</p><ul><li>这里我们先不对导航组件做非常复杂的封装，先了解具名插槽的用法。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210429103534.png" alt="image-20210428220114764"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428220156.png" alt="image-20210428220155325"></p><h2 id="作用域插槽：准备"><a href="#作用域插槽：准备" class="headerlink" title="作用域插槽：准备"></a>作用域插槽：准备</h2><p>作用域插槽是slot一个比较难理解的点，而且官方文档说的又有点不清晰。</p><p>这里，我们用一句话对其做一个总结，然后我们在后续的案例中来体会：</p><ul><li>父组件替换插槽的标签，但是内容由子组件来提供。</li></ul><p>我们先提一个需求：</p><ul><li><p>子组件中包括一组数据，比如：pLanguages: [‘JavaScript’, ‘Python’, ‘Swift’, ‘Go’, ‘C++’]</p></li><li><p>需要在多个界面进行展示：</p><ul><li>某些界面是以水平方向一一展示的，</li><li>某些界面是以列表形式展示的，</li><li>某些界面直接展示一个数组</li></ul><p>内容在子组件，希望父组件告诉我们如何展示，怎么办呢？</p><ul><li>利用slot作用域插槽就可以了</li></ul></li></ul><p>我们来看看子组件的定义：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428220323.png" alt="image-20210428220318768"></p><h2 id="作用域插槽：使用"><a href="#作用域插槽：使用" class="headerlink" title="作用域插槽：使用"></a>作用域插槽：使用</h2><p>在父组件使用我们的子组件时，从子组件中拿到数据：</p><ul><li>我们通过&lt;template slot-scope=”slotProps”&gt;获取到slotProps属性</li><li>在通过slotProps.data就可以获取到刚才我们传入的data了</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210428220430.png" alt="image-20210428220428696"></p><h1 id="为什么需要模块化"><a href="#为什么需要模块化" class="headerlink" title="为什么需要模块化"></a>为什么需要模块化</h1><h2 id="JavaScript原始功能"><a href="#JavaScript原始功能" class="headerlink" title="JavaScript原始功能"></a>JavaScript原始功能</h2><p>在网页开发的早期，js制作作为一种脚本语言，做一些简单的表单验证或动画实现等，那个时候代码还是很少的。</p><ul><li>那个时候的代码是怎么写的呢？直接将代码写在&lt;script&gt;标签中即可</li></ul><p>随着ajax异步请求的出现，慢慢形成了前后端的分离</p><ul><li>客户端需要完成的事情越来越多，代码量也是与日俱增。</li><li>为了应对代码量的剧增，我们通常会将代码组织在多个js文件中，进行维护。</li><li>但是这种维护方式，依然不能避免一些灾难性的问题。</li></ul><p>比如全局变量同名问题：看右边的例子</p><p>另外，这种代码的编写方式对js文件的依赖顺序几乎是强制性的</p><ul><li>但是当js文件过多，比如有几十个的时候，弄清楚它们的顺序是一件比较同时的事情。</li><li>而且即使你弄清楚顺序了，也不能避免上面出现的这种尴尬问题的发生。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210429210944.png" alt="image-20210429210934999"></p><p>小明后来发现代码不能正常运行，去检查自己的变量，发现确实true</p><p>最后杯具发生了，小明加班到2点还是没有找到问题出在哪里(所以，某些加班真的是无意义的)</p><h2 id="匿名函数的解决方案"><a href="#匿名函数的解决方案" class="headerlink" title="匿名函数的解决方案"></a>匿名函数的解决方案</h2><p>我们可以使用匿名函数来解决方面的重名问题</p><ul><li>在aaa.js文件中，我们使用匿名函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">true</span></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>但是如果我们希望在main.js文件中，用到flag，应该如何处理呢？</p><p>显然，另外一个文件中不容易使用，因为flag是一个局部变量。</p><h2 id="使用模块作为出口"><a href="#使用模块作为出口" class="headerlink" title="使用模块作为出口"></a>使用模块作为出口</h2><p>我们可以使用将需要暴露到外面的变量，使用一个模块作为出口，什么意思呢？</p><p>来看下对应的代码：</p><p>我们做了什么事情呢？</p><ul><li><p>非常简单，在匿名函数内部，定义一个对象。</p></li><li><p>给对象添加各种需要暴露到外面的属性和方法(不需要暴露的直接定义即可)。</p></li><li><p>最后将这个对象返回，并且在外面使用了一个MoudleA接受。</p></li></ul><p>接下来，我们在man.js中怎么使用呢？</p><ul><li>我们只需要使用属于自己模块的属性和方法即可</li></ul><p>这就是模块最基础的封装，事实上模块的封装还有很多高级的话题：</p><ul><li>但是我们这里就是要认识一下为什么需要模块，以及模块的原始雏形。</li><li>幸运的是，前端模块化开发已经有了很多既有的规范，以及对应的实现方案。</li></ul><p>常见的模块化规范：</p><ul><li>CommonJS、AMD、CMD，也有ES6的Modules</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/20210429211420.png" alt="image-20210429211416199"></p><h1 id="CommonJS"><a href="#CommonJS" class="headerlink" title="CommonJS"></a>CommonJS</h1><h2 id="CommonJS（了解）"><a href="#CommonJS（了解）" class="headerlink" title="CommonJS（了解）"></a>CommonJS（了解）</h2><p>模块化有两个核心：导出和导入</p><p>CommonJS的导出：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    flag: <span class="literal">true</span></span><br><span class="line">    <span class="function"><span class="title">test</span>(<span class="params">a, b</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">demo</span>(<span class="params">a, b</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a * b</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommonJS的导入:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CommonJS模块</span></span><br><span class="line"><span class="keyword">let</span> &#123; test, demo, flag &#125; = <span class="built_in">require</span>(<span class="string">&#x27;moduleA&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//等同于</span></span><br><span class="line"><span class="keyword">let</span> _mA = <span class="built_in">require</span>(<span class="string">&#x27;moduleA&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> test = _mA.test;</span><br><span class="line"><span class="keyword">let</span> demo = _mA.demo;</span><br><span class="line"><span class="keyword">let</span> flag = _mA.flag;</span><br></pre></td></tr></table></figure><h1 id="ES6的export指令"><a href="#ES6的export指令" class="headerlink" title="ES6的export指令"></a>ES6的export指令</h1><h2 id="export基本使用"><a href="#export基本使用" class="headerlink" title="export基本使用"></a>export基本使用</h2><p><strong>export</strong>指令用于导出变量，比如下面的代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// info.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> name = <span class="string">&#x27;violet&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> height = <span class="number">1.88</span></span><br></pre></td></tr></table></figure><p>上面的代码还有另外一种写法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// info.js</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;why&#x27;</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">let</span> height = <span class="number">1.88</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;name, age, height&#125;</span><br></pre></td></tr></table></figure><h2 id="导出函数或类"><a href="#导出函数或类" class="headerlink" title="导出函数或类"></a>导出函数或类</h2><p>上面我们主要是输出变量，也可以输出函数或者输出类</p><p>上面的代码也可以写成这种形式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">content</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name, age</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="title">run</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + <span class="string">&#x27;真帅&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">content</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name, age</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="title">run</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + <span class="string">&#x27;真帅&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;test, Person&#125;</span><br></pre></td></tr></table></figure><h2 id="export-default"><a href="#export-default" class="headerlink" title="export default"></a>export default</h2><p>某些情况下，一个模块中包含某个的功能，我们并不希望给这个功能命名，而且让导入者可以自己来命名</p><p>这个时候就可以使用export default</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// info.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;default function&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们来到main.js中，这样使用就可以了</p><p>这里的myFunc是我自己命名的，你可以根据需要命名它对应的名字</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> myFunc form <span class="string">&#x27;./info.js&#x27;</span></span><br><span class="line"></span><br><span class="line">myFunc()</span><br></pre></td></tr></table></figure><p>另外，<code>需要注意</code>：</p><p>export default在同一个模块中，不允许同时存在多个。</p><h1 id="ES6的import指令"><a href="#ES6的import指令" class="headerlink" title="ES6的import指令"></a>ES6的import指令</h1><h2 id="import使用"><a href="#import使用" class="headerlink" title="import使用"></a>import使用</h2><p>我们使用export指令导出了模块对外提供的接口，下面我们就可以通过import命令来加载对应的这个模块了</p><p>首先，我们需要在HTML代码中引入两个js文件，并且类型需要设置为module</p><p>import指令用于导入模块中的内容，比如main.js的代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;name, age, height&#125; form <span class="string">&quot;./info.js&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name, age, height);</span><br></pre></td></tr></table></figure><p>如果我们希望某个模块中所有的信息都导入，一个个导入显然有些麻烦：</p><ul><li>通过*可以导入模块中所有的export变量</li><li>但是通常情况下我们需要给*起一个别名，方便后续的使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> info <span class="keyword">from</span> <span class="string">&#x27;./info.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(info.name, info.age, info.height,info.friends);</span><br></pre></td></tr></table></figure><p>今天的学习就到这里啦~😋</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习（二）</title>
      <link href="posts/a2cf14b7.html"/>
      <url>posts/a2cf14b7.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>让我们继续来学习VUE💘</p><ul><li>插值操作</li><li>绑定属性</li><li>计算属性</li><li>事件监听</li><li>条件判断</li><li>循环遍历</li><li>阶段案例</li><li>v-model</li></ul></blockquote><h1 id="🍔插值操作"><a href="#🍔插值操作" class="headerlink" title="🍔插值操作"></a>🍔插值操作</h1><h2 id="Mustache"><a href="#Mustache" class="headerlink" title="Mustache"></a>Mustache</h2><p><strong>如何将data中的文本数据，插入到HTML中呢<img no-lazy class="inline" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/>？</strong></p><ul><li>我们已经学习过了，可以通过Mustache语法(也就是双大括号)。</li><li>Mustache: 胡子/胡须.</li></ul><p><strong>我们可以像下面这样来使用，并且数据是响应式的</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 插入到标签中 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;, QiQi<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mustache语法中，不仅仅可以直接写变量，也可以写简单的表达式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;firstName + lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;firstName + &#x27; &#x27; + lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 使用两个Mustache --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 也可以是一个表达式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;counter * 2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好鸭&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      firstName: <span class="string">&#x27;kobe&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      lastName: <span class="string">&#x27;bryant&#x27;</span>,</span></span><br><span class="line">      counter: 100</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h2><p>但是，在某些情况下，我们可能不希望界面随意的跟随改变</p><p>这个时候，我们就可以使用一个Vue的指令</p><p><strong>v-once:</strong> </p><ul><li>该指令后面不需要跟任何表达式(比如之前的v-for后面是由跟表达式的)</li><li>该指令表示元素和组件(组件后面才会学习)只渲染一次，不会随着数据的改变而改变。</li></ul><p>代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="comment">&lt;!-- message改变，界面并没有重新渲染 --&gt;</span></span></span></span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好啊&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h2 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h2><p><strong>某些情况下，我们从服务器请求到的数据本身就是一个HTML代码</strong></p><ul><li><p>如果我们直接通过1来输出，会将HTML代码也一起输出。</p></li><li><p>但是我们可能希望的是按照HTML格式进行解析，并且显示对应的内容。</p></li></ul><p><strong>如果我们希望解析出HTML展示</strong></p><p>可以使用v-html指令</p><ul><li>该指令后面往往会跟上一个string类型</li><li>会将string的html解析出来并且进行渲染</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424161426.png"></p><h2 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h2><p>v-text作用和Mustache比较相似：都是用于将数据显示在界面中</p><p>v-text通常情况下，接受一个string类型</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;message&#125;&#125;, QiQi<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&quot;message&quot;</span>&gt;</span>, QiQi<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 缺点：不够灵活，会被覆盖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好鸭&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h2><p>v-pre用于跳过这个元素和它子元素的编译过程，用于显示原本的Mustache语法。</p><p>比如下面的代码：</p><ul><li>第一个h2元素中的内容会被编译解析出来对应的内容</li><li>第二个h2元素中会直接显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好鸭&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h2><p>在某些情况下，我们浏览器可能会直接显然出未编译的Mustache标签。这个属性可以用来解决这个问题</p><p>cloak: 斗篷</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">display</span>: none;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-cloak</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="comment">//在vue解析之前，div中有一个属性v-cloak</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//在vue解析之后，div中没有一个属性c-cloak</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好鸭&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="🍇绑定属性"><a href="#🍇绑定属性" class="headerlink" title="🍇绑定属性"></a>🍇绑定属性</h1><h2 id="v-bind介绍"><a href="#v-bind介绍" class="headerlink" title="v-bind介绍"></a>v-bind介绍</h2><p>前面我们学习的指令主要作用是将值插入到我们<code>模板的内容</code>当中。</p><p>但是，除了内容需要动态来决定外，某些属性我们也希望动态来绑定。</p><ul><li>比如动态绑定a元素的href属性</li><li>比如动态绑定img元素的src属性</li></ul><p>这个时候，我们可以使用v-bind指令：</p><ul><li><strong>作用：</strong>动态绑定属性</li><li><strong>缩写：</strong>:</li><li><strong>预期：</strong>any (with argument) | Object (without argument)</li><li><strong>参数：</strong>attrOrProp (optional)</li></ul><p>下面，我们就具体来学习v-bind的使用。</p><h2 id="v-bind基础"><a href="#v-bind基础" class="headerlink" title="v-bind基础"></a>v-bind基础</h2><p>v-bind用于绑定一个或多个属性值，或者向另一个组件传递props值(这个学到组件时再介绍)</p><p>在开发中，有哪些属性需要动态进行绑定呢？</p><ul><li>还是有很多的，比如图片的链接src、网站的链接href、动态绑定一些类、样式等等</li></ul><p>比如通过Vue实例中的data绑定元素的src和href，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-cloak</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 错误的做法 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;img src=&quot;&#123;&#123;imgURL&#125;&#125;&quot; alt=&quot;&quot;&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 正确的做法：使用v-bind的指令 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgURL&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;aHref&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 语法糖的写法 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgURL&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;aHref&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好鸭&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      imgURL: <span class="string">&#x27;https://cn.vuejs.org/images/logo.png&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      aHref: <span class="string">&#x27;http://www.baidu.com&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-bind语法糖"><a href="#v-bind语法糖" class="headerlink" title="v-bind语法糖"></a>v-bind语法糖</h2><p>v-bind有一个对应的语法糖，也就是简写方式</p><p>在开发中，我们通常会使用语法糖的形式，因为这样更加简洁。</p><p>简写方式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgURL&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;aHref&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-bind绑定class（一）"><a href="#v-bind绑定class（一）" class="headerlink" title="v-bind绑定class（一）"></a>v-bind绑定class（一）</h2><p>很多时候，我们希望动态的来切换class，比如：</p><ul><li>当数据为某个状态时，字体显示红色。</li><li>当数据另一个状态时，字体显示黑色。</li></ul><p>绑定class有两种方式：</p><ul><li>对象语法</li><li>数组语法</li></ul><h2 id="v-bind绑定class（二）"><a href="#v-bind绑定class（二）" class="headerlink" title="v-bind绑定class（二）"></a>v-bind绑定class（二）</h2><p>绑定方式：对象语法</p><ul><li>对象语法的含义是:class后面跟的是一个对象。</li></ul><p>对象语法有下面这些用法：</p><ol><li><p>用法一：直接通过{}绑定一个类</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;&#x27;active&#x27;: isActive&#125;&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用法二：也可以通过判断，传入多个值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;&#x27;active&#x27;: isActive, &#x27;line&#x27;: isLine&#125;&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用法三：和普通的类同时存在，并不冲突</p><div class="tip warning"><p>注：如果isActive和isLine都为true，那么会有title/active/line三个类</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;&#x27;active&#x27;: isActive, &#x27;line&#x27;: isLine&#125;&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用法四：如果过于复杂，可以放在一个methods或者computed中</p><div class="tip warning"><p>注：classes是一个计算属性</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classes&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="v-bind绑定class（三）"><a href="#v-bind绑定class（三）" class="headerlink" title="v-bind绑定class（三）"></a>v-bind绑定class（三）</h2><p>绑定方式：数组语法</p><ul><li>数组语法的含义是:class后面跟的是一个数组。</li></ul><p>数组语法有下面这些用法：</p><ol><li><p>用法一：直接通过{}绑定一个类</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">&quot;[&#x27;active&#x27;]&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用法二：也可以传入多个值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">“[‘active’,</span> &#x27;<span class="attr">line</span>&#x27;]&quot;&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用法三：和普通的类同时存在，并不冲突</p><div class="tip warning"><p>注：会有title/active/line三个类</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">:class</span>=<span class="string">“[‘active’,</span> &#x27;<span class="attr">line</span>&#x27;]&quot;&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用法四：如果过于复杂，可以放在一个methods或者computed中</p><div class="tip warning"><p>注：classes是一个计算属性</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classes&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="v-bind绑定style（一）"><a href="#v-bind绑定style（一）" class="headerlink" title="v-bind绑定style（一）"></a>v-bind绑定style（一）</h2><p>我们可以利用v-bind:style来绑定一些CSS内联样式。</p><p>在写CSS属性名的时候，比如font-size</p><ul><li>我们可以使用驼峰式 (camelCase)  fontSize </li><li>或短横线分隔 (kebab-case，记得用单引号括起来) ‘font-size’</li></ul><p>绑定class有两种方式：</p><ul><li>对象语法</li><li>数组语法</li></ul><h2 id="v-bind绑定style（二）"><a href="#v-bind绑定style（二）" class="headerlink" title="v-bind绑定style（二）"></a>v-bind绑定style（二）</h2><p><strong>绑定方式一：对象语法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:style=&quot;&#123;color: currentColor, fontSize: fontSize + &#x27;px&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><p>style后面跟的是一个对象类型</p><ul><li>对象的key是CSS属性名称</li><li>对象的value是具体赋的值，值可以来自于data中的属性</li></ul><p><strong>绑定方式二：数组语法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;[baseStyles, overridingStyles]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style后面跟的是一个数组类型</li><li>多个值以，分割即可</li></ul><h1 id="🍈什么是计算属性？"><a href="#🍈什么是计算属性？" class="headerlink" title="🍈什么是计算属性？"></a>🍈什么是计算属性？</h1><p>我们知道，在模板中可以直接通过插值语法显示一些data中的数据。</p><p>但是在某些情况，我们可能需要对数据进行一些转化后再显示，或者需要将多个数据结合起来进行显示</p><ul><li>比如我们有firstName和lastName两个变量，我们需要显示完整的名称。</li><li>但是如果多个地方都需要显示完整的名称，我们就需要写多个 </li></ul><p>我们可以将上面的代码换成计算属性：</p><ul><li>OK，我们发现计算属性是写在实例的computed选项中的</li></ul><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424170203.png" alt="image-20210424170201978"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424170224.png" alt="image-20210424170222294"></p>          </div><h2 id="计算属性的复杂操作"><a href="#计算属性的复杂操作" class="headerlink" title="计算属性的复杂操作"></a>计算属性的复杂操作</h2><p>计算属性中也可以进行一些更加复杂的操作，比如下面的例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>总价格：&#123;&#123;totalPrice&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        books: [</span><br><span class="line"><span class="javascript">          &#123;<span class="attr">id</span>: <span class="number">110</span>, <span class="attr">name</span>: <span class="string">&#x27;Unix编码艺术&#x27;</span>, <span class="attr">price</span>: <span class="number">119</span>&#125;,</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">id</span>: <span class="number">111</span>, <span class="attr">name</span>: <span class="string">&#x27;代码大全&#x27;</span>, <span class="attr">price</span>: <span class="number">110</span>&#125;,</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">id</span>: <span class="number">112</span>, <span class="attr">name</span>: <span class="string">&#x27;深入理解计算机原理&#x27;</span>, <span class="attr">price</span>: <span class="number">99</span>&#125;,</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">id</span>: <span class="number">113</span>, <span class="attr">name</span>: <span class="string">&#x27;现代操作系统&#x27;</span>, <span class="attr">price</span>: <span class="number">88</span>&#125;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line"><span class="javascript">      <span class="comment">// 计算属性&#x27;</span></span></span><br><span class="line">      computed: &#123;</span><br><span class="line"><span class="javascript">        totalPrice: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> result = <span class="number">0</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.books.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">            result += <span class="built_in">this</span>.books[i].price</span></span><br><span class="line">          &#125;</span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> result</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="计算属性的setter和getter"><a href="#计算属性的setter和getter" class="headerlink" title="计算属性的setter和getter"></a>计算属性的setter和getter</h2><p>每个计算属性都包含一个getter和一个setter</p><ul><li>在上面的例子中，我们只是使用getter来读取。</li><li>在某些情况下，你也可以提供一个setter方法（不常用）。</li><li>在需要写setter的时候，代码如下：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="javascript">        firstName: <span class="string">&#x27;Kobe&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        lastName: <span class="string">&#x27;Bryant&#x27;</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="javascript">      <span class="comment">// 计算属性一般是没有set方法，只读属性.</span></span></span><br><span class="line">      computed: &#123;</span><br><span class="line">        fullName: &#123;</span><br><span class="line"><span class="javascript">          set: <span class="function"><span class="keyword">function</span> (<span class="params">newValue</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> names = newValue.split(<span class="string">&#x27; &#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.firstName = names[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.lastName = names[<span class="number">1</span>];</span></span><br><span class="line">          &#125;,</span><br><span class="line"><span class="javascript">          get: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27; &#x27;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line"><span class="javascript">        fullName: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27; &#x27;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="计算属性的缓存"><a href="#计算属性的缓存" class="headerlink" title="计算属性的缓存"></a>计算属性的缓存</h2><p>我们可能会考虑这样的一个问题：</p><ul><li><code>methods</code>和<code>computed</code>看起来都可以实现我们的功能，</li><li>那么为什么还要多一个计算属性这个东西呢？</li><li>原因：<code>计算属性会进行缓存</code>，如果多次使用时，<code>计算属性只会调用一次</code>。</li></ul><h1 id="🍉事件监听"><a href="#🍉事件监听" class="headerlink" title="🍉事件监听"></a>🍉事件监听</h1><p>在前端开发中，我们需要经常和用于交互。</p><ul><li>这个时候，我们就必须监听用户发生的时间，比如点击、拖拽、键盘事件等等</li><li>在Vue中如何监听事件呢？使用v-on指令</li></ul><p><strong>v-on介绍</strong></p><ul><li><strong>作用：</strong>绑定事件监听器</li><li><strong>缩写：</strong>@</li><li><strong>预期：</strong>Function | Inline Statement | Object</li><li><strong>参数：</strong>event</li></ul><p>下面，我们就具体来学习v-on的使用。</p><h2 id="v-on基础"><a href="#v-on基础" class="headerlink" title="v-on基础"></a>v-on基础</h2><p>这里，我们用一个监听按钮的点击事件，来简单看看v-on的使用</p><ul><li>下面的代码中，我们使用了v-on:click=”counter++”</li><li>另外，我们可以将事件指向一个在methods中定义的函数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>点击次数：&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;counter++&quot;</span>&gt;</span>按钮点击1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;btnClick&quot;</span>&gt;</span>按钮点击2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//语法糖：简写 v-on --&gt; @click</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//proxy</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            counter: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">btnClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.counter++</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="tip "><p>注：v-on也有对应的语法糖：</p></div><p>v-on:click可以写成@click</p><h2 id="v-on参数"><a href="#v-on参数" class="headerlink" title="v-on参数"></a>v-on参数</h2><p>当通过methods中定义方法，以供@click调用时，需要<strong>注意参数问题：</strong></p><p>情况一：如果该方法不需要额外参数，那么方法后的()可以不添加。</p><ul><li>但是注意：如果方法本身中有一个参数，那么会默认将原生事件event参数传递进去</li></ul><p>情况二：如果需要同时传入某个参数，同时需要event时，可以通过$event传入事件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 时间调用的方法没有参数 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btn1Click()&quot;</span>&gt;</span>按钮1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btn1Click&quot;</span>&gt;</span>按钮1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 在事件定义时，写函数时省略了小括号，但是方法本身是需要一个参数的时候，这个时候，VUE会默认将浏览器生成的event对象作为参数传入到方法 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btn2Click(123)&quot;</span>&gt;</span>按钮2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- undefined --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btn2Click()&quot;</span>&gt;</span>按钮2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- MouseEvent --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btn2Click&quot;</span>&gt;</span>按钮2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 方法定义时，我们需要event对象，同时又需要其他参数 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btn3Click&quot;</span>&gt;</span>按钮3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 在调用方法时，如何手动获取到浏览器参数的event对象：$event --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btn3Click(123, $event)&quot;</span>&gt;</span>按钮3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">     el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">     data: &#123;</span><br><span class="line"><span class="javascript">       message: <span class="string">&#x27;你好啊&#x27;</span></span></span><br><span class="line">     &#125;,</span><br><span class="line">     methods: &#123;</span><br><span class="line"><span class="javascript">       <span class="function"><span class="title">btn1Click</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">console</span>.log(<span class="string">&quot;btn1Click&quot;</span>);</span></span><br><span class="line">       &#125;,</span><br><span class="line"><span class="javascript">       <span class="function"><span class="title">btn2Click</span>(<span class="params">event</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">console</span>.log(<span class="string">&quot;--------&quot;</span>,event);</span></span><br><span class="line">       &#125;,</span><br><span class="line"><span class="javascript">       <span class="function"><span class="title">btn3Click</span>(<span class="params">abc, event</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">console</span>.log(<span class="string">&quot;+++++&quot;</span>, abc, event);</span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125;,</span><br><span class="line">   &#125;)</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-on修饰符"><a href="#v-on修饰符" class="headerlink" title="v-on修饰符"></a>v-on修饰符</h2><p>在某些情况下，我们拿到event的目的可能是进行一些事件处理。</p><p>Vue提供了修饰符来帮助我们方便的处理一些事件：</p><ul><li>.stop - 调用 event.stopPropagation()。</li><li>.prevent - 调用 event.preventDefault()。</li><li>.{keyCode | keyAlias} - 只当事件是从特定键触发时才触发回调。</li><li>.native - 监听组件根元素的原生事件。</li><li>.once - 只触发一次回调。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">&lt;!-- 1. .stop修饰符的使用 停止冒泡 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;divClick&quot;</span>&gt;</span></span><br><span class="line">     aaaaa</span><br><span class="line">     <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;btnClick&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 2. .prevent修饰符的使用 阻止默认行为 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;baidu&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;submitClick&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 3. .prevent修饰符的使用 阻止默认行为 没有表达式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 4. .监听某个键盘的键帽 键别名--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;keyUp&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;keyUp&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 5. .once修饰符的使用 点击回调只会触发一次--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;btn2Click&quot;</span>&gt;</span>.once<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="🍊条件判断"><a href="#🍊条件判断" class="headerlink" title="🍊条件判断"></a>🍊条件判断</h1><h2 id="v-if、v-else-if、v-else"><a href="#v-if、v-else-if、v-else" class="headerlink" title="v-if、v-else-if、v-else"></a>v-if、v-else-if、v-else</h2><p>v-if、v-else-if、v-else</p><ul><li>这三个指令与JavaScript的条件语句if、else、else if类似。</li><li>Vue的条件指令可以根据表达式的值在DOM中渲染或销毁元素或组件</li></ul><p>简单的案例演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;score&gt;=90&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score&gt;=80&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score&gt;=60&quot;</span>&gt;</span>及格<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span>不及格<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line">      score: 99,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>v-if的原理：</p><ul><li>v-if后面的条件为false时，对应的元素以及其子元素不会渲染。</li><li>也就是根本没有不会有对应的标签出现在DOM中。</li></ul><h2 id="条件渲染案例"><a href="#条件渲染案例" class="headerlink" title="条件渲染案例"></a>条件渲染案例</h2><p>我们来做一个简单的小案例：</p><p>用户再登录时，可以切换使用用户账号登录还是邮箱地址登录。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424172247.png" alt="image-20210424172246592"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;isUser&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span>用户账号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户账号&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span>&gt;</span>用户邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户邮箱&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleToggle&quot;</span>&gt;</span>切换类型<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">      el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="javascript">        isUser: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handleToggle</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.type = <span class="built_in">this</span>.type === <span class="string">&#x27;email&#x27;</span> ? <span class="string">&#x27;username&#x27;</span> : <span class="string">&#x27;email&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="案例小问题"><a href="#案例小问题" class="headerlink" title="案例小问题"></a>案例小问题</h2><p>小问题：</p><ul><li>如果我们在有输入内容的情况下，切换了类型，我们会发现文字依然显示之前的输入的内容。</li><li>但是按道理讲，我们应该切换到另外一个input元素中了。</li><li>在另一个input元素中，我们并没有输入内容。</li><li>为什么会出现这个问题呢？</li></ul><p>问题解答：</p><ul><li>这是因为Vue在进行DOM渲染时，出于性能考虑，会尽可能的复用已经存在的元素，而不是重新创建新的元素。</li><li>在上面的案例中，Vue内部会发现原来的input元素不再使用，直接作为else中的input来使用了。</li></ul><p>解决方案：</p><ul><li>如果我们不希望Vue出现类似重复利用的问题，可以给对应的input添加key</li><li>并且我们需要保证key的不同</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424172756.png" alt="image-20210424172754615"></p><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>v-show的用法和v-if非常相似，也用于决定一个元素是否渲染：</p><p><strong>v-if和v-show对比</strong></p><p>v-if和v-show都可以决定一个元素是否渲染，那么开发中我们如何选择呢？</p><ul><li>v-if当条件为false时，压根不会有对应的元素在DOM中。</li><li>v-show当条件为false时，仅仅是将元素的display属性设置为none而已。</li></ul><p>开发中如何选择呢？</p><ul><li>当需要在显示与隐藏之间切片很频繁时，使用v-show</li><li>当只有一次切换时，通过使用v-if</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424173010.png" alt="image-20210424173009137"></p><h1 id="🍋遍历循环"><a href="#🍋遍历循环" class="headerlink" title="🍋遍历循环"></a>🍋遍历循环</h1><h2 id="v-for遍历数组"><a href="#v-for遍历数组" class="headerlink" title="v-for遍历数组"></a>v-for遍历数组</h2><p>当我们有一组数据需要进行渲染时，我们就可以使用v-for来完成。</p><ul><li>v-for的语法类似于JavaScript中的for循环。</li><li>格式如下：item in items的形式。</li></ul><p>我们来看一个简单的案例：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424173332.png" alt="image-20210424173330040"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--1.在遍历的过程中,没有使用索引值(下标值)--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in names&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--2.在遍历的过程中, 获取索引值--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in names&quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      names: [<span class="string">&#x27;QiQi&#x27;</span>, <span class="string">&#x27;kobe&#x27;</span>, <span class="string">&#x27;james&#x27;</span>, <span class="string">&#x27;curry&#x27;</span>]</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果在遍历的过程中不需要使用索引值</p><ul><li>v-for=”movie in movies”</li><li>依次从movies中取出movie，并且在元素的内容中，我们可以使用Mustache语法，来使用movie</li></ul><p>如果在遍历的过程中，我们需要拿到元素在数组中的索引值呢？</p><ul><li>语法格式：v-for=(item, index) in items</li><li>其中的index就代表了取出的item在原数组的索引值。</li></ul><h2 id="v-for遍历对象"><a href="#v-for遍历对象" class="headerlink" title="v-for遍历对象"></a>v-for遍历对象</h2><p>v-for可以用户遍历对象：</p><p>比如某个对象中存储着你的个人信息，我们希望以列表的形式显示出来。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--1.在遍历对象的过程中, 如果只是获取一个值, 那么获取到的是value--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in info&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--2.获取key和value 格式: (value, key) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, key) in info&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;-&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--3.获取key和value和index 格式: (value, key, index) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, key, index) in info&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;-&#123;&#123;key&#125;&#125;-&#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line">      info: &#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&#x27;QiQi&#x27;</span>,</span></span><br><span class="line">        age: 18,</span><br><span class="line">        height: 1.88</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件的key属性"><a href="#组件的key属性" class="headerlink" title="组件的key属性"></a>组件的key属性</h2><p>官方推荐我们在使用v-for时，给对应的元素或组件添加上一个:key属性。</p><p>为什么需要这个key属性呢（了解）？</p><ul><li>这个其实和Vue的虚拟DOM的Diff算法有关系。</li><li>这里我们借用React’s diff algorithm中的一张图来简单说明一下：</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424173705.png" alt="image-20210424173702945"></p><p>当某一层有很多相同的节点时，也就是列表节点时，我们希望插入一个新的节点</p><ul><li>我们希望可以在B和C之间加一个F，Diff算法默认执行起来是这样的。</li><li>即把C更新成F，D更新成C，E更新成D，最后再插入E，是不是很没有效率？</li></ul><p>所以我们需要使用key来给每个节点做一个唯一标识</p><ul><li>Diff算法就可以正确的识别此节点</li><li>找到正确的位置区插入新的节点。</li></ul><p>所以一句话，<strong>key的作用主要是为了高效的更新虚拟DOM。</strong></p><h2 id="检测数组更新"><a href="#检测数组更新" class="headerlink" title="检测数组更新"></a>检测数组更新</h2><p>因为Vue是响应式的，所以当数据发生变化时，Vue会自动检测数据变化，视图会发生对应的更新。</p><p>Vue中包含了一组观察数组编译的方法，使用它们改变数组也会触发视图的更新。</p><ul><li>push()</li><li>pop()</li><li>shift()</li><li>unshift()</li><li>splice()</li><li>sort()</li><li>reverse()</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      letters: [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">btnClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 1.push方法</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.push(<span class="string">&#x27;aaa&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.push(<span class="string">&#x27;aaaa&#x27;</span>, <span class="string">&#x27;bbbb&#x27;</span>, <span class="string">&#x27;cccc&#x27;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 2.pop(): 删除数组中的最后一个元素</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.pop();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 3.shift(): 删除数组中的第一个元素</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.shift();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 4.unshift(): 在数组最前面添加元素</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.unshift()</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.unshift(<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;bbb&#x27;</span>, <span class="string">&#x27;ccc&#x27;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 5.splice作用: 删除元素/插入元素/替换元素</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 删除元素: 第二个参数传入你要删除几个元素(如果没有传,就删除后面所有的元素)</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 替换元素: 第二个参数, 表示我们要替换几个元素, 后面是用于替换前面的元素</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 插入元素: 第二个参数, 传入0, 并且后面跟上要插入的元素</span></span></span><br><span class="line">        splice(start)</span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.splice(<span class="number">1</span>, <span class="number">3</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;x&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.splice(<span class="number">1</span>, <span class="number">0</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 6.sort()</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.sort()</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 7.reverse()</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.reverse()</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 注意: 通过索引值修改数组中的元素</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters[<span class="number">0</span>] = <span class="string">&#x27;bbbbbb&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.letters.splice(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;bbbbbb&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">// set(要修改的对象, 索引值, 修改后的值)</span></span></span><br><span class="line"><span class="javascript">        Vue.set(<span class="built_in">this</span>.letters, <span class="number">0</span>, <span class="string">&#x27;bbbbbb&#x27;</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="🍌阶段案例"><a href="#🍌阶段案例" class="headerlink" title="🍌阶段案例"></a>🍌阶段案例</h1><h2 id="图书购物车"><a href="#图书购物车" class="headerlink" title="图书购物车"></a>图书购物车</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210424174219.png" alt="image-20210424174218236"></p><p><strong>代码实现：</strong></p><p>HTML:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;books.length&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>书籍名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>出版日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>购买数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in books&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price | showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;decrement(index)&quot;</span> <span class="attr">v-bind:disabled</span>=<span class="string">&quot;item.count &lt;= 1&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          &#123;&#123;item.count&#125;&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;increment(index)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeHandle(index)&quot;</span>&gt;</span>移除<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>总价格: &#123;&#123;totalPrice | showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span>购物车为空<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e9e9e9</span>;</span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">  <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e9e9e9</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5c6b77</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    books: [</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">1</span>,</span><br><span class="line">        name: <span class="string">&#x27;《算法导论》&#x27;</span>,</span><br><span class="line">        date: <span class="string">&#x27;2006-9&#x27;</span>,</span><br><span class="line">        price: <span class="number">85.00</span>,</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">2</span>,</span><br><span class="line">        name: <span class="string">&#x27;《UNIX编程艺术》&#x27;</span>,</span><br><span class="line">        date: <span class="string">&#x27;2006-2&#x27;</span>,</span><br><span class="line">        price: <span class="number">59.00</span>,</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">3</span>,</span><br><span class="line">        name: <span class="string">&#x27;《编程珠玑》&#x27;</span>,</span><br><span class="line">        date: <span class="string">&#x27;2008-10&#x27;</span>,</span><br><span class="line">        price: <span class="number">39.00</span>,</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">4</span>,</span><br><span class="line">        name: <span class="string">&#x27;《代码大全》&#x27;</span>,</span><br><span class="line">        date: <span class="string">&#x27;2006-3&#x27;</span>,</span><br><span class="line">        price: <span class="number">128.00</span>,</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="function"><span class="title">increment</span>(<span class="params">index</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.books[index].count++</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">decrement</span>(<span class="params">index</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.books[index].count--</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">removeHandle</span>(<span class="params">index</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.books.splice(index, <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    <span class="function"><span class="title">totalPrice</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.books.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, book</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> preValue + book.price * book.count</span><br><span class="line">      &#125;, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  filters: &#123;</span><br><span class="line">    <span class="function"><span class="title">showPrice</span>(<span class="params">price</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;¥&#x27;</span> + price.toFixed(<span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="🍍v-model"><a href="#🍍v-model" class="headerlink" title="🍍v-model"></a>🍍v-model</h1><h2 id="表单绑定v-model"><a href="#表单绑定v-model" class="headerlink" title="表单绑定v-model"></a>表单绑定v-model</h2><p>表单控件在实际开发中是非常常见的。特别是对于用户信息的提交，需要大量的表单。</p><p>Vue中使用v-model指令来实现表单元素和数据的双向绑定。</p><p>案例的解析：</p><ul><li>当我们在输入框输入内容时</li><li>因为input中的v-model绑定了message，所以会实时将输入的内容传递给message，message发生改变。</li><li>当message发生改变时，因为上面我们使用Mustache语法，将message的值插入到DOM中，所以DOM会发生响应的改变。</li><li>所以，通过v-model实现了双向的绑定。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好啊&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当然，我们也可以将v-model用于textarea元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 2. 用法二：绑定textarea元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    输入的内容是：&#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-model原理"><a href="#v-model原理" class="headerlink" title="v-model原理"></a>v-model原理</h2><p>v-model其实是一个语法糖，它的背后本质上是包含两个操作：</p><ul><li>1.v-bind绑定一个value属性</li><li>2.v-on指令给当前元素绑定input事件</li></ul><p>也就是说下面的代码：等同于下面的代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>等同于</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;message&quot;</span> <span class="attr">v-on:input</span>=<span class="string">&quot;message = $event.target.value&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-model：checkbox"><a href="#v-model：checkbox" class="headerlink" title="v-model：checkbox"></a>v-model：checkbox</h2><p>复选框分为两种情况：单个勾选框和多个勾选框</p><p>单个勾选框：</p><ul><li>v-model即为布尔值。</li><li>此时input的value并不影响v-model的值。</li></ul><p>多个复选框：</p><ul><li>当是多个复选框时，因为可以选中多个，所以对应的data中属性是一个数组。</li><li>当选中某一个时，就会将input的value添加到数组中。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--1.checkbox单选框--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;agree&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;agree&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;isAgree&quot;</span>&gt;</span>同意协议</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>是否选中: &#123;&#123;isAgree&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--2.checkbox多选框--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;篮球&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span>篮球</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;足球&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span>足球</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;乒乓球&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span>乒乓球</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;羽毛球&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span>羽毛球</span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>您的爱好是: &#123;&#123;hobbies&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">v-for</span>=<span class="string">&quot;item in originHobbies&quot;</span> <span class="attr">:for</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item&quot;</span> <span class="attr">:id</span>=<span class="string">&quot;item&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好啊&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      isAgree: <span class="literal">false</span>, <span class="comment">// 单选框</span></span></span><br><span class="line"><span class="javascript">      hobbies: [], <span class="comment">// 多选框,</span></span></span><br><span class="line"><span class="javascript">      originHobbies: [<span class="string">&#x27;篮球&#x27;</span>, <span class="string">&#x27;足球&#x27;</span>, <span class="string">&#x27;乒乓球&#x27;</span>, <span class="string">&#x27;羽毛球&#x27;</span>, <span class="string">&#x27;台球&#x27;</span>, <span class="string">&#x27;高尔夫球&#x27;</span>]</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-model：select"><a href="#v-model：select" class="headerlink" title="v-model：select"></a>v-model：select</h2><p>和checkbox一样，select也分单选和多选两种情况。</p><p>单选：只能选中一个值。</p><ul><li>v-model绑定的是一个值。</li><li>当我们选中option中的一个时，会将它对应的value赋值到mySelect中</li></ul><p>多选：可以选中多个值。</p><ul><li>v-model绑定的是一个数组。</li><li>当选中多个值时，就会将选中的option对应的value添加到数组mySelects中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--1.选择一个--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;abc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;苹果&quot;</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;香蕉&quot;</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;榴莲&quot;</span>&gt;</span>榴莲<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;葡萄&quot;</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>您选择的水果是: &#123;&#123;fruit&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--2.选择多个--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;abc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruits&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;苹果&quot;</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;香蕉&quot;</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;榴莲&quot;</span>&gt;</span>榴莲<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;葡萄&quot;</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>您选择的水果是: &#123;&#123;fruits&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line"><span class="javascript">      message: <span class="string">&#x27;你好啊&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      fruit: <span class="string">&#x27;香蕉&#x27;</span>,</span></span><br><span class="line">      fruits: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="值绑定"><a href="#值绑定" class="headerlink" title="值绑定"></a>值绑定</h2><p>初看Vue官方值绑定的时候，我很疑惑：what the hell is that？</p><p>但是仔细阅读之后，发现很简单，就是动态的给value赋值而已：</p><ul><li>我们前面的value中的值，可以回头去看一下，都是在定义input的时候直接给定的。</li><li>但是真实开发中，这些input的值可能是从网络获取或定义在data中的。</li><li>所以我们可以通过v-bind:value动态的给value绑定值。</li><li>这不就是v-bind吗？</li></ul><p>这不就是v-bind在input中的应用吗？搞的我看了很久，搞不清他想讲什么。</p><p>这里不再给出对应的代码，因为会用v-bind，就会值绑定的应用了。</p><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><p>lazy修饰符：</p><ul><li>默认情况下，v-model默认是在input事件中同步输入框的数据的。</li><li>也就是说，一旦有数据发生改变对应的data中的数据就会自动发生改变。</li><li>lazy修饰符可以让数据在失去焦点或者回车时才会更新</li></ul><p>number修饰符：</p><ul><li>默认情况下，在输入框中无论我们输入的是字母还是数字，都会被当做字符串类型进行处理。</li><li>但是如果我们希望处理的是数字类型，那么最好直接将内容当做数字处理。</li><li>number修饰符可以让在输入框中输入的内容自动转成数字类型</li></ul><p>trim修饰符：</p><ul><li>如果输入的内容首尾有很多空格，通常我们希望将其去除</li><li>trim修饰符可以过滤内容左右两边的空格</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--1.修饰符: lazy--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--2.修饰符: number--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;age&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;age&#125;&#125;-&#123;&#123;typeof age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--3.修饰符: trim--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>您输入的名字:&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>好啦，今天的VUE就学习到这里啦🍔~~</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习（一）</title>
      <link href="posts/92d9f86f.html"/>
      <url>posts/92d9f86f.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>最近在B站跟着coderwhy老师学习vue<br>原视频链接<a href='https://www.bilibili.com/video/BV15741177Eh?p=1&spm_id_from=pageDriver'>最全最新Vue、Vuejs教程，从入门到精通</a><br>根据老师的上课的情况，整理了笔记，大家都可以去看看coderwhy老师的视频呀<br>今天也是努力学习的一天</p></blockquote><h1 id="💪简单认识一下-Vuejs"><a href="#💪简单认识一下-Vuejs" class="headerlink" title="💪简单认识一下 Vuejs"></a>💪简单认识一下 Vuejs</h1><p><strong>Vue</strong> (读音 /vjuː/，类似于 view)，💡不要读错。</p><p><strong>Vue 是一个渐进式的框架，什么是渐进式的呢？</strong></p><ul><li><p>渐进式意味着你可以将Vue作为你应用的一部分嵌入其中，带来更丰富的交互体验。</p></li><li><p>或者如果你希望将更多的业务逻辑使用Vue实现，那么Vue的核心库以及其生态系统。</p></li><li><p>比如Core+Vue-router+Vuex，也可以满足你各种各样的需求。</p></li></ul><p><strong>Vue 有很多特点和 Web 开发中常见的高级功能</strong></p><ul><li><p>解耦视图和数据</p></li><li><p>可复用的组件</p></li><li><p>前端路由技术</p></li><li><p>状态管理</p></li><li><p>虚拟DOM</p></li></ul><p>这些特点，你不需要一个个去记住，我们在后面的学习和开发中都会慢慢体会到的，一些技术点我也会在后面进行讲解。</p><p><strong>🌱学习 Vuejs 的前提？</strong></p><ul><li><p>  从零学习 Vue 开发，并不需要你具备其他类似于 Angular、React，甚至是 jQuery 的经验。</p></li><li><p>  但是你需要具备一定的 HTML、CSS、JavaScript 基础。</p></li></ul><h1 id="Vue-js-安装"><a href="#Vue-js-安装" class="headerlink" title="Vue.js 安装"></a>Vue.js 安装</h1><p>使用一个框架，我们第一步要做什么呢？安装下载它<br>安装 Vue 的方式有很多：</p><ul><li>方式一：直接 CDN 引入<br>  你可以选择引入开发环境版本还是生产环境版本</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>  方式二：下载和引入<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">开发环境 https://vuejs.org/js/vue.js </span><br><span class="line">生产环境 https://vuejs.org/js/vue.min.js</span><br></pre></td></tr></table></figure></li><li>方式三：NPM 安装<br>  后续通过 webpack 和 CLI 的使用，我们使用该方式。</li></ul><h1 id="Vue-初体验"><a href="#Vue-初体验" class="headerlink" title="Vue 初体验"></a>Vue 初体验</h1><blockquote><p>我们来做我们的第一个 Vue 程序，体验一下 Vue 的响应式</p></blockquote><h2 id="Hello-Vuejs"><a href="#Hello-Vuejs" class="headerlink" title="Hello Vuejs"></a>Hello Vuejs</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue初体验<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//let(变量)/const(变量)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//编程范式：声明式编程</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&#x27;#app&#x27;</span>, <span class="comment">//用于挂在要管理的元素</span></span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    <span class="comment">//定义数据</span></span></span><br><span class="line"><span class="javascript">                    message: <span class="string">&#x27;你好啊，尤雨溪！&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;coderwhy&#x27;</span>,</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="comment">//原生JS的做法(编程范式：命令式编程)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//1.创建div元素，设置id属性</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//2.定义一个变量叫message</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//3.将message变量放在前面的div元素显示</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//4.修改message的数据：今天天气真不错!</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>代码做了什么事情？</strong></p><p>我们来阅读 JavaScript 代码，会发现创建了一个 Vue 对象。</p><p>创建 Vue 对象的时候，传入了一些 options：{}</p><ul><li>  {}中包含了 el 属性：该属性决定了这个 Vue 对象挂载到哪一个元素上，很明显，我们这里是挂载到了 id 为 app 的元素上</li><li>{}中包含了 data 属性：该属性中通常会存储一些数据<br>  这些数据可以是我们直接定义出来的，比如像上面这样。<br>  也可能是来自网络，从服务器加载的。<br>  浏览器执行代码的流程：</li><li>  执行到 10~13 行代码显示出对应的 HTML</li><li>  执行第 19 行代码创建 Vue 实例，并且对原 HTML 进行解析和修改。</li><li>  并且，目前我们的代码是可以做到响应式的。</li></ul><h2 id="Vue-列表显示"><a href="#Vue-列表显示" class="headerlink" title="Vue 列表显示"></a>Vue 列表显示</h2><p>现在，我们来展示一个更加复杂的数据：数据列表。</p><ul><li>  比如我们现在从服务器请求过来一个列表</li><li>希望展示到 HTML 中。<br>  HTML 代码中，使用 v-for 指令</li><li>该指令我们后面会详细讲解，这里先学会使用。<br>  是不是变得 So Easy，我们再也不需要在 JavaScript 代码中完成 DOM 的拼接相关操作了<br>  而且，更重要的是，它还是响应式的。</li><li>  也就是说，当我们数组中的数据发生改变时，界面会自动改变。</li><li>  依然让我们打开开发者模式的 console，来试一下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in movies&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            message: <span class="string">&#x27;你好啊&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            movies: [<span class="string">&#x27;星际穿越&#x27;</span>, <span class="string">&#x27;盗梦空间&#x27;</span>, <span class="string">&#x27;大话西游&#x27;</span>],</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423112905.png" alt="image-20210423112858638"></p><h2 id="案例：计数器"><a href="#案例：计数器" class="headerlink" title="案例：计数器"></a>案例：计数器</h2><blockquote><p>现在，我们来实现一个小的计数器</p><p>点击 + 计数器+1</p><p>点击 -  计数器 -1</p></blockquote><p>这里，我们又要使用新的指令和属性了</p><ul><li>新的属性：methods，该属性用于在Vue对象中定义方法。</li><li>新的指令：@click, 该指令用于监听某个元素的点击事件，并且需要指定当发生点击时，执行的方法(方法通常是methods中定义的方法)</li></ul><p>你可能会疑惑？</p><ul><li>这些@click是什么东西？</li><li>Vue对象中又是定义el/data/methods，到底都有哪些东西可以定义，以及它们的作用是什么？</li><li>这些疑惑在后续学习中都会一一解开。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前计数：&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;sub&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//语法糖：简写 v-on --&gt; @click</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//proxy</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line">        counter: 0,</span><br><span class="line"><span class="javascript">        message: <span class="string">&#x27;abc&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: obj,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;add被执行&quot;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.counter++</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            sub: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;sub被执行&quot;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.counter--</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="comment">// 1.拿button元素</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 2.添加监听事件</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Vue的MVVM"><a href="#Vue的MVVM" class="headerlink" title="Vue的MVVM"></a>Vue的MVVM</h1><h2 id="Vue中的MVVM"><a href="#Vue中的MVVM" class="headerlink" title="Vue中的MVVM"></a>Vue中的MVVM</h2><p><strong>什么是MVVM呢？</strong></p><ul><li>通常我们学习一个概念，最好的方式是去看维基百科(对，千万别看成了百度百科)</li><li><a href="https://zh.wikipedia.org/wiki/MVVM">https://zh.wikipedia.org/wiki/MVVM</a></li><li>维基百科的官方解释，我们这里不再赘述。</li></ul><p><strong>我们直接来看Vue的MVVM</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423114023.png" alt="image-20210423114021924"></p><p><strong>View层：</strong></p><ul><li>视图层</li><li>在我们前端开发中，通常就是DOM层。</li><li>主要的作用是给用户展示各种信息。</li></ul><p><strong>Model层：</strong></p><ul><li>数据层</li><li>数据可能是我们固定的死数据，更多的是来自我们服务器，从网络上请求下来的数据。</li><li>在我们计数器的案例中，就是后面抽取出来的obj，当然，里面的数据可能没有这么简单。</li></ul><p><strong>VueModel层：</strong></p><ul><li>视图模型层</li><li>视图模型层是View和Model沟通的桥梁。</li><li>一方面它实现了Data Binding，也就是数据绑定，将Model的改变实时的反应到View中</li><li>另一方面它实现了DOM Listener，也就是DOM监听，当DOM发生一些事件(点击、滚动、touch等)时，可以监听到，并在需要的情况下改变对应的Data。</li></ul><h2 id="计数器的MVVM"><a href="#计数器的MVVM" class="headerlink" title="计数器的MVVM"></a>计数器的MVVM</h2><ol><li><p><strong>计数器的MVVM</strong><br>我们的计数器中就有严格的MVVM思想</p><ul><li>View依然是我们的DOM</li><li>Model就是我们我们抽离出来的obj</li><li>ViewModel就是我们创建的Vue对象实例</li></ul><p>它们之间如何工作呢？</p><ul><li>首先ViewModel通过Data Binding让obj中的数据实时的在DOM中显示。</li><li>其次ViewModel通过DOM Listener来监听DOM事件，并且通过methods中的操作，来改变obj中的数据。</li></ul></li><li><p><strong>有了Vue帮助我们完成VueModel层的任务，在后续的开发，我们就可以专注于数据的处理，以及DOM的编写工作了</strong></p></li></ol><h1 id="Vue的options"><a href="#Vue的options" class="headerlink" title="Vue的options"></a>Vue的options</h1><h2 id="创建Vue实例传入的options"><a href="#创建Vue实例传入的options" class="headerlink" title="创建Vue实例传入的options"></a>创建Vue实例传入的options</h2><p>你会发现，我们在创建Vue实例的时候，传入了一个对象options。</p><p>这个options中可以包含哪些选项呢？</p><ul><li>详细解析： <a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E6%95%B0%E6%8D%AE">https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E6%95%B0%E6%8D%AE</a></li></ul><p>目前掌握这些选项：</p><ul><li><strong>el:</strong><br><code>类型：string | HTMLElement</code><br>作用：决定之后Vue实例会管理哪一个DOM。</li><li><strong>data:</strong><br><code>类型：Object | Function （组件当中data必须是一个函数）</code><br>作用：Vue实例对应的数据对象。</li><li><strong>methods:</strong><br><code>类型：&#123; [key: string]: Function &#125;</code><br>作用：定义属于Vue的一些方法，可以在其他地方调用，也可以在指令中使用。</li></ul><h1 id="Vue的生命周期"><a href="#Vue的生命周期" class="headerlink" title="Vue的生命周期"></a>Vue的生命周期</h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423121536.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423121751.png"></p><p>💭差不多就到这里啦~~</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>console的高级用法</title>
      <link href="posts/3444.html"/>
      <url>posts/3444.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>前几天在看<a href='https://limestart.cn/'>青柠起始页</a>的时候偶然间看到它的控制台居然可以这样👊</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428152217.png" alt="image-20210428152010692"></p><p>于是就萌生了学一波console方法的念头，今天正好有时间就来把这几天的学习成果记录一下😶</p></blockquote><h1 id="console的基本用法"><a href="#console的基本用法" class="headerlink" title="console的基本用法"></a>console的基本用法</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;最常见用法\n换行&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.error(<span class="string">&#x27;输出错误信息 会以红色显示&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.warn(<span class="string">&#x27;打印警告信息 会以黄色显示&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.info(<span class="string">&#x27;打印一般信息&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.clear();//清空上面的console显示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//进阶用法</span></span><br><span class="line"><span class="comment">//console.assert(bool,”info”) 如果bool为false 打印出info 否则不打印</span></span><br><span class="line"><span class="built_in">console</span>.assert(<span class="literal">false</span>, <span class="string">&#x27;判断为false才显示的信息&#x27;</span>);</span><br><span class="line"><span class="comment">//传入的对象或数组以表格方式显示</span></span><br><span class="line"><span class="built_in">console</span>.table([[<span class="string">&#x27;Violet&#x27;</span>, <span class="string">&#x27;Chen&#x27;</span>], [<span class="string">&#x27;好&#x27;</span>]]);</span><br><span class="line"><span class="comment">//打印 调用链 fn2()调用fn1()，fn1()调用fn()</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.trace(); &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123; fn(); &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>) </span>&#123; fn1(); &#125;</span><br><span class="line">fn2();</span><br><span class="line"></span><br><span class="line"><span class="comment">//格式化输出</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  console.log支持的格式标志有:</span></span><br><span class="line"><span class="comment">  %s       占位符</span></span><br><span class="line"><span class="comment">  %d 或 %i    整数</span></span><br><span class="line"><span class="comment">  %f       浮点数</span></span><br><span class="line"><span class="comment">  %o%O     object对象</span></span><br><span class="line"><span class="comment">  %c       css样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%d + %d = %d&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//%o%O打印dom节点时就不一样</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%o&#x27;</span>, <span class="built_in">document</span>.body);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%O&#x27;</span>, <span class="built_in">document</span>.body);</span><br><span class="line"><span class="comment">// %c 后面的内容，增加css样式</span></span><br><span class="line"><span class="comment">//附：console.log输出的超链接会被自动识别并加上灰色字体颜色和下划线的样式，而这个无法用%c覆盖</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;123 %c 456&#x27;</span>, <span class="string">&#x27;font-size:36px;color:red;&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;123 %c 4 https://qwq3.top 56 %c 789&#x27;</span>, <span class="string">&#x27;font-size:20px;color:#49b1f5;&#x27;</span>, <span class="string">&#x27;font-size：12px;color:#000&#x27;</span>);</span><br><span class="line"><span class="comment">//利用css样式加载图片</span></span><br><span class="line"><span class="comment">//没法直接设置width和height样式,line-height图片高度,再调padding</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%c &#x27;</span>, <span class="string">&#x27;background-image:url(&quot;https://cdn.jsdelivr.net/gh/waterchen520/cdn2@latest/qwq3.top.jpg&quot;);background-size:120% 120%;background-repeat:no-repeat;background-position:center center;line-height:60px;padding:30px 120px;&#x27;</span>);</span><br><span class="line"><span class="comment">//高级用法</span></span><br><span class="line"><span class="comment">//计时，单位毫秒</span></span><br><span class="line"><span class="built_in">console</span>.time();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> j = i * i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.timeEnd();</span><br><span class="line"><span class="comment">//统计代码或函数被调用了多少次</span></span><br><span class="line"><span class="keyword">var</span> fn_ = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.count(<span class="string">&#x27;hello world&#x27;</span>); &#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  fn_();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查看内存使用情况，是属性，不带括号</span></span><br><span class="line"><span class="comment">//console.memory;</span></span><br><span class="line"><span class="comment">//在浏览器开发者工具中使用</span></span><br><span class="line"><span class="comment">//分组输出，可嵌套</span></span><br><span class="line"><span class="built_in">console</span>.group(<span class="string">&#x27;分组1&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;语文&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;数学&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.group(<span class="string">&#x27;其他科目&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;化学&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;地理&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;历史&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.groupEnd(<span class="string">&#x27;其他科目&#x27;</span>);</span><br></pre></td></tr></table></figure><p>展开上面代码运行可以得到</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428120142.png" alt="image-20210428115728828"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428120133.png" alt="image-20210428115739014"></p><p>注意以上某些方法某些浏览器<psw>IE:没错就是我</psw>不支持</p><h1 id="console详解"><a href="#console详解" class="headerlink" title="console详解"></a>console详解</h1><p>让我们来看看谷歌浏览器提供的console方法的API <a href="https://developer.chrome.com/docs/devtools/console/">https://developer.chrome.com/docs/devtools/console/</a></p><p>我们来重写console，发现它里面有很多方法</p><h2 id="console-assert-expression-object"><a href="#console-assert-expression-object" class="headerlink" title="console.assert(expression, object)"></a>console.assert(expression, object)</h2><p>在被评估的表达式为 <code>false</code> 时向控制台写入一个错误。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greaterThan</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.assert(a &gt; b, &#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;a is not greater than b&quot;</span>,<span class="string">&quot;a&quot;</span>:a,<span class="string">&quot;b&quot;</span>:b&#125;);</span><br><span class="line">&#125;</span><br><span class="line">greaterThan(<span class="number">5</span>,<span class="number">6</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428123737.png" alt="image-20210428123729044"></p><h2 id="console-clear"><a href="#console-clear" class="headerlink" title="console.clear()"></a>console.clear()</h2><p>清除控制台。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.clear();1</span><br></pre></td></tr></table></figure><p>如果已启用 Preserve log 复选框，<code>console.clear()</code> 将停用。 不过，在控制台处于聚焦状态时，按 clear console 按钮或者输入 Ctrl+L 快捷键仍然有效。</p><h2 id="console-count-label"><a href="#console-count-label" class="headerlink" title="console.count(label)"></a>console.count(label)</h2><p>写入在同一行使用相同标签调用 <code>count()</code> 的次数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function login(name) &#123;</span><br><span class="line">  console.count(name + &#39; logged in&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428124056.png" alt="image-20210428124055455"></p><h2 id="console-debug-object-object-…"><a href="#console-debug-object-object-…" class="headerlink" title="console.debug(object [, object, …])"></a>console.debug(object [, object, …])</h2><p>与 <code>console.log()</code> 作用相同。</p><h2 id="console-dir-object"><a href="#console-dir-object" class="headerlink" title="console.dir(object)"></a>console.dir(object)</h2><p>输出以 JavaScript 形式表示的指定对象。如果正在记录的对象是 HTML 元素，将输出其以 DOM 形式表示的属性，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.dir(document.body);</span><br></pre></td></tr></table></figure><p>比console.log更加详细</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428124327.png" alt="image-20210428124245709"></p><h2 id="console-dirxml-object"><a href="#console-dirxml-object" class="headerlink" title="console.dirxml(object)"></a>console.dirxml(object)</h2><p>如果可以，输出 object 子级元素的 XML 表示形式，否则输出其 JavaScript 表示形式。 在 HTML 和 XML 元素上调用 <code>console.dirxml()</code> 等同于调用 <code>console.log()</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.dirxml(<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428124544.png" alt="image-20210428124543218"></p><h2 id="console-error-object-object-…"><a href="#console-error-object-object-…" class="headerlink" title="console.error(object [, object, …])"></a>console.error(object [, object, …])</h2><p>输出一条类似于 <code>console.log()</code> 的消息，将消息设置成错误样式，并在调用此方法的地方包含一个堆叠追踪。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.error(&#39;error: name is undefined&#39;);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428124716.png" alt="image-20210428124712716"></p><h2 id="console-group-object-object-…"><a href="#console-group-object-object-…" class="headerlink" title="console.group(object[, object, …])"></a>console.group(object[, object, …])</h2><p>启动一个带有可选标题的新日志组。以可视化方式将在 <code>console.group()</code> 后、<code>console.groupEnd()</code> 前发生的所有控制台输出组合在一起。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.group(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;first: &#x27;</span>, obj.first);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;middle: &#x27;</span>, obj.middle);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;last: &#x27;</span>, obj.last);</span><br><span class="line">  <span class="built_in">console</span>.groupEnd();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">name(&#123;<span class="string">&quot;first&quot;</span>:<span class="string">&quot;Wile&quot;</span>,<span class="string">&quot;middle&quot;</span>:<span class="string">&quot;E&quot;</span>,<span class="string">&quot;last&quot;</span>:<span class="string">&quot;Coyote&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428124818.png" alt="image-20210428124817440"></p><p>您还可以嵌套组：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.group(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;first: &#x27;</span>, obj.first);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;middle: &#x27;</span>, obj.middle);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;last: &#x27;</span>, obj.last);</span><br><span class="line">  <span class="built_in">console</span>.groupEnd();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doStuff</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.group(<span class="string">&#x27;doStuff()&#x27;</span>);</span><br><span class="line">  name(&#123;<span class="string">&quot;first&quot;</span>:<span class="string">&quot;Wile&quot;</span>,<span class="string">&quot;middle&quot;</span>:<span class="string">&quot;E&quot;</span>,<span class="string">&quot;last&quot;</span>:<span class="string">&quot;coyote&quot;</span>&#125;);</span><br><span class="line">  <span class="built_in">console</span>.groupEnd();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">doStuff();</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428124918.png" alt="image-20210428124917455"></p><h2 id="console-groupCollapsed-object-object-…"><a href="#console-groupCollapsed-object-object-…" class="headerlink" title="console.groupCollapsed(object[, object, …])"></a>console.groupCollapsed(object[, object, …])</h2><p>创建一个初始处于折叠状态而不是打开状态的新日志组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.groupCollapsed(<span class="string">&#x27;status&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;peekaboo, you can&#x27;t see me&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.groupEnd();</span><br></pre></td></tr></table></figure><h2 id="console-groupEnd"><a href="#console-groupEnd" class="headerlink" title="console.groupEnd()"></a>console.groupEnd()</h2><p>关闭日志组。相关示例请参阅 <code>console.group</code>。</p><h2 id="console-info-object-object-…"><a href="#console-info-object-object-…" class="headerlink" title="console.info(object [, object, …])"></a>console.info(object [, object, …])</h2><p>输出一条类似 <code>console.log()</code> 的消息，但同时在输出旁显示一个图标（带白色“i”的蓝色圆圈）。</p><h2 id="console-log-object-object-…"><a href="#console-log-object-object-…" class="headerlink" title="console.log(object [, object, …])"></a>console.log(object [, object, …])</h2><p>在控制台中显示一条消息。将一个或多个对象传递到此方法。每个对象都会进行评估并级联到一个由空格分隔的字符串中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Hello, Logs!&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="格式说明符"><a href="#格式说明符" class="headerlink" title="格式说明符"></a>格式说明符</h2><p>您传递的第一个对象可以包含一个或多个格式说明符。格式说明符由百分号 (%) 与紧跟其后面的一个字母组成，字母指示要应用的格式。</p><h2 id="console-profile-label"><a href="#console-profile-label" class="headerlink" title="console.profile([label])"></a>console.profile([label])</h2><p>启动一个带有可选标签的 JavaScript CPU 配置文件。要完成配置文件，请调用 <code>console.profileEnd()</code>。 每一个配置文件都会添加到 Profiles 面板中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">processPixels</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.profile(<span class="string">&quot;processPixels()&quot;</span>);</span><br><span class="line">  <span class="comment">// later, after processing pixels</span></span><br><span class="line">  <span class="built_in">console</span>.profileEnd();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="console-profileEnd"><a href="#console-profileEnd" class="headerlink" title="console.profileEnd()"></a>console.profileEnd()</h2><p>停止当前的 JavaScript CPU 分析会话（如果正在进行此会话），并将报告输出到 Profiles 面板中。</p><h2 id="console-time-label"><a href="#console-time-label" class="headerlink" title="console.time(label)"></a>console.time(label)</h2><p>启动一个具有关联标签的新计时器。使用相同标签调用 console.timeEnd() 时，定时器将停止，经过的时间将显示在控制台中。计时器值精确到亚毫秒。传递到 <code>time()</code> 和 <code>timeEnd()</code> 的字符串必须匹配，否则计时器不会结束。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.time(<span class="string">&quot;Array initialize&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1000000</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = array.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">  array[i] = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.timeEnd(<span class="string">&quot;Array initialize&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428125158.png" alt="image-20210428125156942"></p><h2 id="console-timeEnd-label"><a href="#console-timeEnd-label" class="headerlink" title="console.timeEnd(label)"></a>console.timeEnd(label)</h2><p>停止当前的计时器（如果正在运行一个计时器），并将计时器标签和经过的时间输出到控制台。</p><h2 id="console-timeStamp-label"><a href="#console-timeStamp-label" class="headerlink" title="console.timeStamp([label])"></a>console.timeStamp([label])</h2><p>在录制会话期间向 Timeline 添加一个事件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.timeStamp(<span class="string">&#x27;check out this custom timestamp thanks to console.timeStamp()!&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="console-trace-object"><a href="#console-trace-object" class="headerlink" title="console.trace(object)"></a>console.trace(object)</h2><p>从调用此方法的位置输出一个堆叠追踪。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.trace();</span><br></pre></td></tr></table></figure><h2 id="console-warn-object-object-…"><a href="#console-warn-object-object-…" class="headerlink" title="console.warn(object [, object, …])"></a>console.warn(object [, object, …])</h2><p>输出一条类似 <code>console.log()</code> 的消息，但同时在记录的消息旁显示一个黄色警告图标。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.warn(<span class="string">&#x27;user limit reached!&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428125553.png" alt="image-20210428125552530"></p><h1 id="重写简单的console方法"><a href="#重写简单的console方法" class="headerlink" title="重写简单的console方法"></a>重写简单的console方法</h1><p>我们常用的有 console.log、console.info、console.group、console.warn、console.error、console.profile、console.time，现在我们来试着重写console.log、console.info、console.group、console.warn、console.error这几个常用的，其他的类似但比较复杂。</p><p>第一步，搭一个结构，覆盖浏览器(chrome\ie)提供的console功能，这样直接引用此JS文件即可保证浏览器(主要是IE)中不出错：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">console</span>=&#123;</span><br><span class="line">  assert:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  clear:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  count:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  debug:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  dir:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  dirxml:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  exception:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  group:<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  groupCollapsed:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  groupEnd:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  info:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  log:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  memoryProfile:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  memoryProfileEnd:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  profile:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  profileEnd:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  table:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  time:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  timeEnd:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  timeStamp:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  trace:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  warn:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure><p>　　第二步，实现 console.log方法。在所实现的几个方法中这个是最复杂的。</p><p>　　从chrome的API中我们可以看到，console.log不仅仅可以输出信息，还提供了类似 string.Format的功能，原文地址：<a href="https://developer.chrome.com/docs/devtools/console/api/">https://developer.chrome.com/docs/devtools/console/api/</a></p><p>Here is the complete set of patterns that you may use for string substitution:</p><table><thead><tr><th>Pattern</th><th>Type</th></tr></thead><tbody><tr><td>%s</td><td>String</td></tr><tr><td>%d, %i</td><td>Integer (numeric formatting is not yet supported)</td></tr><tr><td>%f</td><td>Floating point number (numeric formatting is not yet supported)</td></tr><tr><td>%o</td><td>Object hyperlink</td></tr><tr><td>%c</td><td>Style formatting</td></tr></tbody></table><p>　　其中的%c比较特殊，是给输出添加样式的，比如我们在Chrome中这样写：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%cTest output&#x27;</span>, <span class="string">&#x27;color:white; background-color:blue&#x27;</span>);</span><br></pre></td></tr></table></figure><p>运行后的结果是这样的：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210428131135.png" alt="image-20210428131134505"></p><p>这里%c也可以跟 %s、%d等混用。</p><p>　　所以，在代码中我直接用replace进行替换，由于JS中的replace默认只替换第一个匹配项，这里刚好，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> args=<span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">   <span class="keyword">if</span>(args.length&gt;<span class="number">1</span>)&#123;</span><br><span class="line">       <span class="keyword">var</span> i=<span class="number">1</span>,hasstyle=<span class="literal">false</span>;</span><br><span class="line">       <span class="keyword">if</span>(args[<span class="number">0</span>].indexOf(<span class="string">&quot;%c&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">           args[<span class="number">0</span>]=args[<span class="number">0</span>].replace(<span class="regexp">/%c/</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">           i=<span class="number">2</span>;</span><br><span class="line">           hasstyle=<span class="literal">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(;i&lt;args.length;i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(<span class="regexp">/%s|%d|%i|%o/</span>.test(args[<span class="number">0</span>]))&#123;</span><br><span class="line">               args[<span class="number">0</span>]=args[<span class="number">0</span>].replace(<span class="regexp">/%s|%d|%i|%o/</span>,args[i]);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(i&lt;args.length)&#123;</span><br><span class="line">           args[<span class="number">0</span>]=args[<span class="number">0</span>]+<span class="string">&quot; &quot;</span>+args.slice(i).join(<span class="string">&quot; &quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(hasstyle)&#123;</span><br><span class="line">           consoleHelper.showlog(args[<span class="number">0</span>],args[<span class="number">1</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;</span><br><span class="line">           consoleHelper.showlog(args[<span class="number">0</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>(args.length==<span class="number">1</span>)&#123;</span><br><span class="line">       <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">0</span>] <span class="keyword">instanceof</span> <span class="built_in">Array</span>)&#123;</span><br><span class="line">           consoleHelper.showlog(<span class="string">&quot;[&quot;</span>+args[<span class="number">0</span>]+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">0</span>] <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">           consoleHelper.showlog(args[<span class="number">0</span>],<span class="literal">null</span>,<span class="string">&quot;console_log_function&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;</span><br><span class="line">           consoleHelper.showlog(args[<span class="number">0</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">       consoleHelper.showlog(<span class="string">&quot;&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>　由于console.log可以接受多个参数，且个数不确定，所以这里直接没有写形参。对于%c虽然Chrome中写在中间也是有效的，这里为了简单直接只对写在开头的有效。代码中先把参数转换为数组，然后对数组进行分情况处理。</p><p>　　当参数个数大于1时，对后面的参数用replace进行替换，然后把剩下的参数连接(join)起来进行输出。</p><p>　　当参数个数为1时，还要分两种情况，一是数组，二是方法。对于数组，按Chrome中的格式，在两端加中括号，对于函数，把字的颜色变为绿色</p><p>　　当参数个数为0时，直接输出空字符串</p><p>　　后面的consoleHelper.showlog是为了输出方便另外写的一个方法，在这个方法中把各种调试信息的结果显示在页面上的一个div(如果存在)中。</p><p>　　其他几个方法的思路跟这个差不多，只是样式不同，功能比这个简单，直接把参数连接起来输出即可。</p><p>　<strong>整个console类代码如下：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">console</span>=&#123;</span><br><span class="line">assert:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">clear:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">count:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">debug:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">dir:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">dirxml:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> args=<span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">    consoleHelper.showerror(args.join(<span class="string">&quot; &quot;</span>));</span><br><span class="line">&#125;,</span><br><span class="line">exception:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">group:<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    consoleHelper.showgroup(name);</span><br><span class="line">&#125;,</span><br><span class="line">groupCollapsed:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">groupEnd:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">info:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> args=<span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">if</span>(args.length==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">0</span>] <span class="keyword">instanceof</span> <span class="built_in">Array</span>)&#123;</span><br><span class="line">            consoleHelper.showinfo(<span class="string">&quot;[&quot;</span>+args[<span class="number">0</span>]+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">0</span>] <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">            consoleHelper.showinfo(args[<span class="number">0</span>],<span class="string">&quot;console_log_function&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            consoleHelper.showinfo(args[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        consoleHelper.showinfo(args.join(<span class="string">&quot; &quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">log:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> args=<span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">if</span>(args.length&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">1</span>,hasstyle=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(args[<span class="number">0</span>].indexOf(<span class="string">&quot;%c&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">            args[<span class="number">0</span>]=args[<span class="number">0</span>].replace(<span class="regexp">/%c/</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">            i=<span class="number">2</span>;</span><br><span class="line">            hasstyle=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(;i&lt;args.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="regexp">/%s|%d|%i|%o/</span>.test(args[<span class="number">0</span>]))&#123;</span><br><span class="line">                args[<span class="number">0</span>]=args[<span class="number">0</span>].replace(<span class="regexp">/%s|%d|%i|%o/</span>,args[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;args.length)&#123;</span><br><span class="line">            args[<span class="number">0</span>]=args[<span class="number">0</span>]+<span class="string">&quot; &quot;</span>+args.slice(i).join(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(hasstyle)&#123;</span><br><span class="line">            consoleHelper.showlog(args[<span class="number">0</span>],args[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            consoleHelper.showlog(args[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(args.length==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">0</span>] <span class="keyword">instanceof</span> <span class="built_in">Array</span>)&#123;</span><br><span class="line">            consoleHelper.showlog(<span class="string">&quot;[&quot;</span>+args[<span class="number">0</span>]+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">0</span>] <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">            consoleHelper.showlog(args[<span class="number">0</span>],<span class="literal">null</span>,<span class="string">&quot;console_log_function&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            consoleHelper.showlog(args[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        consoleHelper.showlog(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">memoryProfile:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">memoryProfileEnd:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">profile:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">profileEnd:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">table:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">time:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">timeEnd:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">timeStamp:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">trace:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;,</span><br><span class="line">warn:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> args=<span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">if</span>(args.length==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">0</span>] <span class="keyword">instanceof</span> <span class="built_in">Array</span>)&#123;</span><br><span class="line">            consoleHelper.showwarn(<span class="string">&quot;[&quot;</span>+args[<span class="number">0</span>]+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">0</span>] <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">            consoleHelper.showwarn(args[<span class="number">0</span>],<span class="string">&quot;console_log_function&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            consoleHelper.showwarn(args[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        consoleHelper.showwarn(args.join(<span class="string">&quot; &quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>consoleHelper代码如下：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> consoleHelper=&#123;</span><br><span class="line">showlog:<span class="function"><span class="keyword">function</span>(<span class="params">val,style,cla</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cla)&#123;</span><br><span class="line">        cla=<span class="string">&quot;console_log &quot;</span>+cla;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cla=<span class="string">&quot;console_log&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.show(val,style,cla);</span><br><span class="line">&#125;,</span><br><span class="line">showinfo:<span class="function"><span class="keyword">function</span>(<span class="params">val,cla</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cla)&#123;</span><br><span class="line">        cla=<span class="string">&quot;console_info &quot;</span>+cla;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cla=<span class="string">&quot;console_info&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.show(val,<span class="literal">null</span>,cla);</span><br><span class="line">&#125;,            </span><br><span class="line">showwarn:<span class="function"><span class="keyword">function</span>(<span class="params">val,cla</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cla)&#123;</span><br><span class="line">        cla=<span class="string">&quot;console_warn &quot;</span>+cla;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cla=<span class="string">&quot;console_warn&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.show(val,<span class="literal">null</span>,cla);</span><br><span class="line">&#125;,</span><br><span class="line">showerror:<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.show(val,<span class="literal">null</span>,<span class="string">&quot;console_error&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line">showgroup:<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!val)&#123;</span><br><span class="line">        val=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.show(val+<span class="string">&quot;:&quot;</span>,<span class="literal">null</span>,<span class="string">&quot;console_group&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line">show:<span class="function"><span class="keyword">function</span>(<span class="params">val,style,cla</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">&quot;showconsole&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(div.setAttribute)&#123;</span><br><span class="line">            <span class="keyword">if</span>(style)&#123;</span><br><span class="line">                div.setAttribute(<span class="string">&quot;style&quot;</span>,style);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(style)&#123;</span><br><span class="line">                div=<span class="built_in">document</span>.createElement(<span class="string">&quot;&lt;div style=&quot;</span>+style+<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cla)&#123;</span><br><span class="line">            div.className=cla;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> oText=<span class="built_in">document</span>.createTextNode(val);</span><br><span class="line">        div.appendChild(oText);</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;showconsole&quot;</span>).appendChild(div);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>注：如果想在页面中看到调试信息，直接在页面上添加一个id 为 showconsole 的隐藏的div即可。</code></p><p><strong>样式(尽量跟Chrome保持一致)：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.console_log</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>:-<span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.console_info</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>:-<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;这里是info方法的小图标&quot;</span>) no-repeat scroll <span class="number">0</span> <span class="number">1px</span> <span class="number">#EBF5FF</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.console_warn</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>:-<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;这里是warn方法的小图标&quot;</span>) no-repeat scroll <span class="number">0</span> <span class="number">1px</span> <span class="number">#FFFFC8</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.console_error</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#FF0000</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>:-<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;这里是error方法的小图标&quot;</span>) no-repeat scroll <span class="number">0</span> <span class="number">1px</span> <span class="number">#FFEBEB</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.console_group</span>&#123;</span><br><span class="line">    <span class="attribute">margin-top</span>:<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>:bolder;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.console_log_function</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里为了演示方便，三个小图标直接预留了位置，大家用时可以换成图片地址。</p><h1 id="代码实现案例"><a href="#代码实现案例" class="headerlink" title="代码实现案例"></a>代码实现案例</h1><p>如果只需要一个简单的，类似我博客里的这种，你只需要写一个js</p><p>下面是本博客控制台的js源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> now1 = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createtime1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> grt = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&quot;04/01/2021 00:00:00&quot;</span>); <span class="comment">//此处修改你的建站时间或者网站上线时间 </span></span><br><span class="line">  now1.setTime(now1.getTime() + <span class="number">250</span>);</span><br><span class="line">  <span class="keyword">var</span> days = (now1 - grt) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>;</span><br><span class="line">  <span class="keyword">var</span> dnum = <span class="built_in">Math</span>.floor(days);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> ascll = [<span class="string">`欢迎来到Violet\`Blog!`</span>, <span class="string">`生活明朗, 万物可爱`</span>, <span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  ██╗   ██╗██╗ ██████╗ ██╗     ███████╗████████╗</span></span><br><span class="line"><span class="string">  ██║   ██║██║██╔═══██╗██║     ██╔════╝╚══██╔══╝</span></span><br><span class="line"><span class="string">  ██║   ██║██║██║   ██║██║     █████╗     ██║   </span></span><br><span class="line"><span class="string">  ╚██╗ ██╔╝██║██║   ██║██║     ██╔══╝     ██║   </span></span><br><span class="line"><span class="string">   ╚████╔╝ ██║╚██████╔╝███████╗███████╗   ██║   </span></span><br><span class="line"><span class="string">    ╚═══╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝   ╚═╝   </span></span><br><span class="line"><span class="string">                                              </span></span><br><span class="line"><span class="string">`</span>, <span class="string">&#x27;Violet`Blog 已上线&#x27;</span>, dnum, <span class="string">&#x27;天&#x27;</span>, <span class="string">&#x27;©2021 By Violet&#x27;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(</span><br><span class="line">    <span class="built_in">console</span>.log.bind(</span><br><span class="line">      <span class="built_in">console</span>, <span class="string">`\n%c<span class="subst">$&#123;ascll[<span class="number">0</span>]&#125;</span> %c <span class="subst">$&#123;ascll[<span class="number">1</span>]&#125;</span> %c <span class="subst">$&#123;ascll[<span class="number">2</span>]&#125;</span> %c<span class="subst">$&#123;ascll[<span class="number">3</span>]&#125;</span>%c <span class="subst">$&#123;ascll[<span class="number">4</span>]&#125;</span>%c <span class="subst">$&#123;ascll[<span class="number">5</span>]&#125;</span>\n\n%c <span class="subst">$&#123;ascll[<span class="number">6</span>]&#125;</span>\n`</span></span><br><span class="line">      , <span class="string">&#x27;color:#49b1f5&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;color:#49b1f5&#x27;</span>, <span class="string">&#x27;color:#49b1f5&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;color:#49b1f5&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createtime1();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createtime2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ascll2 = [<span class="string">`NCC2-036`</span></span><br><span class="line">    , <span class="string">`调用前置摄像头拍照成功，识别为【小笨蛋】.`</span></span><br><span class="line">    , <span class="string">`Photo captured: `</span></span><br><span class="line">    , <span class="string">`  `</span>]</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(</span><br><span class="line">    <span class="built_in">console</span>.log.bind(</span><br><span class="line">      <span class="built_in">console</span>, <span class="string">`%c <span class="subst">$&#123;ascll2[<span class="number">0</span>]&#125;</span> %c <span class="subst">$&#123;ascll2[<span class="number">1</span>]&#125;</span> %c \n<span class="subst">$&#123;ascll2[<span class="number">2</span>]&#125;</span> %c\n<span class="subst">$&#123;ascll2[<span class="number">3</span>]&#125;</span>\n`</span>,</span><br><span class="line">      <span class="string">&#x27;color:white; background-color:#4fd953&#x27;</span></span><br><span class="line">      , <span class="string">&#x27;&#x27;</span></span><br><span class="line">      , <span class="string">&#x27;&#x27;</span></span><br><span class="line">      , <span class="string">&#x27;background:url(&quot;https://cdn.jsdelivr.net/gh/waterchen520/cdn2@latest/tinggge.gif&quot;) no-repeat;font-size:450%&#x27;</span></span><br><span class="line">    )</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(</span><br><span class="line">    <span class="built_in">console</span>.log.bind(</span><br><span class="line">      <span class="built_in">console</span>, <span class="string">&#x27;%c WELCOME %c 你好，小笨蛋.&#x27;</span>, <span class="string">&#x27;color:white; background-color:#4f90d9&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(</span><br><span class="line">    <span class="built_in">console</span>.warn.bind(</span><br><span class="line">      <span class="built_in">console</span>, <span class="string">&#x27;%c ⚡ Powered by Violet %c 你正在访问 Violet 的博客.&#x27;</span>, <span class="string">&#x27;color:white; background-color:#f0ad4e&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(</span><br><span class="line">    <span class="built_in">console</span>.log.bind(</span><br><span class="line">      <span class="built_in">console</span>, <span class="string">&#x27;%c W23-12 %c 你已打开控制台.&#x27;</span>, <span class="string">&#x27;color:white; background-color:#4f90d9&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">setTimeout</span>(</span><br><span class="line">    <span class="built_in">console</span>.warn.bind(</span><br><span class="line">      <span class="built_in">console</span>, <span class="string">&#x27;%c S013-782 %c 你现在正处于监控中.&#x27;</span>, <span class="string">&#x27;color:white; background-color:#d9534f&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">createtime2();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; &#125;</span><br></pre></td></tr></table></figure><p>写下这篇博客的时候📌，已经忘记参考地址是哪里了，算是一个汇总吧，参考地址<psw>百度</psw></p><p>啦啦啦~</p><p>我一直想从你的窗子里看月亮。💡~</p>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弹性盒子</title>
      <link href="posts/eadb39c4.html"/>
      <url>posts/eadb39c4.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>弹性盒模型的一些知识</p></blockquote><h1 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h1><p>弹性盒模型（ <code>Flexible Box</code> 或 <code>FlexBox</code>）是一个 CSS3 新增布局模块，官方称为 CSS Flexible Box Layout Module，用于实现容器里项目的<code>对齐、方向、排序（即使在项目大小位置、动态生成的情况）, 分配空白空间</code> 。弹性盒模型最大的特性在于，能够<code>动态修改子元素的宽度和高度</code>，以满足在不同尺寸屏幕下的恰当布局。</p><p>Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p><p>任何一个容器都可以指定为 Flex 布局。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>行内元素也可以使用 Flex 布局。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  display: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Webkit 内核的浏览器，必须加上<code>-webkit</code>前缀。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，设为 Flex 布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p><h1 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h1><p>弹性盒子是由<code>弹性容器（flex container）</code>和弹性<code>子元素（flex item）</code>组成，弹性盒子有一个<code>主轴</code>（main axis）和一个<code>纵轴</code>（cross axis），弹性子元素沿着主轴依次排列 ，<code>侧轴垂直于主轴</code>。弹性容器的主轴开始（main start）、主轴结束（main end）和侧轴开始（cross start）、侧轴结束（cross end）代表了弹性子元素排列的<code>起始和结束位置</code>。具体可以看下面的图。</p><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code>。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423102036.png" alt="bg2015071004"></p><h1 id="属性分类"><a href="#属性分类" class="headerlink" title="属性分类"></a>属性分类</h1><h2 id="弹性容器的相关属性"><a href="#弹性容器的相关属性" class="headerlink" title="弹性容器的相关属性"></a>弹性容器的相关属性</h2><blockquote><ul><li>flex-direction</li><li>flex-wrap</li><li>flex-flow</li><li>justify-content</li><li>align-items</li><li>align-content</li></ul></blockquote><table><thead><tr><th>属性</th><th>属性说明</th></tr></thead><tbody><tr><td>flex-direction</td><td>设置主轴方向，确定弹性子元素的排列方式</td></tr><tr><td>flex-wrap</td><td>当弹性子元素超出弹性容器范围时是否换行</td></tr><tr><td>flex-flow</td><td>flex-direction 和 flex-wrap 的快捷方式，复合属性</td></tr><tr><td>justify-content</td><td>设置弹性子元素主轴上的对齐方式</td></tr><tr><td>align-items</td><td>设置弹性子元素侧轴上的对齐方式</td></tr><tr><td>align-content</td><td>侧轴上有空白时且有多行时，设置弹性子元素侧轴的对齐方式</td></tr></tbody></table><h3 id="flex-direction-属性"><a href="#flex-direction-属性" class="headerlink" title="flex-direction 属性"></a>flex-direction 属性</h3><blockquote><p>使用方法：<code>flex-direction:row |row-reverse |column |column-reverse</code></p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>row（默认值）</td><td>主轴为水平方向。排序方向与页面的文档顺序相同。如果文档顺序是 ltr，则排列顺序是从左到右；如果文档顺序是 rtl，则排列顺序是从右到左。</td></tr><tr><td>row-reverse</td><td>主轴为水平方向。排序方向与页面的文档顺序相反。</td></tr><tr><td>column</td><td>主轴为垂直方向。排列顺序为从上到下</td></tr><tr><td>column-reverse</td><td>主轴为垂直方向。排列顺序为从下到上</td></tr></tbody></table><p>其属性的效果图如下：<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423104745.png" alt="flex-direction"></p><h3 id="flex-wrap-属性"><a href="#flex-wrap-属性" class="headerlink" title="flex-wrap 属性"></a>flex-wrap 属性</h3><blockquote><p>使用方法：flex-wrap: nowrap | wrap | wrap-reverse</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>nowrap（默认值）</td><td>溢出时不换行</td></tr><tr><td>wrap</td><td>溢出时自动换行</td></tr><tr><td>wrap-reverse</td><td>溢出时自动换行，翻转排列</td></tr></tbody></table><p>其效果图如下：<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423104955.png" alt="flex-wrap"></p><h3 id="flex-flow-属性"><a href="#flex-flow-属性" class="headerlink" title="flex-flow 属性"></a>flex-flow 属性</h3><blockquote><p>使用方法：flex-flow: [flex-direction] || [flex-wrap]</p><p>含义：复合属性（flex-direction 和 flex-wrap），设置弹性子元素的排列方式</p></blockquote><h3 id="justify-content-属性"><a href="#justify-content-属性" class="headerlink" title="justify-content 属性"></a>justify-content 属性</h3><blockquote><p>使用方法：justify-content: flex-start | flex-end | center | space-between | space-around</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>flex-start（默认值）</td><td>主轴开始对齐，主轴为横轴，ltr 环境下，左对齐</td></tr><tr><td>flex-end</td><td>主轴结束对齐，主轴为横轴，ltr 环境下，右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr><tr><td>space-between</td><td>第一个、最后一个对齐弹性容器的边缘，其余均匀分布</td></tr><tr><td>space-around</td><td>全部均匀分布</td></tr></tbody></table><p>其效果图如下：<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423105155.png" alt="justify-content"></p><h3 id="align-items-属性"><a href="#align-items-属性" class="headerlink" title="align-items 属性"></a>align-items 属性</h3><blockquote><p>使用方法：align-items: flex-start | flex-end | center | baseline | stretch</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>flex-start</td><td>侧轴开始对齐，主轴为横轴，顶对齐</td></tr><tr><td>flex-end</td><td>侧轴结束对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr><tr><td>baseline</td><td>基线对齐</td></tr><tr><td>stretch（默认值）</td><td>从侧轴开始到侧轴结束铺满整个侧轴</td></tr></tbody></table><p>其效果图如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423110112.png" alt="align-items"></p><h3 id="align-content-属性"><a href="#align-content-属性" class="headerlink" title="align-content 属性"></a>align-content 属性</h3><blockquote><p>使用方法：align-content: flex-start | flex-end | center | space-between | space-around | stretch</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>flex-start</td><td>主轴开始对齐，主轴为横轴，ltr 环境下，左对齐</td></tr><tr><td>flex-end</td><td>主轴结束对齐，主轴为横轴，ltr 环境下，右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr><tr><td>space-between</td><td>第一个、最后一个对齐弹性容器的边缘，其余均匀分布</td></tr><tr><td>space-around</td><td>全部均匀分布</td></tr><tr><td>stretch（默认值）</td><td>各行伸展以占用剩余空间。如果剩余空间是负数，该值等效于 flex-start</td></tr></tbody></table><p>其效果图如下：<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423110150.png" alt="align-content"></p><h2 id="弹性子元素的相关属性"><a href="#弹性子元素的相关属性" class="headerlink" title="弹性子元素的相关属性"></a>弹性子元素的相关属性</h2><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>order</td><td>控制弹性容器里子元素的顺序，数值小的排在前面，可以为负值</td></tr><tr><td>flex-grow</td><td>设置弹性子元素的扩展比率</td></tr><tr><td>flex-shrink</td><td>设置弹性子元素的收缩比率</td></tr><tr><td>flex-basis</td><td>指定弹性子元素伸缩前的默认大小值，相当于 width 和 height 属性</td></tr><tr><td>flex</td><td>flex-grow，flex-shrink 和 flex-basis 属性的复合属性</td></tr><tr><td>align-self</td><td>允许独立的弹性子元素覆盖弹性容器的默认对齐设置（align-items）</td></tr></tbody></table><h3 id="order-属性"><a href="#order-属性" class="headerlink" title="order 属性"></a>order 属性</h3><blockquote><p>使用方法：order: integer number</p></blockquote><p>​    其属性效果图如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423110346.png" alt="order"></p><h3 id="flex-grow-属性"><a href="#flex-grow-属性" class="headerlink" title="flex-grow 属性"></a>flex-grow 属性</h3><blockquote><p>使用方法：flex-grow: number</p><p>含义：设置弹性子元素的扩展比率，不允许为负值，默认值为 0。根据弹性盒子元素所设置的扩展因子作为比率来分配剩余空间。</p></blockquote><p>其属性效果图如下：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/flex-grow.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423110414.png" alt="flex-grow"></a></p><h3 id="flex-shrink-属性"><a href="#flex-shrink-属性" class="headerlink" title="flex-shrink 属性"></a>flex-shrink 属性</h3><blockquote><p>使用方法：flex-shrink: number</p><p>含义：设置弹性子元素的收缩比率，不允许为负值，默认值为 1。根据弹性盒子元素所设置的扩展因子作为比率来收缩空间。</p></blockquote><p>其属性效果图如下：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/flex-shrink.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/flex-shrink.png" alt="flex-shrink"></a></p><h3 id="flex-basis-属性"><a href="#flex-basis-属性" class="headerlink" title="flex-basis 属性"></a>flex-basis 属性</h3><blockquote><p>使用方法：flex-basis:|| auto</p><p>含义：设置弹性子元素的伸缩基准值，不允许为负值。默认值为 auto，无特定宽度（高度）。</p></blockquote><h3 id="flex-属性"><a href="#flex-属性" class="headerlink" title="flex 属性"></a>flex 属性</h3><blockquote><p>使用方法：flex: none | [flex-grow] || [flex-shrink] || [flex-basis</p><p>含义：复合属性，设置弹性子元素的如何分配空间</p></blockquote><h3 id="align-self-属性"><a href="#align-self-属性" class="headerlink" title="align-self 属性"></a>align-self 属性</h3><blockquote><p>使用方法：auto | flex-start | flex-end | center | baseline | stretch</p><p>含义：设置弹性子元素的在侧轴上的对齐方式，与 align-items 相同。设置某个弹性子元素的对立对齐方式。</p></blockquote><p>其属性效果图如下：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/align-self.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423110645.png" alt="align-self"></a></p><h2 id="多列属性详解"><a href="#多列属性详解" class="headerlink" title="多列属性详解"></a>多列属性详解</h2><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>  多列（Multi-column）是一个 CSS3 新增布局模块，官方称为 Multiple column layout，可以比较轻松的实现多列布局，比如图片瀑布流。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/pupuliu.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210423111627.png" alt="Multi-column"></a></p><h3 id="属性一览"><a href="#属性一览" class="headerlink" title="属性一览"></a>属性一览</h3><table><thead><tr><th>属性</th><th>属性说明</th></tr></thead><tbody><tr><td>columns</td><td>复合属性（column-width 和 column-count），设置宽度和列数</td></tr><tr><td>column-width</td><td>设置每列的宽度</td></tr><tr><td>column-count</td><td>设置列数</td></tr><tr><td>column-gap</td><td>设置列之间的间隙</td></tr><tr><td>column-rule</td><td>复合属性（column-rule-width、column-rule-style 和 column-rule-color），设置列之间的边框样式</td></tr><tr><td>column-fill</td><td>设置列的高度是否统一</td></tr><tr><td>column-span</td><td>设置是否横跨所有列</td></tr></tbody></table><h4 id="column-width-属性"><a href="#column-width-属性" class="headerlink" title="column-width 属性"></a>column-width 属性</h4><blockquote><p>使用方法：column-width: length | auto</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>auto（默认值）</td><td>浏览器决定列的宽度</td></tr><tr><td>length</td><td>用长度值来定义列宽。不允许负值</td></tr></tbody></table><h4 id="column-count-属性"><a href="#column-count-属性" class="headerlink" title="column-count 属性"></a>column-count 属性</h4><blockquote><p>使用方法： column-count: integer number | auto</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>auto（默认值）</td><td>列数将取决于其他属性，例如：”column-width”</td></tr><tr><td>imteger number</td><td>用整数值来定义列数，列的最佳数目将其中的元素的内容无法流出。</td></tr></tbody></table><h4 id="columns-属性"><a href="#columns-属性" class="headerlink" title="columns 属性"></a>columns 属性</h4><blockquote><p>使用方法：columns: [column-width]｜[column-count]</p><p>含义：复合属性设置列的宽度和个数</p></blockquote><h4 id="column-gap-属性"><a href="#column-gap-属性" class="headerlink" title="column-gap 属性"></a>column-gap 属性</h4><blockquote><p>使用方法：column-gap: length | normal</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>normal（默认值）</td><td>与 font-size 大小相同。假设该对象的 font-size 为 16px，则 normal 的值为 16px，以此类推。</td></tr><tr><td>length</td><td>用长度来定义列与列之间的间隙。不允许为负值。</td></tr></tbody></table><h4 id="column-rule-属性"><a href="#column-rule-属性" class="headerlink" title="column-rule 属性"></a>column-rule 属性</h4><blockquote><p>使用方法：column-rule: [column-rule-width] || [column-rule-style] || [column-rule-color]</p><p>含义：设置列与列之间的边框，和 border 属性相似</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>column-rule-width</td><td>设置列与列之间的边框的厚度</td></tr><tr><td>column-rule-style</td><td>设置列与列之间的边框的样式</td></tr><tr><td>column-rule-color</td><td>设置列与列之间的边框的颜色</td></tr></tbody></table><h4 id="column-fill-属性"><a href="#column-fill-属性" class="headerlink" title="column-fill 属性"></a>column-fill 属性</h4><blockquote><p>使用方法：column-fill: auto | balance</p><p>含义：设置所有列的高度是否统一</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>auto（默认值）</td><td>列高度自适应内容</td></tr><tr><td>balance</td><td>所有列的高度以其中最高的一列统一</td></tr></tbody></table><h4 id="column-span-属性"><a href="#column-span-属性" class="headerlink" title="column-span 属性"></a>column-span 属性</h4><blockquote><p>使用方法：column-span: none | all</p><p>含义：对象元素是否横跨所有列</p></blockquote><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>none（默认值）</td><td>不跨列</td></tr><tr><td>all</td><td>横跨所有列</td></tr></tbody></table><p>CSS3 弹性盒子的基本知识就是这些了 👌 👌 👌</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础</title>
      <link href="posts/e173abca.html"/>
      <url>posts/e173abca.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&nbsp;&nbsp;生活明朗，万物可爱，勤做笔记的好戏惯可不能落下，嘿嘿😉，正所谓好记性不如烂笔头✍，笔记还是要记的</p>&nbsp;&nbsp;就像面对自己的恋人一般，认真，专注,接下来就是我的HTML笔记，也就是网页的结构，下面开始充电🔋之旅啦~<h1 id="初识WEB"><a href="#初识WEB" class="headerlink" title="初识WEB"></a>初识WEB</h1><p><strong>网页</strong> 主要是由<code>文字、图像</code>和<code>超链接</code>等元素构成，当然除了这些元素，网页中还可以包括音频、视频以及Flash等。</p><p><strong>浏览器</strong> 是网页显示、运行的平台。</p><p><strong>浏览器内核</strong> (排版引擎、解释引擎、渲染引擎)</p><blockquote><p>负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。</p></blockquote><table><thead><tr><th>浏览器</th><th>内核</th><th>备注</th></tr></thead><tbody><tr><td>IE</td><td>Trident</td><td>IE、猎豹安全、360极速浏览器、百度浏览器</td></tr><tr><td>firefox</td><td>Gecko</td><td>可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。</td></tr><tr><td>Safari</td><td>webkit</td><td>现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕在厕所里面了。</td></tr><tr><td>chrome</td><td>Chromium/Blink</td><td>在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink内核。二次开发</td></tr><tr><td>Opera</td><td>blink</td><td>现在跟随chrome用blink内核。</td></tr></tbody></table><h2 id="Web标准"><a href="#Web标准" class="headerlink" title="Web标准"></a>Web标准</h2><p> <strong>构成</strong>👉 结构标准，表现标准和行为标准</p><ul><li><code>结构标准</code>用于对网页元素进行整理和分类(HTML)</li><li><code>表现标准</code>用于设置网页元素的版式、颜色、大小等外观属性(CSS)</li><li><code>行为标准</code>用于对网页模型的定义及交互的编写(JavaScript)</li></ul><p>也就是 <code>结构+表现+行为</code></p><p><strong>Web标准的优点</strong>👇</p><ul><li><code>易于维护</code>：只需更改CSS文件，就可以改变整站的样式</li><li><code>页面响应快</code>：HTML文档体积变小，响应时间短</li><li><code>可访问性</code>：语义化的HTML（结构和表现相分离的HTML）编写的网页文件，更容易被屏幕阅读器识别</li><li><code>设备兼容性</code>：不同的样式表可以让网页在不同的设备上呈现不同的样式</li><li><code>搜索引擎</code>：语义化的HTML能更容易被搜索引擎解析，提升排名<h1 id="初识HTML"><a href="#初识HTML" class="headerlink" title="初识HTML"></a>初识HTML</h1></li></ul><p><strong>HTML</strong>(Hyper Text Markup Language):超文本标记语言</p><p><strong>所谓超文本，有2层含义：</strong></p><ul><li>它可以加入图片、声音、动画、多媒体等内容（<code>超越文本限制</code> ）</li><li>不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（<code>超级链接文本</code>）。</li></ul><h2 id="HTML骨架格式"><a href="#HTML骨架格式" class="headerlink" title="HTML骨架格式"></a>HTML骨架格式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面中最大的标签 根标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 头部标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!-- 标题标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 文档的主体 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="团队约定大小写"><a href="#团队约定大小写" class="headerlink" title="团队约定大小写"></a>团队约定大小写</h2><ul><li>HTML标签名、类名、标签属性和大部分属性值统一用<code>小写</code></li></ul><h2 id="HTML元素标签分类"><a href="#HTML元素标签分类" class="headerlink" title="HTML元素标签分类"></a>HTML元素标签分类</h2><ul><li>常规元素(双标签)</li><li>空元素(单标签)<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">常规元素(双标签)</span><br><span class="line">&lt;标签名&gt; 内容 &lt;/标签名&gt;   比如<span class="tag">&lt;<span class="name">body</span>&gt;</span>我是文字<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">空元素(单标签)</span><br><span class="line">&lt;标签名 /&gt;  比如 <span class="tag">&lt;<span class="name">br</span> /&gt;</span>或<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML标签关系"><a href="#HTML标签关系" class="headerlink" title="HTML标签关系"></a>HTML标签关系</h2></li><li><code>嵌套关系</code>父子级包含关系</li><li><code>并列关系</code>兄弟级并列关系<ul><li>如果两个标签之间的关系是<code>嵌套关系</code>，子元素最好缩进一个tab键的身位（一个tab是4个空格）。如果是<code>并列关系</code>，最好上下对齐。</li></ul></li></ul><h2 id="文档类型-lt-DOCTYPE-gt"><a href="#文档类型-lt-DOCTYPE-gt" class="headerlink" title="文档类型&lt;!DOCTYPE &gt;"></a>文档类型&lt;!DOCTYPE &gt;</h2><p><strong>文档类型</strong>用来说明你用的XHTML或者HTML是什么版本。&lt;!DOCTYPE html&gt; 告诉浏览器按照HTML5标准解析页面。</p><h2 id="页面语言lang"><a href="#页面语言lang" class="headerlink" title="页面语言lang"></a>页面语言lang</h2><p><code>lang</code>指定该html标签内容所用的语言</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>  </span><br><span class="line">en 定义语言为英语 zh-CN定义语言为中文</span><br></pre></td></tr></table></figure><p><strong>lang的作用</strong></p><ul><li>根据根据lang属性来设定不同语言的css样式，或者字体</li><li>告诉搜索引擎做精确的识别</li><li>让语法检查程序做语言识别</li><li>帮助翻译工具做识别</li><li>帮助网页阅读程序做识别</li></ul><h2 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2><p><strong>字符集</strong>(Character set)是多个字符的集合,计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。</p><ul><li>UTF-8是目前最常用的字符集编码方式</li><li>让 html 文件是以 UTF-8 编码保存的， 浏览器根据编码去解码对应的html内容。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="meta-viewport的用法"><a href="#meta-viewport的用法" class="headerlink" title="meta viewport的用法"></a>meta viewport的用法</h2><p>通常viewport是指视窗、视口。浏览器上(也可能是一个app中的webview)用来显示网页的那部分区域。在移动端和pc端视口是不同的，pc端的视口是浏览器窗口区域，而在移动端有三个不同的视口概念：布局视口、视觉视口、理想视口</p><blockquote><p>meta有两个属性name 和 http-equiv</p></blockquote><h2 id="name属性的取值"><a href="#name属性的取值" class="headerlink" title="name属性的取值"></a>name属性的取值</h2><ul><li>keywords(关键字) 告诉搜索引擎，该网页的关键字</li><li>description(网站内容描述) 用于告诉搜索引擎，你网站的主要内容。</li><li>viewport(移动端的窗口)</li><li>robots(定义搜索引擎爬虫的索引方式) robots用来告诉爬虫哪些页面需要索引，哪些页面不需要索引</li><li>author(作者)</li><li>generator(网页制作软件）</li><li>copyright(版权)<h2 id="http-equiv有以下参数"><a href="#http-equiv有以下参数" class="headerlink" title="http-equiv有以下参数"></a>http-equiv有以下参数</h2></li></ul><p><strong>http-equiv</strong>相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容</p><ul><li><strong>content-Type</strong> 设定网页字符集(Html4用法，不推荐)</li><li><strong>Expires(期限)</strong> ,可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新传输。</li><li><strong>Pragma(cache模式)</strong>,是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从Cache中再调出</li><li><strong>Refresh(刷新)</strong>,自动刷新并指向新页面。</li><li><strong>cache-control</strong>（请求和响应遵循的缓存机制）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML标签的语义化"><a href="#HTML标签的语义化" class="headerlink" title="HTML标签的语义化"></a>HTML标签的语义化</h2></li><li>方便代码的阅读和维护，样式丢失的时候能让页面呈现清晰的结构。</li><li>有利于SEO，搜索引擎根据标签来确定上下文和各个关键字的权重。</li><li>方便其他设备解析，如盲人阅读器根据语义渲染网页</li></ul><p><strong>拓展</strong> &lt;base&gt; 标签：规定页面上所有链接的默认 URL 和设置整体链接的打开状态</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 跳转到 百度</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h1><h2 id="排版标签"><a href="#排版标签" class="headerlink" title="排版标签"></a>排版标签</h2><p>主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p><ul><li>标题标签h(h1~h6)</li><li>段落标签p,可以把 HTML 文档分割为若干段落</li><li>水平线标签hr</li><li>换行标签br</li><li>div和span标签:是没有语义的,是我们网页布局最主要的2个盒子。<h2 id="表现标签"><a href="#表现标签" class="headerlink" title="表现标签"></a>表现标签</h2></li><li><strong>b</strong>和<strong>strong</strong> 文字以粗体显示</li><li><strong>i</strong>和<strong>em</strong> 文字以斜体显示</li><li><strong>s</strong>和<strong>del</strong> 文字以加删除线显示</li><li><strong>u</strong>和<strong>ins</strong> 文字以加下划线显示<h2 id="标签属性-行内式"><a href="#标签属性-行内式" class="headerlink" title="标签属性(行内式)"></a>标签属性(行内式)</h2></li></ul><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 属性1=&quot;属性值1&quot; 属性2=&quot;属性值2&quot; …&gt; 内容 &lt;/标签名&gt;</span><br><span class="line">&lt;手机 颜色=&quot;红色&quot; 大小=&quot;5寸&quot;&gt;  &lt;/手机&gt;</span><br></pre></td></tr></table></figure><h2 id="图像标签img"><a href="#图像标签img" class="headerlink" title="图像标签img"></a>图像标签img</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/1.png" alt="图片属性img"></p><div class="note warning modern"><p><strong>注意：</strong></p><ul><li>标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</li><li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li><li>采取  键值对 的格式   key=”value”  的格式</li></ul></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;wg.jpg&quot; width&#x3D;&quot;300&quot; height&#x3D;&quot;300&quot; border&#x3D;&quot;3&quot; title&#x3D;&quot;这是个小乌龟&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h2 id="链接标签-重点"><a href="#链接标签-重点" class="headerlink" title="链接标签(重点)"></a>链接标签(重点)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">target=&quot;_self&quot;  默认窗口弹出方式</span><br><span class="line">target=&quot;_blank&quot; 新窗口弹出</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>href</td><td>用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能</td></tr><tr><td>target</td><td>用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，_blank为在新窗口中打开方式。</td></tr></tbody></table><h3 id="src-和-href-的区别"><a href="#src-和-href-的区别" class="headerlink" title="src 和 href 的区别"></a>src 和 href 的区别</h3><p>一句话概括:<strong>src 是引入资源的 href 是跳转url的</strong></p><ol><li>src用于替换当前元素，href用于在当前文档和引用资源之间确立联系。</li><li>src是source的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。</li><li>href是Hypertext Reference的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接。如果我们在文档中添加那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用link方式来加载css，而不是使用@import方式。</li></ol><div class="note warning modern"><p><strong>注意</strong></p><ol><li>外部链接 需要添加 <code>http://</code> <a href="http://www.baidu.com/">www.baidu.com</a></li><li>内部链接 直接链接内部页面名称即可 比如 &lt; a href=”index.html”&gt; 首页</li><li>如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href=”#”)，表示该链接暂时为一个空链接。</li><li>不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</li></ol></div><h3 id="锚点定位"><a href="#锚点定位" class="headerlink" title="锚点定位"></a>锚点定位</h3><p><strong>锚点定位 ：通过创建锚点链接，用户能够快速定位到目标内容。</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 使用相应的id名标注跳转目标的位置。 (找目标)</span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>第2集<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">2. 使用<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#id名&quot;</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span>创建链接文本（被点击的） </span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#two&quot;</span>&gt;</span>   </span><br></pre></td></tr></table></figure><h2 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span>     </span><br><span class="line"> 快捷键是：    ctrl + /       </span><br><span class="line"> 或者 ctrl +shift + / </span><br></pre></td></tr></table></figure><p><strong>团队约定</strong>：注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行</p><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/2.png"></p><h2 id="其他知识"><a href="#其他知识" class="headerlink" title="其他知识"></a>其他知识</h2><h3 id="预格式化文本pre标签"><a href="#预格式化文本pre标签" class="headerlink" title="预格式化文本pre标签"></a>预格式化文本pre标签</h3><p><strong>预格式化文本pre标签</strong>元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。格式化文本就是 ，按照我们预先写好的文字格式来显示页面， 保留空格和换行等。</p><h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/3.png"></p><h3 id="什么是XHTML"><a href="#什么是XHTML" class="headerlink" title="什么是XHTML"></a>什么是XHTML</h3><ul><li>XHTML 指<strong>可扩展超文本标签语言</strong>（EXtensible HyperText Markup Language）。</li><li>XHTML 的目标是取代 HTML。</li><li>XHTML 与 HTML 4.01 几乎是相同的。</li><li>XHTML 是更严格更纯净的 HTML 版本。</li><li>XHTML 是作为一种 XML 应用被重新定义的 HTML,是严格版本的HTML。例如它要求标签必须小写，标签必须被正确关闭，标签顺序必须正确排列，对于属性都必须使用双引号等。</li><li>XHTML 是一个 W3C 标准。</li></ul><h3 id="写HTML代码时应注意什么？"><a href="#写HTML代码时应注意什么？" class="headerlink" title="写HTML代码时应注意什么？"></a>写HTML代码时应注意什么？</h3><ul><li>尽可能少的使用无语义的标签div和span；</li><li>在语义不明显时，既可以使用div或者p时，尽量用p, 因为p在默认情况下有上下间距，对兼容特殊终端有利；</li><li>不要使用纯样式标签，如：b、font、u等，改用css设置。</li><li>需要强调的文本，可以包含在strong或者em标签中（浏览器预设样式，能用CSS指定就不用他们），strong默认样式是加粗（不要用b），em是斜体（不用i）；</li><li>使用表格时，标题要用<strong>caption</strong>，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td；</li><li>表单域要用<strong>fieldset</strong>标签包起来，并用<strong>legend</strong>标签说明表单的用途；</li><li>每个input标签对应的说明文本都需要使用<strong>label</strong>标签，并且通过为input设置id属性，在lable标签中设置for来让说明文本和相对应的input关联起来。</li></ul><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><h2 id="表格-1"><a href="#表格-1" class="headerlink" title="表格"></a>表格</h2><p>现在还是较为常用的一种标签，但不是用来布局，<code>常见显示、展示表格式数据</code>。因为它可以让数据显示的非常的规整，可读性非常好。<code>特别是后台展示数据的时候表格运用是否熟练就显得很重要</code>，一个清爽简约的表格能够把繁杂的数据表现得很有条理。</p><h2 id="创建表格"><a href="#创建表格" class="headerlink" title="创建表格"></a>创建表格</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>table、tr、td</code>，他们是创建表格的基本标签，缺一不可</p><ul><li>table用于定义一个表格标签。</li><li>tr标签 用于定义表格中的行，必须嵌套在 table标签中。</li><li>td 用于定义表格中的单元格，必须嵌套在<code>&lt;tr&gt;&lt;/tr&gt;</code>标签中。</li><li>字母 td 指表格数据（table data），即数据单元格的内容，现在我们明白，表格最合适的地方就是用来存储数据的。td像一个容器，可以容纳所有的元素。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/4.png"><br><strong>表头单元格标签th</strong>:一般表头单元格位于表格的第一行或第一列，并且文本加粗居中,只需用表头标签<th></th>替代相应的单元格标签<td></td>即可。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/5.png"><br><strong>表格标题caption</strong>:通常这个标题会被居中且显示于表格之上。caption 标签必须紧随 table 标签之后。这个标签只存在 表格里面才有意义。你是风儿我是沙</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/6.png"><br>  三参为0，平时开发的我们这三个参数  <code>border</code>  <code>cellpadding</code>  <code>cellspacing</code>  为  0</p><h2 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h2><p>合并的顺序我们按照   <code>先上 后下     先左  后右</code> 的顺序 ,合并完之后需要删除多余的单元格。</p><ul><li>跨行合并：rowspan=”合并单元格的个数”</li><li>跨列合并：colspan=”合并单元格的个数”</li></ul><h2 id="总结表格"><a href="#总结表格" class="headerlink" title="总结表格"></a>总结表格</h2><table><thead><tr><th>标签名</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td><code> &lt;table&gt;&lt;/table&gt;</code></td><td>表格标签</td><td>就是一个四方的盒子</td></tr><tr><td><code>&lt;tr&gt;&lt;/tr&gt;</code></td><td>表格行标签</td><td>行标签要再table标签内部才有意义</td></tr><tr><td><code>&lt;td&gt;&lt;/td&gt;</code></td><td>单元格标签</td><td>单元格标签是个容器级元素，可以放任何东西</td></tr><tr><td><code>&lt;th&gt;&lt;/th&gt;</code></td><td>表头单元格标签</td><td>它还是一个单元格，但是里面的文字会居中且加粗</td></tr><tr><td><code>&lt;caption&gt;&lt;/caption&gt;</code></td><td>表格标题标签</td><td>表格的标题，跟着表格一起走，和表格居中对齐</td></tr><tr><td>clospan 和 rowspan</td><td>合并属性</td><td>用来合并单元格的</td></tr></tbody></table><h2 id="表格划分结构"><a href="#表格划分结构" class="headerlink" title="表格划分结构"></a>表格划分结构</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;对于比较复杂的表格，表格的结构也就相对的复杂了，所以又将表格分割成三个部分：题头、正文和脚注。而这三部分分别用:thead,tbody,tfoot来标注， 这样更好的分清表格结构。</p><div class="note warning modern"><p><strong>注意</strong></p><ol><li>&lt;thead&gt;&lt;/thead&gt;：用于定义表格的头部。用来放标题之类的东西。&lt;thead&gt; 内部必须拥有&lt;tr&gt; 标签！</li><li> &lt;tbody&gt;&lt;/tbody&gt;：用于定义表格的主体。放数据本体 。</li><li>&lt;tfoot&gt;&lt;/tfoot&gt;放表格的脚注之类。</li><li>以上标签都是放到table标签中。</li></ol></div><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><strong>列表</strong><br>容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表。</p><p>列表最大的特点就是整齐 、整洁、 有序，跟表格类似，但是它可组合自由度会更高。</p><h3 id="无序列表-ul"><a href="#无序列表-ul" class="headerlink" title="无序列表 ul"></a>无序列表 ul</h3><ul><li>&lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字的做法是不被允许的。</li><li>&lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="有序列表-ol"><a href="#有序列表-ol" class="headerlink" title="有序列表 ol"></a>有序列表 ol</h3><ul><li>&lt;ol&gt;标签中的type属性值为排序的序列号，不添加type属性时，有序列表默认从数字1开始排序。</li><li>常用的type属性值分别为是1，a，A，i，I</li><li>&lt;ol reversed=”reversed”&gt;中的reversed属性能够让有序列表中的序列倒序排列。</li><li>&lt;ol start=”3”&gt;中的start属性值为3，有序列表中的第一个序列号将从3开始排列。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义列表-dl"><a href="#自定义列表-dl" class="headerlink" title="自定义列表 dl"></a>自定义列表 dl</h3></li></ul><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/7.png"></p><h1 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h1><p>在HTML中，一个完整的表单通常由<strong>表单控件</strong>（也称为表单元素）、<strong>提示信息</strong>和<strong>表单域</strong>3个部分构成。表单目的是为了收集用户信息。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/8.png"></p><h2 id="表单控件："><a href="#表单控件：" class="headerlink" title="表单控件："></a>表单控件：</h2><p>  包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p><h3 id="提示信息："><a href="#提示信息：" class="headerlink" title="提示信息："></a>提示信息：</h3><p>  一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p><h3 id="表单域："><a href="#表单域：" class="headerlink" title="表单域："></a>表单域：</h3><p>  它相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p><h2 id="input-控件"><a href="#input-控件" class="headerlink" title="input 控件"></a>input 控件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span> <span class="attr">value</span>=<span class="string">&quot;你好&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input 输入的意思</li><li>&lt;input /&gt;标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型</li><li>除了type属性还有别的属性</li></ul><h2 id="常用属性："><a href="#常用属性：" class="headerlink" title="常用属性："></a>常用属性：</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/9.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span> </span><br><span class="line">密  码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="value属性"><a href="#value属性" class="headerlink" title="value属性"></a>value属性</h3><p>value 默认的文本值。有些表单想刚打开页面就默认显示几个文字，就可以通过这个value 来设置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="name属性"><a href="#name属性" class="headerlink" title="name属性"></a>name属性</h3><ul><li>name表单的名字， 这样，后台可以通过这个name属性找到这个表单。 页面中的表单很多，name主要作用就是用于区别不同的表单。</li><li>name属性后面的值，是我们自己定义的。</li><li>radio  如果是一组，我们必须给他们命名相同的名字 name   这样就可以多个选其中的一个啦</li><li>name属性，我们现在用的较少，但是，当我们学ajax 和后台的时候，是必须的。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><h3 id="checked属性"><a href="#checked属性" class="headerlink" title="checked属性"></a>checked属性</h3>表示默认选中状态。 较常见于 单选按钮和复选按钮。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性    别:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><h3 id="input-属性小结"><a href="#input-属性小结" class="headerlink" title="input 属性小结"></a>input 属性小结</h3><table><thead><tr><th>属性</th><th>说明</th><th>作用</th></tr></thead><tbody><tr><td>type</td><td>表单类型</td><td>用来指定不同的控件类型</td></tr><tr><td>value</td><td>表单值</td><td>表单里面默认显示的文本</td></tr><tr><td>name</td><td>表单名字</td><td>页面中的表单很多，name主要作用就是用于区别不同的表单。</td></tr><tr><td>checked</td><td>默认选中</td><td>表示那个单选或者复选按钮一开始就被选中了</td></tr></tbody></table></li></ul><h2 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h2><ul><li>label 标签为 input 元素定义标注（标签）。</li><li>label标签主要目的是为了提高用户体验。为用户提高最优秀的服务。</li></ul><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点。</p><h3 id="如何绑定元素呢"><a href="#如何绑定元素呢" class="headerlink" title="如何绑定元素呢"></a>如何绑定元素呢</h3><ul><li>第一种用法就是用label标签直接包含input表单， 适合单个表单选择</li><li>第二种用法 for 属性规定 label 与哪个表单元素绑定(通过id)。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第一种</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span> 用户名： </span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第二种</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="textarea控件-文本域"><a href="#textarea控件-文本域" class="headerlink" title="textarea控件(文本域)"></a>textarea控件(文本域)</h2><ul><li>通过textarea控件可以轻松地创建多行文本输入框.</li><li>cols=”每行中的字符数” rows=”显示的行数”  我们实际开发不用<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/10.png"></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> &gt;</span></span><br><span class="line">  文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本框和文本域区别"><a href="#文本框和文本域区别" class="headerlink" title="文本框和文本域区别"></a>文本框和文本域区别</h2><table><thead><tr><th>表单</th><th>名称</th><th>区别</th><th>默认值显示</th><th>用于场景</th></tr></thead><tbody><tr><td>input type=”text”</td><td>文本框</td><td>只能显示一行文本</td><td>单标签，通过value显示默认值</td><td>用户名、昵称、密码等</td></tr><tr><td>textarea</td><td>文本域</td><td>可以显示多行文本</td><td>双标签，默认值写到标签中间</td><td>留言板</td></tr></tbody></table><h2 id="select下拉列表"><a href="#select下拉列表" class="headerlink" title="select下拉列表"></a>select下拉列表</h2><ul><li>如果有多个选项让用户选择，为了节约空间，我们可以使用select控件定义下拉列表。</li><li>在option 中定义selected =” selected “时，当前项即为默认选中项。</li><li>我们实际开发会用的比较少</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/11.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="form表单域"><a href="#form表单域" class="headerlink" title="form表单域"></a>form表单域</h2><ul><li>收集的用户信息怎么传递给服务器？<ul><li>通过form表单域</li></ul></li><li>目的：<ul><li>在HTML中，form标签被用于定义表单域，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。</li></ul></li></ul> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span>&gt;</span></span><br><span class="line">  各种表单控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h3><p>每个表单都应该有自己表单域。后面学 <code>ajax 后台交互</code>的时候，必须需要form表单域。</p><table><thead><tr><th>属性</th><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td>url地址</td><td>用于指定接收并处理表单数据的服务器程序的url地址</td></tr><tr><td>method</td><td>get/post</td><td>用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td>name</td><td>名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单。</td></tr></tbody></table><h3 id="GET-和-POST-的区别"><a href="#GET-和-POST-的区别" class="headerlink" title="GET 和 POST 的区别"></a>GET 和 POST 的区别</h3><ul><li>GET在浏览器回退时是无害的，而POST会再次提交请求。</li><li>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</li><li>GET请求只能进行url编码，而POST支持多种编码方式。</li><li>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</li><li>GET请求大小一般是(1024字节)，http协议并没有限制，而与服务器，操作系统有关，POST理论上来说没有大小限制，http协议规范也没有进行大小限制，但实际上post所能传递的数据量根据取决于服务器的设置和内存大小。</li><li>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</li><li>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</li></ul><h3 id="团队约定"><a href="#团队约定" class="headerlink" title="团队约定"></a>团队约定</h3><ul><li>元素属性值使用双引号语法</li><li>元素属性值可以写上的都写上<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">推荐</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; &#x2F;&gt; </span><br><span class="line">&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;name&quot; checked&#x3D;&quot;checked&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h2 id="从输入url到页面展示发生了什么-面试"><a href="#从输入url到页面展示发生了什么-面试" class="headerlink" title="从输入url到页面展示发生了什么(面试)"></a>从输入url到页面展示发生了什么(面试)</h2><blockquote><p>作者：Twinkle_<br><br>链接：<a href="https://juejin.im/post/6869279683230629896">https://juejin.im/post/6869279683230629896</a> <br><br>来源：掘金</p></blockquote></li></ul><h3 id="浏览器的多进程架构"><a href="#浏览器的多进程架构" class="headerlink" title="浏览器的多进程架构"></a>浏览器的多进程架构</h3><p>从浏览器输入 <code>URL</code> 到页面渲染的整个过程都是由 浏览器架构中的各个进程之间的配合完成。</p><ul><li><strong>浏览器主进程</strong>: 管理子进程、提供服务功能</li><li><strong>渲染进程</strong>：将HTML、CSS、JS渲染成界面，js引擎v8和排版引擎Blink就在上面，他会为每一个tab页面创建一个渲染进程</li><li><strong>GPU进程</strong>：本来是负责处理3Dcss的，后来慢慢的UI界面也交给GPU来绘制</li><li><strong>网络进程</strong>：就是负责网络请求，网络资源加载的进程</li><li><strong>插件进程</strong>：负责插件的运行的，因为插件很容易崩溃，把它放到独立的进程里不要让它影响别人</li></ul><p>从用户输入信息到页面展示的不同阶段，<code>是不同的进程在发挥作用</code>，示意图如下：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn3/12.png"></p><p>从图中可以看出，整个过程是需要各个进程之间相互配合完成的，过程大致可以描述为：</p><ul><li>用户<code>输入url</code>,处理输入信息，主进程开始导航，交给<code>网络进程</code>干活</li><li>网络进程发起网络请求，其中有<code>可能会发生重定向</code></li><li>服务器响应URL之后，主进程就要通知渲染进程，你要开始干活了</li><li>渲染进程准备好了，要想渲染进程提交数据，这个时间叫做<code>提交文档</code></li><li>渲染进程接受到数据，完成页面渲染。</li></ul><h3 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h3><ol><li>输入url</li></ol><ul><li>用户输入url，处理输入信息：</li><li>如果为非url结构的字符串，交给浏览器<code>默认引擎</code>去搜索改字符串；</li><li>若为url结构的字符串，浏览器主进程会交给 <code>网络进程</code> ,开始干活。</li></ul><ol start="2"><li><p>网络进程<br>2.1 <strong>查找浏览器缓存</strong></p><ul><li>网络进程会先看看是否存在本地缓存，如果有就直接返回资源给浏览器进程，无则下一步 DNS-&gt; IP -&gt; TCP </li></ul><p>2.2 <strong>DNS解析</strong></p><ul><li>网络进程拿到url后，先会进行DNS域名解析得到<code>IP地址</code>。如果请求协议是HTTPS，那么还需要建立TLS连接。</li></ul><p> 2.3  <strong>建立TCP连接，三次握手</strong></p><ul><li>接下来就是利用IP地址和服务器建立TCP连接。连接建立之后，向服务器发送请求。</li></ul></li><li><p>服务器响应</p><ul><li>服务器收到请求信息后，会根据请求信息生成响应行、响应头、响应体，并发给网络进程。网络进程接受了响应信息之后，就开始解析响应头的内容。</li><li><code>网络进程解析响应行和响应头信息的过程：</code></li></ul></li><li><p>1  <strong>重定向</strong></p></li></ol><p>  如果响应行状态码为301（永久重定向）和302（临时），那么说明需要重定向到其他url。这时候网络进程会从响应头中的Location字段里读取重定向的地址，并重新发起网络请求。</p><p>  3.2 <strong>响应数据处理</strong></p><p>  导航会通过请求头的Content-type字段判断响应体数据的类型。浏览器通过这个来决定如何显示响应体的内容。比如：若为application/octet-stream，则会按照下载类型来处理这个请求，导航结束。若为text/html，这就告诉浏览器服务器返回的是html格式，浏览器会通知渲染进程，你要干活了。</p><ol start="4"><li>准备渲染进程</li></ol><ul><li>默认情况，每个页面一个渲染进程。但若处于同一站点（同根域名+协议），那么渲染进程就会复用。</li></ul><ol start="5"><li>提交文档</li></ol><ul><li>渲染进程准备好后，浏览器进程发出“提交文档的消息”，渲染进程接受了消息之后，会跟网络进程简历传输数据的管道。</li><li>等数据传输完成了，渲染进程会告诉浏览器进程，确认文档提交，这时候浏览器会更新页面，安全状态，url，前进后退的历史。</li><li>到这里导航结束，进入渲染阶段。</li></ul><div class="note warning modern"><p><strong>注意</strong><br>当浏览器刚开始加载一个地址之后，标签页上的图标便进入了加载状态。但此时图中页面显示的依然是之前打开的页面内容，并没立即替换为百度首页的页面。因为需要等待提交文档阶段，页面内容才会被替换。</p></div><h1 id="前端HTML基础面试题"><a href="#前端HTML基础面试题" class="headerlink" title="前端HTML基础面试题"></a>前端HTML基础面试题</h1><h2 id="iframe有哪些缺点？"><a href="#iframe有哪些缺点？" class="headerlink" title="iframe有哪些缺点？"></a>iframe有哪些缺点？</h2><p>iframe是一种框架，也是一种很常见的网页嵌入方式。</p><h3 id="iframe的优点"><a href="#iframe的优点" class="headerlink" title="iframe的优点"></a>iframe的优点</h3><ul><li>iframe能够原封不动的把嵌入的网页展现出来。</li><li>如果有多个网页引用iframe，那么你只需要修改iframe的内容，就可以实现调用的每一个页面内容的更改，方便快捷。</li><li>网页如果为了统一风格，头部和版本都是一样的，就可以写成一个页面，用iframe来嵌套，可以增加代码的可重用。</li><li>如果遇到加载缓慢的第三方内容如图标和广告，这些问题可以由iframe来解决。</li></ul><h3 id="iframe的缺点"><a href="#iframe的缺点" class="headerlink" title="iframe的缺点"></a>iframe的缺点</h3><ul><li>会产生很多页面，不容易管理。</li><li>iframe框架结构有时会让人感到迷惑，如果框架个数多的话，可能会出现上下、左右滚动条，会分散访问者的注意力，用户体验度差。</li><li>代码复杂，无法被一些搜索引擎索引到，这一点很关键，现在的搜索引擎爬虫还不能很好的处理iframe中的内容，所以使用iframe会不利于搜索引擎优化。</li><li>很多的移动设备（PDA 手机）无法完全显示框架，设备兼容性差。</li><li>iframe框架页面会增加服务器的http请求，对于大型网站是不可取的。</li><li>现在基本上都是用Ajax来代替iframe，所以iframe已经渐渐的退出了前端开发。</li></ul><h2 id="label的作用是什么？是怎么用的？"><a href="#label的作用是什么？是怎么用的？" class="headerlink" title="label的作用是什么？是怎么用的？"></a>label的作用是什么？是怎么用的？</h2><p>例子1: 点击” 用户名:” 就可以定位光标到输入框</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;&lt;label for&#x3D;&quot;myid &quot;&gt; 用户名:&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;myid&quot; &#x2F;&gt;&lt;&#x2F;form&gt;  </span><br></pre></td></tr></table></figure><h3 id="for-属性功能"><a href="#for-属性功能" class="headerlink" title="for 属性功能"></a>for 属性功能</h3><p>表示Label 标签要绑定的HTML 元素，你点击这个标签的时候，所绑定的元素将获取焦点。</p><h3 id="acesskey-属性"><a href="#acesskey-属性" class="headerlink" title="acesskey 属性"></a>acesskey 属性</h3><p><strong>功能：</strong><br>表示访问Label 标签所绑定的元素的热键，当您按下热键，所绑定的元素将获取焦点。</p><p><strong>局限性：</strong><br>accessKey 属性所设置的快捷键不能与浏览器的快捷键冲突，否则将优先激活浏览器的快捷键。</p><h2 id="HTML5的form如何关闭自动完成功能？"><a href="#HTML5的form如何关闭自动完成功能？" class="headerlink" title="HTML5的form如何关闭自动完成功能？"></a>HTML5的form如何关闭自动完成功能？</h2><p>  &nbsp;&nbsp;&nbsp;&nbsp;HTML的输入框可以拥有自动完成的功能，当你往输入框输入内容的时候，浏览器会从你以前的同名输入框的历史记录中查找出类似的内容并列在输入框下面，这样就不用全部输入进去了，直接选择列表中的项目就可以了。</p><p>  &nbsp;&nbsp;&nbsp;&nbsp;但有时候我们希望关闭输入框的自动完成功能，例如当用户输入内容的时候，我们希望使用AJAX技术从数据库搜索并列举而不是在用户的历史记录中搜索。</p><h2 id="关闭输入框的自动完成功能有3种方法："><a href="#关闭输入框的自动完成功能有3种方法：" class="headerlink" title="关闭输入框的自动完成功能有3种方法："></a>关闭输入框的自动完成功能有3种方法：</h2><ol><li>在IE的Internet选项菜单里的内容–自动完成里面设置</li><li>设置form的autocomplete为”on”或者”off”来开启或者关闭自动完成功能</li><li>设置输入框的autocomplete为”on”或者”off”来开启或者关闭该输入框的自动完成功能</li></ol><h2 id="将-HTML5-看作成开放的网络平台"><a href="#将-HTML5-看作成开放的网络平台" class="headerlink" title="将 HTML5 看作成开放的网络平台"></a>将 HTML5 看作成开放的网络平台</h2><p><strong>什么是 HTML5 的基本构件（building block）？</strong></p><ol><li>语义 - 提供更准确地描述内容。</li><li>连接 - 提供新的方式与服务器通信。</li><li>离线和存储 - 允许网页在本地存储数据并有效地离线运行。</li><li>多媒体 - 在 Open Web 中，视频和音频被视为一等公民（first-class citizens）。</li><li>2D/3D 图形和特效 - 提供更多种演示选项。</li><li>性能和集成 - 提供更快的访问速度和性能更好的计算机硬件。</li><li>设备访问 - 允许使用各种输入、输出设备。</li><li>外观 - 可以开发丰富的主题。</li></ol><h2 id="浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？"><a href="#浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？" class="headerlink" title="浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？"></a>浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？</h2><ul><li>在浏览器的html头部加上manifest属性，如果是第一次访问浏览器会根据manifest的内容进行下载存储离线内容，如果已经访问过则从离线存储中进行加载，然后在比对服务器如果有新内容在更新离线存储</li><li>离线的情况下，浏览器就直接使用离线存储的资源。</li></ul><h2 id="浏览器的渲染过程？"><a href="#浏览器的渲染过程？" class="headerlink" title="浏览器的渲染过程？"></a>浏览器的渲染过程？</h2><ol><li>将获取的html解析成dom树</li><li>处理css，构成层叠样式表模型CSSOM</li><li>将dom树和CSSOM合并为渲染树</li><li>根据CSSOM将渲染树的节点布局计算</li><li>将渲染树节点样式绘制到页面上</li></ol><div class="note warning modern"><p><strong>注意</strong></p><ul><li>在渲染的过程中是自上而下渲染，</li><li>js会阻塞页面的渲染，优先等js执行完成</li><li>如果在渲染的过程中改变了样式，会造成回流需要重新渲染</li></ul></div><h2 id="link和-import的区别？"><a href="#link和-import的区别？" class="headerlink" title="link和@import的区别？"></a>link和@import的区别？</h2><ol><li>从属关系区别：<br>link属于html标签，而@import是css提供的。</li><li>加载顺序区别：<br>页面被加载时，link会同时被加载，而@import引用的css会等到页面被加载完再加载。</li><li>兼容性区别：<br>import只在IE5以上才能识别，而link是html标签，无兼容问题。</li><li>dom可操作性区别：<br>可以通过JS 操作 DOM ，插入link标签来改变样式；由于 DOM 方法是基于文档的，无法使用@import的方式插入样式</li><li>权重区别：<br>如果已经存在相同样式，@import引入的这个样式将被该 CSS 文件本身的样式层叠掉，表现出link方式的样式权重高于@import的权重这样的直观效果。（简而言之，link和@import，谁写在后面，谁的样式就被应用，后面的样式覆盖前面的样式。）</li></ol><h2 id="src与href的区别？"><a href="#src与href的区别？" class="headerlink" title="src与href的区别？"></a>src与href的区别？</h2><ol><li>href 是指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，用于超链接。</li><li>src是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。</li></ol><p>❤️ 感谢大家能看到这里</p>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署到腾讯云或阿里云</title>
      <link href="posts/ce6a.html"/>
      <url>posts/ce6a.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo部署到腾讯云"><a href="#Hexo部署到腾讯云" class="headerlink" title="Hexo部署到腾讯云"></a>Hexo部署到腾讯云</h1><h2 id="一、部署环境与准备"><a href="#一、部署环境与准备" class="headerlink" title="一、部署环境与准备"></a>一、部署环境与准备</h2><p>1.环境</p><p>本地Windows10操作系统</p><p>腾讯云Cenots7.6服务器</p><p>2.准备<br>Hexo 本地博客</p><p>Xshell 链接到你的服务器</p><h2 id="二、云服务器配置Git"><a href="#二、云服务器配置Git" class="headerlink" title="二、云服务器配置Git"></a>二、云服务器配置Git</h2><p>1.安装依赖库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel </span><br></pre></td></tr></table></figure><p>2.安装编译工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc perl-ExtUtils-MakeMaker package</span><br></pre></td></tr></table></figure><p>3.查看git的版本<br>git version<br>4.删除git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove git -y</span><br></pre></td></tr></table></figure><p>5.下载解压最新版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src #下载的目录 </span><br><span class="line">wget https:&#x2F;&#x2F;www.kernel.org&#x2F;pub&#x2F;software&#x2F;scm&#x2F;git&#x2F;git-2.28.0.tar.gz #下载最新版 </span><br><span class="line">tar -zxvf git-2.28.0.tar.gz #解压到当前文件夹</span><br></pre></td></tr></table></figure><p>6.编辑并安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd git-2.28.0    #进入文件夹</span><br><span class="line">make prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git all    #编译源码</span><br><span class="line">make prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git install    #安装路径</span><br></pre></td></tr></table></figure><p>7.配置git的环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&#39; &gt;&gt; &#x2F;etc&#x2F;bashrc</span><br></pre></td></tr></table></figure><p>8.刷新环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;bashrc</span><br></pre></td></tr></table></figure><p>9.查看版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>10创建git用户并且修改权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adduser qiqi</span><br><span class="line">passwd qiqi</span><br><span class="line">chmod 740 &#x2F;etc&#x2F;sudoers vim &#x2F;etc&#x2F;sudoers root </span><br><span class="line"></span><br><span class="line">在这里加入：</span><br><span class="line">root    ALL&#x3D;(ALL)       ALL</span><br><span class="line">qiqi     ALL&#x3D;(ALL)       ALL</span><br></pre></td></tr></table></figure><p>11.本地windows10使用Gitbash创建密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>12.将本地创建id_rsa.pub中文件复制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su qiqi</span><br><span class="line">mkdir ~&#x2F;.ssh</span><br><span class="line">vim ~&#x2F;.ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure><p>13.本地测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v qiqi@服务器ip</span><br></pre></td></tr></table></figure><p>出现Welcome to Alibaba Cloud Elastic Compute Service !则代表部署成功</p><h2 id="三、云服务器网站配置"><a href="#三、云服务器网站配置" class="headerlink" title="三、云服务器网站配置"></a>三、云服务器网站配置</h2><p>1.创建网站目录并且设置权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">mkdir &#x2F;home&#x2F;hexo</span><br><span class="line">chown qiqi:qiqi -R &#x2F;home&#x2F;hexo</span><br></pre></td></tr></table></figure><p>2.安装Nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br><span class="line">systemctl start nginx.service    #启动服务</span><br></pre></td></tr></table></figure><p>3.修改Nginx配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;nginx&#x2F;nginx.conf </span><br><span class="line"></span><br><span class="line"> 38     server &#123;</span><br><span class="line"> 39         listen       80 default_server;</span><br><span class="line"> 40         listen       [::]:80 default_server;</span><br><span class="line"> 41         server_name  47.110.157.196;        #域名或ip地址</span><br><span class="line"> 42         root         &#x2F;home&#x2F;hexo;        #网站目录</span><br></pre></td></tr></table></figure><p>4.重启服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure><p>5.建立git仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">cd &#x2F;home&#x2F;qiqi</span><br><span class="line">git init --bare blog.git</span><br><span class="line">chown qiqi:qiqi -R blog.git</span><br></pre></td></tr></table></figure><p>6.同步网站根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim blog.git&#x2F;hooks&#x2F;post-receive</span><br><span class="line"></span><br><span class="line">#添加以下内容</span><br><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">git --work-tree&#x3D;&#x2F;home&#x2F;hexo --git-dir&#x3D;&#x2F;home&#x2F;qiqi&#x2F;blog.git checkout -f</span><br></pre></td></tr></table></figure><p>7.修改权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x &#x2F;home&#x2F;qiqi&#x2F;blog.git&#x2F;hooks&#x2F;post-receive</span><br></pre></td></tr></table></figure><p>8.在windows10本地hexo目录修改_config.yml文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: qiqi@47.110.157.196:&#x2F;home&#x2F;qiqi&#x2F;blog.git    #用户名@服务器Ip:git仓库位置</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>9.在本机gitbash部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h2 id="四、常见报错"><a href="#四、常见报错" class="headerlink" title="四、常见报错"></a>四、常见报错</h2><h3 id="1-git-upload-pack-未找到命令"><a href="#1-git-upload-pack-未找到命令" class="headerlink" title="1. git-upload-pack: 未找到命令"></a>1. git-upload-pack: 未找到命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash: git-upload-pack: command not found</span><br><span class="line">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure><p><code>解决方法</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s  &#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&#x2F;git-upload-pack  &#x2F;usr&#x2F;bin&#x2F;git-upload-pack</span><br></pre></td></tr></table></figure><h3 id="2-git-receive-pack-未找到命令"><a href="#2-git-receive-pack-未找到命令" class="headerlink" title="2.git-receive-pack: 未找到命令"></a>2.git-receive-pack: 未找到命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash: git-receive-pack: command not found</span><br><span class="line">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure><p><code>解决方法</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s &#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&#x2F;git-receive-pack  &#x2F;usr&#x2F;bin&#x2F;git-receive-pack</span><br></pre></td></tr></table></figure><h3 id="3-无法远程连接获取"><a href="#3-无法远程连接获取" class="headerlink" title="3.无法远程连接获取"></a>3.无法远程连接获取</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure><p><code>解决方法</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重试或者 删掉本地ssh公钥重新上传至服务器</span><br></pre></td></tr></table></figure><h3 id="4-key出错"><a href="#4-key出错" class="headerlink" title="4.key出错"></a>4.key出错</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Host key verification failed.</span><br></pre></td></tr></table></figure><p><code>解决方法</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -R 你要访问的IP地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Github Pages 和 Hexo 搭建自己的独立博客</title>
      <link href="posts/ddae.html"/>
      <url>posts/ddae.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用-Github-Pages-和-Hexo-搭建自己的独立博客"><a href="#使用-Github-Pages-和-Hexo-搭建自己的独立博客" class="headerlink" title="使用 Github Pages 和 Hexo 搭建自己的独立博客"></a>使用 Github Pages 和 Hexo 搭建自己的独立博客</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  首先感谢你能来访问我的Blog，这是我搭建的第一个博客网站，使用的是Github Pages + Hexo的形式搭建，从小白一路走了过来也挺不容易的hhh，前前后后几分钟就能搭建完成了叭，现在把它记录下来，将来也许会是一种怀念叭.</p><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><blockquote><p>Github</p></blockquote><p>搭建一个这样的Blog首先你得知道什么是Github 和 Github Pages，你可以理解为咱们没有服务器，咱们将页面托管到了Github上<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/50.png"></p><blockquote><p>Github Pages</p></blockquote><p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。</p><p>这是Github Pages的官网 <a href="https://pages.github.com/">Github Pages</a></p><blockquote><p>Hexo</p></blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br>这是 Hexo 的官网 <a href="https://hexo.io/zh-cn/">Hexo</a></p><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>进入node.js官网：<a href="https://nodejs.org/en/download/">Node.js官网</a><br>按照自己的机器选择对应的版本下载，我是windous 64位<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/51.png"><br>然后差不多就是一直下一步hhh~<br>具体可以参考<a href="https://www.cnblogs.com/pengpengdeyuan/p/14434559.html">Node.js安装教程</a></p><p>如果遇到什么问题，一般百度都能解决，这里就不在赘述.</p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>这是Git官网：<a href="https://git-scm.com/downloads">Git官网</a></p><p>Git的安装请参考：<a href="https://www.cnblogs.com/jytx/p/5602927.html">Git安装教程</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/52.png"></p><p>具体的git学习可以访问：<a href="http://git.oschina.net/progit/">Pro Git中文版</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/53.png"></p><h2 id="检验软件是否安装成功"><a href="#检验软件是否安装成功" class="headerlink" title="检验软件是否安装成功"></a>检验软件是否安装成功</h2><p>同时按下 Win 键和 R 键打开运行窗口,输入 <code>cmd</code> ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/54.png"></p><p>此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 <code>Git GUI Here</code> 和 <code>Git Bash Here</code>两个选项，第一个是<code>图形界面的Git操作</code>，另一个<code>是命令行</code>，我们一般使用第二个</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/55.png"></p><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：F\QiQi_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装,注意<code>不要复制 $ 符号</code>,第一次可能需要久一点输入命令后等一等，再输入第二条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer，如图所示即为安装成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/56.png"></p><h2 id="Hexo-初始化配置"><a href="#Hexo-初始化配置" class="headerlink" title="Hexo 初始化配置"></a>Hexo 初始化配置</h2><p>在刚才新建的文件夹里面再次新建一个 Hexo 文件夹（如：我的文件夹为：E\QiQi_Blog\Hexo）,进入该 Hexo 文件夹右键鼠标，点击 Git Bash Here，输入以下命令，如图所示则安装成功<br>如果失败了就再输入一次，比如说我</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/57.png"></p><p>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/58.png"></p><h2 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h2><p>执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>执行完即可登录 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看效果</p><p>显示以下信息说明操作成功：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/59.png"></p><p>登录 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看效果：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/60.png"></p><h2 id="将博客部署到-Github-Pages-上"><a href="#将博客部署到-Github-Pages-上" class="headerlink" title="将博客部署到 Github Pages 上"></a>将博客部署到 Github Pages 上</h2><p>到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到Github Pages上</p><p>一、注册 Github 账户：点击此处访问 <a href="https://github.com/">Github 官网</a>，点击 Sign Up 注册账户</p><p>二、创建项目代码库：点击 New repository 开始创建，步骤及注意事项见图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/61.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/62.png"></p><p>三、配置 <code>SSH</code> 密钥：只有配置好 <code>SSH</code> 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：<code>F\QiQi_Blog</code>） <code>Git Bash Here</code> 输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;your email@example.com&quot;</span><br><span class="line">&#x2F;&#x2F;引号里面填写你的邮箱地址，比如我的是2268025923@qq.com</span><br></pre></td></tr></table></figure><p>之后会出现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa):</span><br><span class="line">&#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储</span><br></pre></td></tr></table></figure><p>然后会出现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">&#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>接下来屏幕会显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">这里是各种字母数字组成的字符串，结尾是你的邮箱</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">这里也是各种字母数字符号组成的字符串</span><br></pre></td></tr></table></figure><p>运行以下命令，将公钥的内容复制到系统粘贴板上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure><p>四、在 GitHub 账户中添加你的公钥</p><p>1.登陆 GitHub，进入 <code>Settings</code>：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/63.png"></p><p>2.点击 <code>SSH and GPG Keys</code>：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/64.png"></p><p>3.选择 New SSH key：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/65.png"></p><p>4.粘贴密钥：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/66.png"></p><p>五、测试</p><p>直接在桌面右键 点击 Git Bash Here，输入以下命令输入以下命令：注意：<a href="mailto:&#103;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#46;&#99;&#111;&#109;">&#103;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#46;&#99;&#111;&#109;</a>不要做任何更改！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>之后会显示：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/67.png"></p><p>输入 <code>yes</code> 后会显示：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/68.png"></p><p>此时表示设置正确</p><p>六、配置 Git 个人信息</p><p>Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;此处填你的用户名&quot;</span><br><span class="line">$ git config --global user.email &quot;此处填你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>到此为止 SSH Key 配置成功，本机已成功连接到 Github</p><h2 id="将本地的-Hexo-文件更新到-Github-的库中"><a href="#将本地的-Hexo-文件更新到-Github-的库中" class="headerlink" title="将本地的 Hexo 文件更新到 Github 的库中"></a>将本地的 Hexo 文件更新到 Github 的库中</h2><p>一、登录 Github 打开自己的项目 yourname.github.io</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/69.png"></p><p>二、鼠标移到 Code 按钮，点击按钮复制，或者直接把SSH全部复制<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/70.png"></p><p>三、一键复制地址<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/71.png"></p><p>四、打开你创建的 Hexo 文件夹（如：F:\QiQi_Blog\Hexo），右键用记事本（或者Notepad++、Vs Code等）打开该文件夹下的 _config.yml 文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/72.png"></p><p>五、滑到最下面,按下图修改 _config.yml 文件并保存</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/73.png"></p><p>六、在 Hexo 文件夹下分别执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>或者直接执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>执行完之后会让你输入你的 Github 的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>需要执行以下命令再安装一次：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>再执行 <strong>hexo g -d</strong>，你的博客就会部署到 Github 上了</p><p>七、访问博客</p><p>你的博客地址：https://你的用户名.github.io，比如我的是：<a href="https://waterchen520.github.io/">https://waterchen520.github.io</a> ，现在每个人都可以通过此链接访问你的博客了</p><h2 id="如何在博客上发表文章"><a href="#如何在博客上发表文章" class="headerlink" title="如何在博客上发表文章"></a>如何在博客上发表文章</h2><p>博客已经成功搭建了，但是我们该怎么写博客呢？</p><p>一、新建一个空文章，输入以下命令，会在项目 \Hexo\source_posts 中生成 文章标题.md 文件，文章标题根据需要命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n &quot;文章标题&quot;</span><br></pre></td></tr></table></figure><p>也可以直接在 \Hexo\source_posts 目录下右键鼠标新建文本文档，改后缀为 .md 即可，这种方法比较方便</p><p>二、用编辑器编写文章</p><p>md 全称 Markdown， Markdown 是 2004 年由 John Gruberis 设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会， .md 文件可以使用支持 Markdown 语法的编辑器编辑，然后将写好的文章（.md文件）保存到 \Hexo\source_posts 文件夹下即可</p><p>当我们用编辑器写好文章后，可以使用以下命令将其推送到服务器上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>或者将两个命令合二为一输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>现在访问你的博客就可以看见写好的文章啦！</p><h2 id="如何为博客更换自己喜欢的主题"><a href="#如何为博客更换自己喜欢的主题" class="headerlink" title="如何为博客更换自己喜欢的主题"></a>如何为博客更换自己喜欢的主题</h2><p>博客也搭建好了，文章也会写了，但是！！！默认的主题并不喜欢怎么办？现在，我们就来为自己的博客更换自己喜欢的主题</p><p>进入 Hexo 官网的主题专栏，我们可以看见有许多的主题供我们选择: <a href="https://hexo.io/themes/">主题商店</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/74.png"></p><p>我们要做的就是把主题克隆过来，在此我们以主题 butterfly 为例，点进去我们就可以看见该主题作者的博客，鼠标滑到底，我们可以看见 主题 butterfly 的字样（其他主题类似），点击butterfly ，页面就会跳转到该主题所有的相关文件在 Github 上的地址，复制该地址</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/75.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/76.png"></p><p>再打开 Hexo 文件夹下的 themes 目录（如：E:\TRHX_Blog\Hexo\themes），右键 Git Bash Here，输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone 此处填写你刚才复制的主题地址</span><br></pre></td></tr></table></figure><p>比如要安装 butterfly 主题，则输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@github.com:jerryc127&#x2F;hexo-theme-butterfly.git</span><br></pre></td></tr></table></figure><p>等待下载完成后即可在 themes 目录下生成 butterfly 文件夹，然后打开 Hexo 文件夹下的配置文件 _config.yml ，找到关键字 theme，修改参数为：theme：butterfly（其他主题修改成相应名称即可），再次注意冒号后面有一个空格！</p><p>返回 Hexo 目录，右键 Git Bash Here ，输入以下命令开始部署主题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g   </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>此时打开浏览器，访问 <a href="http://localhost:4000/">http://localhost:4000/</a> 就可看见我们的主题已经更换了，如果感觉效果满意，我们就可以把它部署到Github上了</p><p>打开 Hexo 文件夹，右键 Git Bash Here ，输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean  </span><br><span class="line">&#x2F;&#x2F;该命令的作用是清除缓存，若不输入此命令，服务器有可能更新不了主题</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>此时访问自己的博客即可看见更换后的主题，但我们仍然需要对主题的相关配置进行修改，比如网站标题，图标等等，Hexo 中有两份主要的配置文件，名称都是 _config.yml ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：F:\QiQi_Blog\Hexo_config.yml），主要包含 Hexo 本身整站的配置；另一份位于主题目录下（比如我的：F:\Blog\Hexo\themes\butterfly_config.yml），这份配置由主题作者提供，主要用于配置主题相关的选项，一般 _config.yml 文件里都有相关注释，按需修改即可</p><h2 id="为你的-Hexo-博客配置个性域名"><a href="#为你的-Hexo-博客配置个性域名" class="headerlink" title="为你的 Hexo 博客配置个性域名"></a>为你的 Hexo 博客配置个性域名</h2><p>首先我们要购买域名，<a href="https://www.aliyun.com/">阿里云</a>，<a href="https://cloud.tencent.com/">腾讯云</a>都可以，也不贵，一年几十块钱，最便宜几块钱也能买到，以阿里云为例，我购买的域名是 qwq3.top，购买过程就不赘述了，选择阿里云的解析平台，来到阿里云的<code>域名控制台</code>，点击进入域名解析列表或者直接点击域名后面的解析</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/77.png"></p><p><code>方法一：点击添加记录，需要添加两个记录，两个记录类型都是 CNAME ，第一个主机记录为 @ ，第二个主机记录为 www ，记录值都是填你自己的博客地址（比如我的是：[](waterchen520.github.io)），保存之后域名解析就完成了！</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/78.png"></p><p>方法二：两个记录类型为 A ，第一个主机记录为 @ ，第二个主机记录为 www，记录值都为博客的 IP 地址，IP 地址可以 cmd 中输入 ping 你的博客地址 获得（比如我的：ping waterchen520.github.io），保存之后域名解析就完成了！</p><p>为了使 GitHub 接收我们的域名，还需要在博客的根目录下添加一个名为 <strong>CNAME</strong> 的文件（<strong>注意不要加.txt，没有任何后缀名</strong>！），这个文件放到 <strong>Hexo</strong> 文件夹的 <strong>source</strong> 里面，（比如我的是：<strong>F:\QiQi_Blog\Hexo\source</strong>），文件里面填写你的域名（<strong>加不加www都行</strong>），比如要填写我的域名，文件里面就写：<a href="http://www.qwq3.top/">www.qwq3.top</a> 或者 qwq3.top，经过以上操作，别人就可以通过 <a href="http://www.qwq3.top/">www.qwq3.top</a> 、qwq3.top 、waterchen520.github.io 三个当中任意一个访问我的博客了！你的也一样！</p><p>有关加不加www的问题有以下区别：</p><ul><li>如果你填写的是没有www的，比如 qwq3.top，那么无论是访问 <a href="https://www.qwq3.top/">https://www.qwq3.top</a> 还是 <a href="https://qwq3.top/">https://qwq3.top</a> ，都会自动跳转到 <a href="https://qwq3.top/">https://qwq3.top</a></li><li>如果你填写的是带www的，比如 <a href="http://www.qwq3.top/">www.qwq3.top</a> ，那么无论是访问 <a href="https://www.qwq3.top/">https://www.qwq3.top</a> 还是 <a href="https://qwq3.top/">https://qwq3.top</a> ，都会自动跳转到 <a href="http://www.qwq3.top/">http://www.qwq3.top</a></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/waterchen520/cdn1@0.1/1/79.png"></p><h2 id="教程就到这里啦，晚安"><a href="#教程就到这里啦，晚安" class="headerlink" title="教程就到这里啦，晚安"></a>教程就到这里啦，晚安</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>壁纸</title>
      <link href="posts/3539.html"/>
      <url>posts/3539.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button button--animated" style="">Click  </button><span class="hide-content">闪</span></span></p><p>你看我长得漂亮不</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png"></p><p>我觉得很漂亮 <img class="inline-img" src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png" style="height:150px"/></p>]]></content>
      
      
      
        <tags>
            
            <tag> 壁纸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阳光不燥，微风正好</title>
      <link href="posts/b8cf1317.html"/>
      <url>posts/b8cf1317.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在不知不觉中，我加入了程序猿这一行，说来也怪怪的，随着高考终止铃响的那一刻，我知道我该决定自己的人生了.</p></blockquote><h2 id="兼职"><a href="#兼职" class="headerlink" title="兼职"></a>兼职</h2><blockquote><p>人嘛，总是缺少社会的毒打，我也不例外，高考结束后去做了兼职，卖过冰棒，发过传单，也在人家大门口大哭过，想明白后还是得继续站起来坐上最后一班公交回家</p></blockquote><h2 id="迷茫"><a href="#迷茫" class="headerlink" title="迷茫"></a>迷茫</h2><blockquote><p>填志愿的时候，只想着什么最赚钱，什么前景好，耳边招生老师的话反复在回响，然后填下了软件技术这个专业，只填了一所学校，一个专业，分不够的话，就不够算了吧，想着，大不了出去打工</p></blockquote><h2 id="懵懂"><a href="#懵懂" class="headerlink" title="懵懂"></a>懵懂</h2><blockquote><p>得知自己被录取后，在老爸的支持下买了人生第一台笔记本，换下了新手机，买下电脑的那天晚上，一个小小的种子在我心中发芽，爸妈不知在何时已有了白发，我得为父母做点什么，于是开始在网上学习C语言，没有任何学习方法QWQ，就傻傻的看，想想那时候的我还挺呆的</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="manifest.json"/>
      <url>manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"Violet`Blog","short_name":"Violet","theme_color":"#49b1f5","background_color":"#49b1f5","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"images/pwaicons/16.png","sizes":"16x16","type":"image/png"},{"src":"images/pwaicons/32.png","sizes":"32x32","type":"image/png"},{"src":"images/pwaicons/48.png","sizes":"48x48","type":"image/png"},{"src":"images/pwaicons/64.png","sizes":"64x64","type":"image/png"},{"src":"images/pwaicons/128.png","sizes":"128x128","type":"image/png"},{"src":"images/pwaicons/144.png","sizes":"144x144","type":"image/png"},{"src":"images/pwaicons/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="about/index.html"/>
      <url>about/index.html</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>关于我</p><p class='p center small'>生活明朗，万物可爱✨</p><p>欢迎来到我的博客😝，这里是我记笔记的地方🙌，虽然有时候常常会忘记更新笔记，咕咕✋~</p><p>但是记笔记真的是一个很棒的习惯💪，能把学下来的知识进行积累，沉淀，有一句话说的好，能教给别人的知识，才是真正学会了的知识⚡</p><p>每周我都会尽量进行更新☁️，如果没更的话，可能是我忘了，也可能是我在钻研某个东西的时候太入迷了 <psw>肯定又熬夜了</psw></p><del>同学们不要学我，老是熬夜会长痘</del><p>给大家推荐一部番：</p><div class="site-card-group"><a class="site-card" target="_blank" href="https://www.bilibili.com/bangumi/play/ss21542/?from=search&seid=10927182858100936967"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn/img/vue120210426221121.png"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://static.hdslb.com/images/favicon.ico"/><span class="title">BiliBili</span><span class="desc">紫罗兰的永恒花园</span></div></a></div><br>博主名为Violet也是因为这部番，2018年的一个夏天我看完以后心情久久不能释怀，为薇尔莉特与爱感到一种说不上来的味道，多年以后在看这部番，才明白原来这就是爱，喜欢这部番不仅仅是因为它制作的用心，不论是人物细节还是场景细节，不管是op还是ed都非常好听，最后的结局或许才是让我不能忘怀的原因，薇尔莉特，希望收到来自家人，朋友，恋人的那封 "信" ~<div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>致力于成为一个前端小姥🐷 <img class=inline-img src= "/img/loading.gif" data-lazy-src=https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif/></p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>又菜又爱玩🎮 <kbd>ctrl</kbd> + <kbd>C</kbd>、<kbd>ctrl</kbd> + <kbd>V</kbd>高级CV工程师🏆</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>擅长PS、Pr、Ae、Au、Ai、Dw、An、Id等软件的安装与卸载🎃</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>精通Html、CSS、JavaScript、PHP、Java、Python、C、C++、C#、Go、TypeScript等单词的拼写🎲</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>熟悉Windows、Linux、Mac、Android、IOS等系统的开关机👻</p>            </div><div class="timeline"><div class="timenode"><div class="meta"><p><p>2020-04-26</p></p></div><div class="body"><ol><li>实现提交issues自动更新友链</li><li>完善评论更改为使用Twikoo + Valine</li><li>增加邮件模板</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-04-26</p></p></div><div class="body"><ol><li><p>再次巩固pwa，并对hexo的两种pwa实现方式进行加固学习</p></li><li><p>添加控制台彩蛋</p></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-04-24</p></p></div><div class="body"><ol><li><p>使用tidio添加在线聊天功能</p></li><li><p>添加Waline评论功能</p></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-04-22</p></p></div><div class="body"><p>添加aplayer音乐</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-19</p></p></div><div class="body"><p>添加阿里矢量图标库支持</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-16</p></p></div><div class="body"><ol><li><p>添加github-badge，写下我的活跃度</p></li><li><p>添加标签卖萌</p></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-04-14</p></p></div><div class="body"><p>添加数据集合标签issues支持</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-11</p></p></div><div class="body"><p>添加loading动画</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-11</p></p></div><div class="body"><p>对站点进行第一次pwa尝试</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-09</p></p></div><div class="body"><ol><li><p>为站点添加时钟插件</p></li><li><p>为站点添加底部建站时间插件</p></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-04-06</p></p></div><div class="body"><p>写下第一篇Blog并对站点进行优化</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-03</p></p></div><div class="body"><p>根据文档完全读懂所有配置</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-01</p></p></div><div class="body"><p>进行UI调整，使用Butterfly 3.7.1主题</p></div></div><div class="timenode"><div class="meta"><p><p>2020-03-31</p></p></div><div class="body"><p>搭建博客 Violet`Blog</p></div></div><div class="timenode"><div class="meta"><p><p>2021-03-31</p></p></div><div class="body"><p>qwq3.top域名注册</p></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>朋友圈</title>
      <link href="fcircle/index.html"/>
      <url>fcircle/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="comments/index.html"/>
      <url>comments/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>bangumis</title>
      <link href="bangumis/index.html"/>
      <url>bangumis/index.html</url>
      
        <content type="html"><![CDATA[<!-- hexo bangumi -u 命令更新番剧数据 --><!-- hexo bangumi -d 删除数据命令 -->]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友人帐</title>
      <link href="link/index.html"/>
      <url>link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐馆</title>
      <link href="music/index.html"/>
      <url>music/index.html</url>
      
        <content type="html"><![CDATA[<h2>我的音乐收藏</h2><p><strong>2021/4/26</strong></p><h3 id="万物有灵✨"><a href="#万物有灵✨" class="headerlink" title="万物有灵✨"></a>万物有灵✨</h3>  <div class="aplayer no-destroy" data-id="7794756738" data-server="tencent" data-type="playlist"   data-order="order" data-preload="auto" data-autoplay="false" data-mutex="true" ></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>HTML CSS特效</title>
      <link href="special/index.html"/>
      <url>special/index.html</url>
      
        <content type="html"><![CDATA[<div class="site-card-group"><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/01-social-icon-hover-glow-effect/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508105052.png"/></div><div class="info"><span class="title">社交图标Hover发光特效</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/02-login-form-glass-effect/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508114602.png"/></div><div class="info"><span class="title">登录表单玻璃特效</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/03-chatting-ui/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508114731.png"/></div><div class="info"><span class="title">移动聊天UI实现</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/04-svg-text-drawing-effect/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508131404.png"/></div><div class="info"><span class="title">文本绘制及渐变特效</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/05-button-hover-border-drawing-effect/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508130820.png"/></div><div class="info"><span class="title">按钮Hover边框绘制特效</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/06-libra-ui-concept/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508131620.png"/></div><div class="info"><span class="title">Libra概念UI设计实现</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/07-3d-cubic-images/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508131730.png"/></div><div class="info"><span class="title">3D立方体照片墙</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/08-parallax-scrolling/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508132247.png"/></div><div class="info"><span class="title">纯CSS页面视差滚动特效</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/09-japanese-pronunciation/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508132725.png"/></div><div class="info"><span class="title">CSS翻转特效制作五十音图</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/10-navigation-bar/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508132603.png"/></div><div class="info"><span class="title">导航高亮指示</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/11-canvas-bar-chart/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508133043.png"/></div><div class="info"><span class="title">原生Canvas实现柱状图</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/12-skill-progress-bar/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508133158.png"/></div><div class="info"><span class="title">CSS技能进度条表现效果</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/14-image-slider/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508133508.png"/></div><div class="info"><span class="title">图片轮播组件</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/15-responsive-navbar/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508133945.png"/></div><div class="info"><span class="title">响应式全屏导航</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/16-svg-animation-truck/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508134143.png"/></div><div class="info"><span class="title">SVG工厂动画</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/17-upload-button/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508134507.png"/></div><div class="info"><span class="title">动画上传按钮</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/18-elsa-magic-effect/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508134721.png"/></div><div class="info"><span class="title">冰雪奇缘魔法特效</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/19-profile-card/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508140105.png"/></div><div class="info"><span class="title">个人资料卡页面</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/20-typewritter-effect/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508140150.png"/></div><div class="info"><span class="title">打字机效果</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/21-range-slider/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508140305.png"/></div><div class="info"><span class="title">滑动选择器美化</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/23-fullwebsite-design-agency/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508140524.png"/></div><div class="info"><span class="title">整站-小米官网首页</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/24-fetch-get-data/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508140732.png"/></div><div class="info"><span class="title">使用 fetch 加载远程数据</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/25-neumorphism-tabs/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508140827.png"/></div><div class="info"><span class="title">新拟态选项卡</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/26-glassmorphism/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508140934.png"/></div><div class="info"><span class="title">玻璃态特效</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/27-glitch-effect/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508141015.png"/></div><div class="info"><span class="title">赛博朋克按钮</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/28-css-colors/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508141101.png"/></div><div class="info"><span class="title">HSL 颜色表示法</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/30-gradient-background-animation/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508141419.png"/></div><div class="info"><span class="title">渐变背景过渡动画</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/32-place-item-center/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508141537.png"/></div><div class="info"><span class="title">2行代码居中元素</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/33-text-image-layout/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508141643.png"/></div><div class="info"><span class="title">图片文字环绕</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/34-drag-drop-api/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508141713.png"/></div><div class="info"><span class="title">原生拖拽与拖放操作</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/35-collision-physics/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508141742.png"/></div><div class="info"><span class="title">JS 碰撞物理引擎</span></div></a><a class="site-card" target="_blank" href="http://201901240103.3vhost.net/Custom/36-wechat-emoji-effect/index.html"> <div class="img"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/WaterChen520/vuecdn2/img/20210508141830.png"/></div><div class="info"><span class="title">仿微信8.0表情动画</span></div></a></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="tags/index.html"/>
      <url>tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
